<html lang="en" class="js flexbox flexboxlegacy canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache promises svg inlinesvg smil svgclippaths gr__colleague-ss_washcoll_edu" id="doc" style=""><head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <title>Plan &amp; Schedule Courses - Washington College Student Application</title>

    



    <link rel="apple-touch-icon" sizes="57x57" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/apple-touch-icon-180x180.png">
    <link rel="icon" type="image/png" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/android-chrome-192x192.png" sizes="192x192">
    <link rel="icon" type="image/png" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/favicon-96x96.png" sizes="96x96">
    <link rel="icon" type="image/png" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/manifest.json">
    <meta name="msapplication-TileColor" content="#9f00a7">
    <meta name="msapplication-TileImage" content="https://cdn.elluciancloud.com/assets/1.1.6/favicon/mstile-144x144.png">
    <meta name="theme-color" content="#783084">
    <link rel="icon" href="https://cdn.elluciancloud.com/assets/1.1.6/favicon/favicon.ico">


<link href="https://cdn.elluciancloud.com/assets/1.1.6/css/ellucian-design-system-ltr.min.css" rel="stylesheet">

    
<script type="text/javascript" async="" src="https://www.google-analytics.com/analytics.js"></script><script async="" src="//www.googletagmanager.com/gtm.js?id=GTM-PBCT7V3"></script><script type="text/javascript">

    // Manage scope of string constants
    var Ellucian = Ellucian || {};

    //Global string constants
    var unsupportedBrowserMessage = "Your browser may not support all features required to fully use this application. Please upgrade to the latest version of this browser if you encounter any issues.";
    var panelBackLinkString = "Back";
    var panelBackTextString = "Return to Previous Page";
    var expandAllLabel = 'Expand All';
    var collapseAllLabel = 'Collapse All';
    var screenReaderExternalLinkMessage = 'External Link';

    var requiredFieldMessageString = "This field is required.";
    var maximumLengthMessageString = "This field cannot be more than {0} characters long.";
    var minimumLengthMessageString = "This field must be at least {0} characters long.";
    var invalidEmailAddressMessageString = "Please enter a valid email address.";
    var invalidDateMessageString = "Please enter a valid date.";
    var emailMismatchMessageString = "The email addresses do not match";
    var governmentIdMismatchMessageString = "The SSN values do not match";
    var invalidPhoneNumberString = "Please enter a valid phone number.";
    var percError = "Could not access Person Restrictions";
    var restrictionConfigurationError = "Could not access Restriction Configuration";
    var phoneLengthErrorMessage = "Phone number must have between 7 and 15 numerical digits";

    var navigationCheckboxExpandText = 'Check to expand menu';
    var navigationMenuOpenText = 'Open the navigation menu';
    var navigationMenuCloseText = 'Close the navigation menu';

    var searchFailedMessage = 'Search for {0} failed.  Please try again.';
    var clearSearch = 'Clear search results for {0}';
    var personPrivacyMessage = 'You can&#39;t access this record due to the person&#39;s request for privacy.';

    // Person Proxy strings
    var personProxyActionThrobberMessage = 'Updating your person proxy information...';
    var personProxyEditProxyAccessThrobberMessage = 'Loading the proxy access edit dialog box...';
    var personProxySearchingThrobberMessage = 'Searching for matches...';
    var personProxyLoadingThrobberMessage = 'Loading the proxy selection dialog box...';
    var personProxyLoadingThrobberAltText = 'Loading available users...';
    var personProxyChangingThrobberMessage = 'Switching to user {0}...';
    var personProxyChangingThrobberAltText = 'Changing to user {0}';
    var verifyingPasswordMessage = 'Verifying your password...';
    var verifyingPasswordAltText = 'Verifying user password';
    var personProxyAddProxyDropdownCaptionText = 'Please Select';
    var personProxyPhotoTitleText = 'Photo of {0}';
    var personProxyAddProxySelectedMessage = '{0} selected.';
    var personProxyEditAccessButtonText = 'Update Proxy Access for {0}';
    var personProxyUnableToLoadMessage = 'Unable to retrieve your person proxy information.';
    var personProxyUnableToEditMessage = 'Unable to edit proxy access.';
    var personProxyUnableToUpdateMessage = 'Unable to update your person proxy information.';
    var personProxySuccessfulUpdateMessage = 'Proxy access successfully updated for {0}.';
    var personProxyFailedUpdateMessage = 'Proxy access could not be updated for {0}.';
    var personProxyNoActiveProxiesMessage = 'You do not have any designated proxies.';
    var personProxyNoActiveProxiesAddAProxyMessage = ' Add one now to allow another self-service user to view or edit your account.';
    var proxySelectionUnableToLoadSubjectsMessage = 'Unable to load users for which you can act as a proxy.';
    var proxySelectionUserSelectedMessage = 'User {0} selected.';
    var proxySearchNoResultsMessage = 'An error occurred while searching for possible matching users.';
    var proxyAccessLevelLegend = 'Set proxy access for {0} to ';
    var proxyRequestSuccessfulMessage = 'Your request was processed successfully.';
    var loadingReauthorizationSpinnerMessage = 'Reauthorizing proxy access...';
    var reauthorizationProcessedMessage = 'Your reauthorization was processed successfully.';
    var reauthorizationFailureMessage = 'Your reauthorization was not processed.  Please try again or contact your institution.';
    var reviewDisclosureAgreementButtonLabel = 'Review Disclosure Agreement';
    var reauthorizeAccessButtonLabel = 'Reauthorize Proxy Access';
    var ProxyPermissionGroupTooltipTextSF = 'Here you can grant others access to your financial information and statements, as well as give them the ability to make a payment online.';
    var ProxyPermissionGroupTooltipTextFA = 'Here you can grant others access to inquiry-only viewing of your financial aid data, forms, etc.';
    var ProxyPermissionGroupTooltipTextCore = 'Here you can view general user information, such as notifications.';

    Ellucian.Proxy = Ellucian.Proxy || {};
    Ellucian.Proxy.ButtonLabels = {
        editProxyAccessDialogSaveButtonLabel: 'Save',
        editProxyAccessDialogCancelButtonLabel: 'Cancel',
        reauthorizeConfirmButtonLabel: 'Save',
        confirmSelectedPersonDialogButtonLabel: 'Continue',
        saveProxySelectionDialogButtonLabel: 'Continue',
        cancelProxySelectionDialogButtonLabel: 'Cancel'
    };

    //Guest user settings
    var guestUserLabel = 'Guest';

    Ellucian.Course = Ellucian.Course || {};
    Ellucian.Course = function () {
        var searchResultClass = {
            // course catalog
            stringUpdatingFiltersSpinner: 'Updating Filters...',
            stringAddingCourseSpinner: 'Adding Course to Plan...',
            stringAddingSectionSpinner: 'Adding Section to Schedule...',
            stringCourseSearchResultLoadingDataSpinnerMessage: 'Loading Course Results...',
            stringCourseSearchResultLoadingSectionsText: 'Retrieving section information...',
            stringDetailsLoadingText: 'Retrieving information...',
            stringTimeFilterEarlyMorning: 'Early Morning (Midnight - 8am)',
            stringTimeFilterMorning: 'Morning (8am - Midday)',
            stringTimeFilterAfternoon: 'Afternoon (Midday - 4pm)',
            stringTimeFilterEvening: 'Evening (4pm - 8pm)',
            stringTimeFilterNight: 'Night (8pm - Midnight)',
            timesDatesDelimiter: '-'
        };

        var sectionDetailsClass = {
            //global utility for planning and course catalog search
            //Ellucian.Colleague.Dtos.Student.GradingType.Audit
            stringAuditGrading: 'Audit',
            stringAuditGradingCode: '2',
            //Ellucian.Colleague.Dtos.Student.GradingType.Graded
            stringGradedGrading: 'Graded',
            stringGradedGradingCode: '0',
            //Ellucian.Colleague.Dtos.Student.GradingType.PassFail
            stringPassFailGrading: 'Pass/Fail',
            stringPassFailGradingCode: '1',
            // A message to display when there is no course description to show
            courseDescriptionUnavailable: 'No Description Available'
        };

        var sectionCourseCommonDetailsClass = {
            SectionDialogTitle: 'Section Details',
            SectionAddButtonLabel: 'Add Section',
            CloseButton: 'Close',
            SectionCloseTitle: 'Close Section Details',
            SectionFullWaitlistWarning: 'This section has a waitlist.',
            SectionFullWarning: 'This section is full.',
            CourseDialogTitle: 'Course Details',
            CourseAddButtonLabel: 'Add Course to Plan',
            CourseUpdateButtonLabel: 'Update Course',
            CourseCloseTitle: 'Close Course Details',
            CourseTypicallyOffered: 'This course is typically offered: {0}',
            MinimumToMaximumCreditsFormatString: '({0} to {1} credits)',
            ToBeDeterminedAbbreviation: 'TBD',
            SendEmailToFormatString: 'Send an email to {0}',
            SeatlistFormatString: '{0} of {1} Total',
            AdditionalFeesApplyString: 'Additional fees apply'

        };

        var actionURLClass = {};

        return {
            courseDelimiter: '-',
            SearchResult: searchResultClass,
            SectionDetails: sectionDetailsClass,
            ActionUrls: actionURLClass,
            SectionCourseCommonDetails: sectionCourseCommonDetailsClass
        }
    }();

    Ellucian.Tasks = Ellucian.Tasks || {};
    Ellucian.Tasks.Resources = Ellucian.Tasks.Resources || {};
    Ellucian.Tasks.Resources = {
        TasksWidgetHeader: 'My Tasks'
    };

    Ellucian.SharedComponents = Ellucian.SharedComponents || {};
    Ellucian.SharedComponents.ButtonLabels = {
        buttonTextCancel: 'Cancel',
        buttonTextClose: 'Close',
        buttonTextAccept: 'Accept',
        buttonTextVerifyPassword: 'Submit',
        buttonTextOk: 'OK'
    };

    Ellucian.SharedComponents.ComplexTable = {
        ComplexTableDropdownText: 'Hide/Show/Order Columns',
        ComplexTableResetSettings: 'Reset',
        ComplexTableSaveSettings: 'Save',
        ComplexTableExpandCollapseButtonText: 'Expand/Collapse',
        ComplexTableSaveSuccess: 'Settings saved successfully.',
        ComplexTableResetSuccess: 'Settings reset successfully.'
    };

    Ellucian.CatalogAdvancedSearch = Ellucian.CatalogAdvancedSearch || {};
    Ellucian.CatalogAdvancedSearch.MarkupLabels = {
        academicLevelLabel: 'Academic Level',
        addCourseButtonLabel: 'Add More...',
        clearButtonLabel: 'Clear',
        courseLabel: 'Courses',
        dayOfWeekLabel: 'Days Of Week',
        endMeetingDateLabel: 'Meeting End Date ',
        headerText: 'Catalog Advanced Search',
        loadingMessageText: 'Loading Search Options...',
        locationLabel: 'Location',
        searchButtonLabel: 'Search',
        startMeetingDateLabel: 'Meeting Start Date',
        subjectSelectCaption: 'Subject',
        termLabel: 'Term',
        termSelectCaption: 'Select Term',
        timeOfDayLabel: 'Time Of Day',
        timeOfDayCaption: 'Select Time Of Day',
        spinnerMessageText: 'Retrieving information...',
        endMeetingDateImproperMessage: 'End meeting date is less than Start meeting date',
        endMeetingDateRangeMessage: 'End date should be in range of',
        endMeetingDateRequiredMessage: 'Meeting end date is required',
        invalidDateFormatErrorMessage: 'Invalid date format',
        startMeetingDateImproperMessage: 'Start meeting date is greater than End meeting date',
        startMeetingDateRangeMessage: 'Start date should be in range of',
        startMeetingDateRequiredMessage: 'Meeting start date is required',
        locationSelectCaption: 'Select Location',
        academicLevelSelectCaption: 'Select Academic Level',
        subjectLabel: 'Subject',
        courseNumberLabel: 'Course number',
        sectionNumberLabel: 'Section',
        addCourseButtonDescription: 'Add more courses for search',
        loadingSubjectsMessageText: 'Loading Subjects...',
        courseTypeLabel: 'Course Type',
        courseTypeSelectCaption: 'Select Course Type'

    };

    Ellucian.Admin = Ellucian.Admin || {};
    Ellucian.Admin.Resources = Ellucian.Admin.Resources || {};
    Ellucian.Admin.Resources = {
        ButtonTextConfirmDelete: 'Confirm Delete',
        ButtonTextConfirmOverwrite: 'Confirm Overwrite',
        PermanentDeletePrompt: 'Do you want to permanently delete {0}?',
        OverwriteFilePrompt: 'The file {0} already exists. Do you want to overwrite this file?',
        ColorErrorMessage: 'Please enter a valid color.'
    };

    Ellucian.ResourceFileEditor = Ellucian.ResourceFileEditor || {};
    Ellucian.ResourceFileEditor.Resources = Ellucian.ResourceFileEditor.Resources || {};
    Ellucian.ResourceFileEditor.Resources = {
        ChangesSavedSuccessfully: 'Changes saved successfully for {0}.',
        SaveButtonLabel: 'Save',
        UnsavedChangesLeavingPage: 'Changes will be lost if you leave the page. Do you want to save?',
        UnsavedChangesDialogTitle: 'Unsaved Data'
    };

    Ellucian.Site = Ellucian.Site || {};
    Ellucian.Site.Resources = Ellucian.Site.Resources || {};
    Ellucian.Site.Resources = {
        PersonProfilePhotoDefaultAltText: 'Person&#39;s profile photo',
        SpinnerDefaultMessage: 'Loading Data...',
        SpinnerLoadingCompleteMessage: 'Loading complete.',
        PersonRestrictionsWidgetTitle: 'Notifications',
        PersonRestrictionsWidgetError: 'Unable to retrieve person restrictions.'
    };

    Ellucian.Navigation = Ellucian.Navigation || {};
    Ellucian.Navigation.Resources = Ellucian.Navigation.Resources || {};
    Ellucian.Navigation.Resources = {
        NotificationsTitle: 'Title',
        NotificationsDetails: 'Details',
        NotificationsLink: 'Link',
    };

    // Pager component strings.
    Ellucian.Pager = Ellucian.Pager || {};
    Ellucian.Pager.PageLabel = 'Page';
    Ellucian.Pager.OfLabel = 'of';
    Ellucian.Pager.PerPageLabel = 'Per Page:';
    Ellucian.Pager.TotalLabel = 'Total:';
    Ellucian.Pager.ViewAllLabel = 'View All';
    Ellucian.Pager.GoToFirstTitle = 'first';
    Ellucian.Pager.GoToPreviousTitle = 'previous';
    Ellucian.Pager.GoToNextTitle = 'next';
    Ellucian.Pager.GoToLastTitle = 'last';
    Ellucian.Pager.AriaButtonGroupLabel = 'paging controls';
    Ellucian.Pager.AriaPageNumberLabel = 'Page number';

    // Budget Adjustment component strings
    Ellucian.BudgetAdjustment = Ellucian.BudgetAdjustment || {};
    Ellucian.BudgetAdjustment.BudgetAdjustmentLabel = 'Budget Adjustment';
    Ellucian.BudgetAdjustment.CollapseLabel = 'Collapse';
    Ellucian.BudgetAdjustment.CancelLabel = 'Cancel';
    Ellucian.BudgetAdjustment.CloseLabel = 'Close';
    Ellucian.BudgetAdjustment.InitiateStepLabel = 'Initiate';
    Ellucian.BudgetAdjustment.AdjustmentsStepLabel = 'Adjustments';
    Ellucian.BudgetAdjustment.SummaryStepLabel = 'Summary';
    Ellucian.BudgetAdjustment.NextButtonLabel = 'Next';
    Ellucian.BudgetAdjustment.PreviousButtonLabel = 'Previous';
    Ellucian.BudgetAdjustment.SubmitButtonLabel = 'Submit';
    Ellucian.BudgetAdjustment.TransactionDetailsLabel = 'Transaction Details';
    Ellucian.BudgetAdjustment.TransactionDetailsStatement = 'Enter the transaction details to initiate a budget adjustment.';
    Ellucian.BudgetAdjustment.TransactionDateLabel = 'Transaction Date';
    Ellucian.BudgetAdjustment.InitiatorLabel = 'Initiator';
    Ellucian.BudgetAdjustment.InitiatorPlaceholder = 'Responsible person';
    Ellucian.BudgetAdjustment.ReasonLabel = 'Reason';
    Ellucian.BudgetAdjustment.ReasonPlaceholder = 'Reason for adjustment';
    Ellucian.BudgetAdjustment.AccountsLabel = 'Accounts';
    Ellucian.BudgetAdjustment.AccountLabel = 'Account';
    Ellucian.BudgetAdjustment.FromAmountLabel = 'From';
    Ellucian.BudgetAdjustment.ToAmountLabel = 'To';
    Ellucian.BudgetAdjustment.RemainingBalanceLabel = 'Adj. Remaining Balance';
    Ellucian.BudgetAdjustment.AccountPlaceholder = 'Enter GL Account';
    Ellucian.BudgetAdjustment.FromAmountPlaceholder = 'From Amount';
    Ellucian.BudgetAdjustment.ToAmountPlaceholder = 'To Amount';
    Ellucian.BudgetAdjustment.AddAnotherAccountLabel = '+ Add Another Account';
    Ellucian.BudgetAdjustment.BalancedTransactionLabel = 'balanced transaction';
    Ellucian.BudgetAdjustment.UnbalancedTransactionLabel = 'unbalanced transaction';
    Ellucian.BudgetAdjustment.CommentsLabel = 'Comments';
    Ellucian.BudgetAdjustment.CommentsPlaceholder = 'Add Comments';
    Ellucian.BudgetAdjustment.TotalFromLabel = 'Total From';
    Ellucian.BudgetAdjustment.TotalToLabel = 'Total To';
    Ellucian.BudgetAdjustment.SummaryFromTotalLabel = 'Total';
    Ellucian.BudgetAdjustment.SummaryToTotalLabel = 'Total';
    Ellucian.BudgetAdjustment.TransactionDateOpenYearError = 'Date does not fall in an open fiscal year.';
    Ellucian.BudgetAdjustment.TransactionDateFormatError = 'Please enter a valid date.';
    Ellucian.BudgetAdjustment.BudgetAdjustmentSuccess = 'Budget Journal Number {0} ({1}) submitted successfully. Click Close to continue.';
    Ellucian.BudgetAdjustment.CancelAdjustmentDialogHeader = 'Cancel Budget Adjustment';
    Ellucian.BudgetAdjustment.CancelAdjustmentDialogBody = 'Are you sure you want to cancel this budget adjustment?';
    Ellucian.BudgetAdjustment.Yes = 'Yes';
    Ellucian.BudgetAdjustment.No = 'No';
    Ellucian.BudgetAdjustment.SubmissionErrorLabel = 'Please correct the following errors before submitting budget adjustment:';
    Ellucian.BudgetAdjustment.TransactionDateBeforeFiscalYearWarning = 'Transaction date falls outside of current fiscal year.';
    Ellucian.BudgetAdjustment.TransactionDateAfterFiscalYearWarning = 'Transaction date falls beyond the current fiscal year.';
    Ellucian.BudgetAdjustment.TransactionDateFutureFiscalYearWarning = 'Transaction date falls in a future fiscal year.';
    Ellucian.BudgetAdjustment.TransactionDateFutureFiscalMonthWarning = 'Transaction date falls in a future month.';
    Ellucian.BudgetAdjustment.TransactionDateClosedMonthError = 'Transaction date falls in a prior closed month.';
    Ellucian.BudgetAdjustment.ConfigurationLoadError = 'Failed to load budget adjustment configuration.';
    Ellucian.BudgetAdjustment.MinimumAdjustmentLinesMessage = 'You must enter a minimum of 2 adjustment lines.';
    Ellucian.BudgetAdjustment.BudgetAdjustmentMustBalanceMessage = 'The budget adjustment transaction must balance.';
    Ellucian.BudgetAdjustment.AdjustmentLineMustContainAmountMessage = 'Each line must contain a positive From Amount or To Amount.';
    Ellucian.BudgetAdjustment.AdjustmentLineMustContainAccountMessage = 'Each line must contain a GL account number and a From or To amount.';
    Ellucian.BudgetAdjustment.AdjustmentLineHasInsufficientFundsMessage = '{0} has insufficient budget for transfer.';
    Ellucian.BudgetAdjustment.NoDuplicateAccountsMessage = 'A GL account may only appear once in a transaction.';
    Ellucian.BudgetAdjustment.GlValidationLoadError = 'Unable to validate GL account.';
</script>
    <!-- Copyright 2015-2017 Ellucian Company L.P. and its affiliates. -->
<script type="text/javascript">
    var homeUrl = '/Student/';
    var logOffUrl = '/Student/Account/LogOff';
    var reauthenticateUrl = '/Student/Account/VerifyPasswordAsync';
    var logInUrl = '/Student/Account/Login?returnUrl=%2FStudent%2FPlanning%2FDegreePlans';
    var baseUrl = '/Student/';

    // Person Proxy
    var personProxyIndexActionUrl = '/Student/PersonProxy';
    var personProxyActionUrl = '/Student/PersonProxy/GetPersonProxyModel';
    var updatePersonProxyInformationActionUrl = '/Student/PersonProxy/UpdatePersonProxyInformation';
    var reauthorizeAccessActionUrl = '/Student/PersonProxy/ReauthorizeAccessAsync';
    var getProxyInfoForEditActionUrl = '/Student/PersonProxy/GetProxyInformationForEdit';
    var getProxySubjectsActionUrl = '/Student/PersonProxy/GetProxySubjectsAsync';
    var setProxySubjectActionUrl = '/Student/PersonProxy/SetProxySubjectAsync';
    var searchForMatchesActionUrl = '/Student/PersonProxy/QueryMatchingPersonsAsync';
    var processSearchResultsActionUrl = '/Student/PersonProxy/ProcessResultsAsync';

    // Notifications
    var getEffectiveUserRestrictionsAsync = '/Student/Home/GetEffectiveUserRestrictions';
    var getRestrictionConfigurationAsync = '/Student/Home/GetRestrictionConfigurationAsync';
    var notificationLabel = 'Notifications';

    //Guest User course catalog
    var Ellucian = Ellucian || {};
    Ellucian.Course = Ellucian.Course || {};
    Ellucian.Course.ActionUrls = {
        getSubjectsActionUrl: '/Student/Planning/Courses/GetSubjects',
        getAdvancedSearchUrl: '/Student/Planning/Courses/GetCatalogAdvancedSearchAsync',
        postAdvancedSearchUrl: '/Student/Planning/Courses/Search',
        searchCourseCatalogActionUrl: '/Student/Planning/Courses/Search',
        searchCourseCatalogAsyncActionUrl: '/Student/Planning/Courses/SearchAsync',
        getSectionsActionUrl: '/Student/Planning/Courses/SectionsAsync',
        sectionDetailsActionUrl: '/Student/Planning/Courses/SectionDetails'
    }

    // Person Restrictions
    Ellucian.PersonRestrictions = Ellucian.PersonRestrictions || {};
    Ellucian.PersonRestrictions.ActionUrls = {
        getPersonRestrictionsModelActionUrl: '/Student/PersonRestrictions/GetPersonRestrictionsModelAsync'
    }

    //Course and Section Details
    var courseDetailsActionUrl = '/Student/Planning/Courses/CourseDetails';

    // resources
    var getResourceUrl = '/Student/ResourceFiles/GetResourceFile';

    // Profile Photos/Avatars
    var defaultPhotoUrl = '/Student/Content/Images/default-avatar.gif';
    var userPhotoBaseUrl = '/Student/UserProfile/UserProfilePhoto' + '/';

    // Workflow
    var getWorkflowTasksActionUrl = '/Student/WorkflowTasks/GetWorkTasksAsync';

    // Admin
    var postCertificatesActionUrl = '/Student/Planning/Admin/ApplicationCertificates';
    var postBrandingActionUrl = '/Student/Planning/Admin/Branding';
    var resourceFileEditorCancelActionUrl = '/Student/Planning/Admin';

    // Budget Adjustment
    Ellucian.BudgetAdjustment = Ellucian.BudgetAdjustment || {};
    Ellucian.BudgetAdjustment.BudgetAdjustmentConfigurationUrl = '/Student/BudgetAdjustment/GetBudgetAdjustmentConfigurationAsync';
    Ellucian.BudgetAdjustment.BudgetAdjustmentGlAccountValidationUrl = '/Student/BudgetAdjustment/GetGlAccountValidationAsync';
    Ellucian.BudgetAdjustment.SubmitBudgetAdjustmentUrl = '/Student/BudgetAdjustment/SubmitBudgetAdjustment';
</script>


    <link href="/Student/Content/themes/base/css?v=pdW5xhM5XkwL9MNAE5Y4-xJ_V8vz_Jhx5vev7gBNAS41" rel="stylesheet">
<link href="/Student/Content/css?v=HYWUzxcn2HG6H9ZX4vbfATiymviC__XkdWXQc1TcjOQ1" rel="stylesheet">


    
    <link href="/Student/Areas/Planning/Content/planningcss?v=M5YmNM0D695tMTG1lF79_5jkaQ0mcYw4azNAVvVJu0g1" rel="stylesheet">

    
    <link href="/Student/Areas/Planning/Content/PlanningBundlecss?v=SQo3f6yEnlJOeYZwmopE-wftakCfSz2zZTfHdlrt1oM1" rel="stylesheet">






    <link href="/Student/Content/cssoverrides?v=-3wvorsZzroiJDK1uKIQUfZ3q-0LbqExwo32giCDMDY1" rel="stylesheet">


    
    
    <script type="text/javascript">
    if (self === top) {
        var antiClickjack = document.getElementById("antiClickjack");
        antiClickjack.parentNode.removeChild(antiClickjack);
    } else {
        top.location = self.location;
    }
    </script>

    <!-- RespondJS must be loaded after all other CSS references so as not to interfere with the media queries -->
    <script src="/Student/bundles/respondjs?v=QtxRrbVxHAK-b5ZowWqv6Wt7oUOJAggG80vl1X-EGBM1"></script>


    <script src="/Student/bundles/jquery?v=5YpcwJa0Dea15P6JFrXCmFOSkBKSWlYNJ0UXd18mXwg1"></script>

    <script src="/Student/bundles/jqueryui?v=sZdYqw1D0mNVp1j92ObcXvT9_TZ0r5z5BQjECWcahAc1"></script>

    <script src="/Student/bundles/modernizr?v=PSqtVR2OaOseJ0W5qNzV1aSgxgp-VRnC0yynb2PhG3c1"></script>

    <script src="/Student/bundles/polyfills?v=5zFuD0_I25DR9D5yICcswdIoLWQvRvxlKd4lZelioLs1"></script>

    <script src="/Student/bundles/globalscripts?v=5fYxAGaEburGErm5vA9OKBFdcrKPKJVrpzuaCnc2eV81"></script>

    
    <script src="/Student/bundles/planningscripts?v=RGM6B1dBQaUEibVQD7i5Zt-_oRGjWq5qvZCJ2W-hoMk1"></script>

    
<script type="text/javascript">
    //Advising
    var adviseeListActionUrl = '/Student/Planning/Advisors/AdviseesAsync';
    var adviseeSearchActionUrl = '/Student/Planning/Advisors/SearchAsync';
    var getStudentGradeInfoUrl = '/Student/Student/Grades/GetStudentGradeInformationAsync';
    var advisingActionUrl = '/Student/Planning/Advisors/Advise';

    //Course Search
    var addCourseActionUrl = '/Student/Planning/DegreePlans/AddCourseAsync';
    var addCourseSectionActionUrl = '/Student/Planning/DegreePlans/AddSectionAsync';

    //Degree Plan
    var loadPlanUrl = '/Student/Planning/DegreePlans';
    
    var courseSearchAsyncUrl = '/Student/Planning/Courses/SearchAsync';
    var getActiveProgramsUrl = '/Student/Planning/Programs/GetActiveProgramsAsync';
    var printScheduleUrl = '/Student/Planning/DegreePlans/PrintSchedule';
    var registrationEligibilityActionUrl = '/Student/Planning/DegreePlans/CheckRegistrationEligibility';
    
    var saveAsIcalUrl = '/Student/Planning/DegreePlans/GetScheduleIcal';
    var getAvailableSectionsActionUrl = '/Student/Planning/DegreePlans/GetAvailableSectionsAsync';
    var getPlanArchivesUrl = '/Student/Planning/DegreePlans/GetPlanArchives';
    var getPlanArchiveReportUrl = '/Student/Planning/DegreePlans/GetPlanArchiveReport';
    
    var getStudentPetitionsWaiversActionUrl = '/Student/Planning/DegreePlans/GetStudentPetitionsWaiversAsync';

    //Requirements
    var loadMyProgressUrl = '/Student/Planning/Programs/MyProgress';
    var loadSamplePlanUrl = '/Student/Planning/DegreePlans/LoadSamplePlan';
    var previewSamplePlanUrl = '/Student/Planning/DegreePlans/PreviewSamplePlan';
    var programEvaluationUrl = '/Student/Planning/Programs/ProgramEvaluation';
    var evaluateRelatedProgramsUrl = '/Student/Planning/Programs/EvaluateRelatedPrograms';
    var programEvaluationNoticesUrl = '/Student/Planning/Programs/GetProgramEvaluationNotices';

    // Immediate Payments - These will be blank if Finance is not installed
    var paymentRequiredActionUrl = '/Student/Finance/ImmediatePayments/GetIncompletePayments';
    var immediatePaymentActionUrl = '/Student/Finance/ImmediatePayments';

    // Student Test scores
    var testScoresActionUrl = '/Student/Planning/TestScores/GetTestScoresAsync';

    // Transcripts
    var unofficialTranscriptsActionUrl = '/Student/Planning/Transcripts/GetStudentTranscriptGroupings';
    var getUnofficialTranscriptActionUrl = '/Student/Planning/Transcripts/GetUnofficialTranscriptAsync?transcriptGrouping={0}&studentId={1}';
    var getTranscriptRestrictionUrl = '/Student/Planning/Transcripts/GetTranscriptRestrictionAsync';

</script>


<script type="text/javascript">
    var Ellucian = Ellucian || {};
    Ellucian.Planning = Ellucian.Planning || {};

    Ellucian.Planning.planRepositoryUrls = {
        // Get endpoint
        get: '/Student/Planning/DegreePlans/CurrentAsync',

        // Registration endpoints
        registerSections: '/Student/Planning/DegreePlans/RegisterSections',
        completeRegistration: '/Student/Planning/DegreePlans/CompleteRegistration',

        // Term endpoints
        addTerm: '/Student/Planning/DegreePlans/AddTermAsync',
        removeTerm: '/Student/Planning/DegreePlans/RemoveTermAsync',

        // Course endpoints
        addCourse: '/Student/Planning/DegreePlans/AddCourseAsync',
        updateCourse: '/Student/Planning/DegreePlans/UpdateCourseAsync',
        removeCourse: '/Student/Planning/DegreePlans/RemoveCourseAsync',

        // Section endpoints
        addSection: '/Student/Planning/DegreePlans/AddSectionAsync',
        removeSection: '/Student/Planning/DegreePlans/RemoveSectionAsync',

        // Advising endpoints
        requestReview: '/Student/Planning/DegreePlans/SendToAdvisorAsync',
        completeReview: '/Student/Planning/Advisors/ReviewCompleteAsync',
        submitNote: '/Student/Planning/DegreePlans/AddAdvisingNoteAsync',
        approveCourses: '/Student/Planning/Advisors/ApproveCoursesAsync',
        archivePlan: '/Student/Planning/DegreePlans/ArchivePlanAsync',
        updateProtection: '/Student/Planning/Advisors/UpdatePlanProtectionAsync',
        completeAdvisement: '/Student/Planning/Advisors/AdvisementCompleteAsync',

        clearPlannedCourses: '/Student/Planning/DegreePlans/ClearPlannedCoursesAsync'
    };
</script>


<script type="text/javascript">
    var Ellucian = Ellucian || {};
    Ellucian.Planning = Ellucian.Planning || {};

    Ellucian.Planning.requirementsRepositoryUrls = {
        get: '/Student/Planning/Programs/GetStudentProgramEvaluations'

    };
</script>

    
<script type="text/javascript">

    var Ellucian = Ellucian || {};

    Ellucian.DegreePlans = Ellucian.DegreePlans || {};
    Ellucian.DegreePlans.Resources = Ellucian.DegreePlans.Resources || {};
    Ellucian.DegreePlans.Resources.AddTermDialogTitle = 'Add a Term to Your Plan';
    Ellucian.DegreePlans.Resources.UiAddTermPopupButtonText = 'Add Term';
    Ellucian.DegreePlans.Resources.UiAddTermCancelButtonText = 'Cancel';
    Ellucian.DegreePlans.Resources.ClearTermDialogTitle = 'Remove Planned Courses';
    Ellucian.DegreePlans.Resources.RemoveItemButtonText = 'Remove';
    Ellucian.DegreePlans.Resources.RemoveItemCancelButtonText = 'Cancel';
    Ellucian.DegreePlans.Resources.UiDropTitle = 'Register and Drop Sections';
    Ellucian.DegreePlans.Resources.DropDialogDrop = 'Update';
    Ellucian.DegreePlans.Resources.DropDialogCancel = 'Cancel';
    Ellucian.DegreePlans.Resources.RemoveCourseDialogTitle = 'Confirm Remove Course';
    Ellucian.DegreePlans.Resources.RemoveItemButtonText = 'Remove';
    Ellucian.DegreePlans.Resources.RemoveItemCancelButtonText = 'Cancel';
    Ellucian.DegreePlans.Resources.RemoveTermDialogTitle = 'Confirm Remove Term';


    //Advising
    var assignedAdviseeTitle = 'Manage advisee {0} ({1})';
    var unassignedAdviseeTitle = 'Manage student {0} ({1})';
    var stringAddingAdvisingNote = 'Adding note...';
    var stringActionFailed = 'The course plan cannot be modified at this time';
    var stringProcessingApprovalSpinner = 'Processing approval update...';
    var stringEvaluatingProgramSpinner = 'Evaluating Program...';
    var stringReviewCompleteSpinner = 'Completing review process...';
    var stringPendingApprovals = 'You have one or more advisees who have requested a review.';
    var stringArchivePlan = 'Would you like to archive this course plan?';
    var stringArchivePlanYes = 'Archive';
    var stringArchivePlanNo = 'Cancel';
    var stringArchivePlanOffScreenBy = ' by ';
    var stringArchivePlanOffScreenFor = ' (PDF) plan for ';
    var stringArchivingSpinnerMessage = 'Archiving Plan...';
    var stringUpdatingProtectionMessage = 'Updating Plan Protection...';
    var stringAdvisorsTestScoreSpinnerMessage = 'Loading Student&#39;s Test Scores...';
    var stringAdvisorsMainSpinnerMessage = 'Loading Student&#39;s Plan...';
    var stringAdvisorsCatalogSpinnerMessage = 'Loading Course Catalog...';
    var stringAdvisorsProgressSpinnerMessage = 'Loading Student&#39;s Progress...';
    var stringAdvisorsDegreePlanArchiveSpinnerMessage = 'Loading Student&#39;s Plan Archives...';
    var stringAdvisorsTranscriptSpinnerMessage = 'Loading Student&#39;s Transcript(s)...';
    var stringAdvisorsLoadingDataSpinnerMessage = 'Loading Advisees';
    Ellucian.Advisors = Ellucian.Advisors || {};
    Ellucian.Advisors.Resources = Ellucian.Advisors.Resources || {};
    Ellucian.Advisors.Resources.ConfirmAdvisementCompleteDialogTitle = 'Complete Advisement?';
    Ellucian.Advisors.Resources.ContinueButtonLabel = 'Continue';
    Ellucian.Advisors.Resources.CompletingAdvisementSpinner = 'Completing advisement for student...';
    Ellucian.Advisors.Resources.AdvisementCompletedSuccessfullyMessage = 'Student advisement marked complete'
    Ellucian.Advisors.Resources.UnableToCompleteAdvisementError = 'Unable to complete advisement at this time. Please try again later.';
    Ellucian.Advisors.Resources.RequestForAdviseesFailedMessage = 'Request for advisees failed.';
    Ellucian.Advisors.Resources.SearchForAdviseesFailedMessage = 'Search for advisees failed.';

    //Course Search
    var addSectionLabelMobile = 'Add Section';
    var addSectionLabel = 'Add Section to Schedule';

    //Degree Plan, Schedule

    var stringAddingTermProcessing = 'Adding term to plan...';
    var stringRegistrationMessage = 'Processing Registration';
    var stringRemovingTermProcessing = 'Removing term from plan...';
    var stringSubmitTermMessage = 'Processing...';
    var stringUpdatingCourseProcessing = 'Updating course data...';
    var stringFilterNoValueSelected = 'Any';
    var stringClearPlannedCourseProcessing = 'Removing planned courses...';
    var stringRegistrationCompleteMessage = 'Processing complete. Refreshing...';
    var refreshingRegistrationEligibility = 'Refreshing registration eligibility...';
    var scheduleStatusRegistered = 'Registered';
    var scheduleStatusPreregistered = 'Registered, but not started';
    var scheduleStatusCompleted = 'Completed';
    var scheduleStatusWithdrawn = 'Withdrawn';
    var scheduleStatusPlanned = 'Planned';
    var scheduleStatusWaitlisted = 'Waitlisted';
    var stringDroppingSectionMessage = 'You have elected to drop: ';
    var stringPlanningHomeLoadingDataSpinnerMessage = 'Loading My Data...';


    //Requirements
    var stringMultiProgressBarCreditsBreakdownPrefix = 'Credits breakdown:';

    //loadSamplePlanDialogTitle is also used here
    Ellucian.Programs = Ellucian.Programs || {};
    Ellucian.Programs.Resources = Ellucian.Programs.Resources || {};
    Ellucian.Programs.Resources.LoadSamplePlanDialogTitle = 'Load Sample Course Plan';
    Ellucian.Programs.Resources.UiPreviewSamplePlanButtonText = 'Preview Plan';
    Ellucian.Programs.Resources.UiLoadSamplePlanButtonText = 'Load';
    Ellucian.Programs.Resources.UiPreviewSamplePlanBackButtonText = 'Back';
    Ellucian.Programs.Resources.UiCancelButtonText = 'Cancel';
    Ellucian.Programs.Resources.UiProgramsDialogTitle = 'Academic Programs';
    Ellucian.Programs.Resources.ViewProgramButtonText = 'View Program';
    Ellucian.Programs.Resources.UiCancelButtonText = 'Cancel';

    var showRequirementsDetailLinkText = 'Show Details';
    var hideRequirementsDetailLinkText = 'Hide Details';
    var showRequirementsDetailAriaText = 'Show details for requirement';
    var hideRequirementsDetailAriaText = 'Hide details for requirement';
    var creditCompletedText = 'Completed';
    var creditInProgressText = 'In-Progress';
    var creditPreregisteredText = 'Registered';
    var creditWithdrawnText = 'Withdrawn';
    var creditAttemptedText = 'Attempted';

    var noCoursesLoadSampleProxy = 'It looks like this advisee doesn&#39;t have any courses planned.';
    var noCoursesLoadSample = 'It looks like you don&#39;t have any courses planned.';


    //Filtering sections
    var stringMondayFilter = 'Monday';
    var stringTuesdayFilter = 'Tuesday';
    var stringWednesdayFilter = 'Wednesday';
    var stringThursdayFilter = 'Thursday';
    var stringFridayFilter = 'Friday';
    var stringSaturdayFilter = 'Saturday';
    var stringSundayFilter = 'Sunday';
    var stringOpenSectionsFilter = 'Open Sections Only';

    // Transcripts
    var transcriptDownloadPdfLinkLabel = '{0} Transcript';

    // Home
    var registrationMode = 'false';

</script>


<script type="text/javascript">
    var Ellucian = Ellucian || {};
    Ellucian.Planning = Ellucian.Planning || {};

    Ellucian.Planning.planRepositoryMessages = {
        getFailed: 'Unable to retrieve course plan',
        studentIdRequired: 'Student ID is required to use planRepository',
        argumentError: 'There is a problem with the arguments',
        updateFailed: 'Update Failed',
        staleData: 'Your plan has been updated since you last viewed it and will now be refreshed. You will need to resubmit this action on the updated plan.',
    };
</script>


<script type="text/javascript">
    var Ellucian = Ellucian || {};
    Ellucian.Planning = Ellucian.Planning || {};

    Ellucian.Planning.requirementsRepositoryMessages = {
        studentIdRequired: 'Student ID is required to use planRepository',

    };
</script>

<script type="text/javascript">
    var Ellucian = Ellucian || {};
    Ellucian.Planning = Ellucian.Planning || {};

    Ellucian.Planning.planViewModelMessages = {

        noTermsCanBeAdded: "No terms can be added at this time.",
        removeNonTermSectionLabel: " the non-term section list",
        cannotAddSection: "The specified section cannot be added at this time.",
        specifyCredits: "Please specify the number of credits to take.",
        specifyCreditsRange: "Please specify a valid number of credits between {0} and {1}.",
        moreFilters: "{0} more...",
        unableToGetAvailableSections: "Unable to get available sections for term {0}.",
        getAvailableSections: "Retrieving available sections...",
        removingCourseProcessing: 'Removing item from plan...',
        updatingMessage: 'Updating Schedule'
    };
</script>
    
<script type="text/javascript">

    // These string constant definitions cannot be wrapped in quotes for various reasons;
    // they must be isolated from other string constants so that Jasmine JS tests may
    // reference those constants without tripping over the invalid JS created when this razor syntax is not processed
    // through the MVC framework.

    var forceEnableRegistrationButtons = false;
    var stringTabCodeReplacement = /[\.,-\/#!$%\^&amp;\*;:{}=\-_`~()&#39;]/g;  //this cannot have quotes around it, or else the replacement fails
    var detailsCollapsedByDefaultWhenFullyPlanned = false;
    var forceEnableRegistrationButtons = false;

</script>

    
<script type="text/javascript">

    var Ellucian = Ellucian || {};
    Ellucian.Student = Ellucian.Student || {};


    Ellucian.Student.Requests = {
        //Enrollment Verification Request strings
        enrollmentVerificationInfoGetFailure: 'Unable to get enrollment verification request information',
        enrollmentVerificationRequestSubmissionFailure: 'Request submission failed, please try again later',
        enrollmentVerificationRequestSubmissionSuccess: 'Request successful.',
        requestEmailConfirmation: 'Email has been sent to:',
        unableToSubmitEnrollmentRequestPayment: 'Enrollment Request Payment Failed.',
        loadingSpinnerMessage: 'Loading Requests',
        noEnrollmentVerificationRequests: 'No enrollment verification requests on file',
        submittingNewRequestMessage: 'Submitting New Request...',
        submitRequestPaymentMessage: 'Submitting Request Payment...',
        proceedToPaymentButton: 'Proceed to Payment',
        submitButtonLabel: 'Submit',
        makeAPaymentButtonText: 'Make a Payment',
        dropdownCaption: 'Please Select'
    };

    // Graduation Application strings
    Ellucian.Student.Graduation = Ellucian.Student.Graduation || {};
    Ellucian.Student.Graduation.Resources = {
        gradAppGetFailure: 'Unable to retrieve graduation information',
        gradAppUpdateSuccess: 'The graduation application has been updated',
        gradAppUpdateFailure: 'Unable to update the graduation application',
        gradAppProfileUpdateError: 'The graduation application has been updated; Unable to update the User Profile Address at this time.  Please try again later.',
        editMode: 'Click to edit your application.',
        viewMode: 'Application period closed. Application can only be viewed.',
        loadingSpinnerMessage: 'Loading the Graduation Application',
        yes: 'Yes',
        no: 'No',
        notApplicable: 'no entry',
        select: 'Please Select',
        major: 'Major',
        majors: 'Majors',
        minor: 'Minor',
        minors: 'Minors',
        specialization: 'Specialization',
        specializations: 'Specializations',
        ccd: 'CCD',
        ccds: 'CCDs',
        noPreferred: 'You do not have a preferred address',
        required: 'This is a Required Field',
        submit: 'Submit',
        proceedToPaymentButton: 'Proceed to Payment',
        save: 'Save',
        processingThrobberMessage: 'Submitting Application'
    };



    Ellucian.Student.TranscriptRequests = {
        //Transcript Requests strings
        transcriptInfoGetFailure: 'Unable to get transcript request information.',
        newTranscriptRequestSuccessMessage: 'New transcript request has been submitted.',
        unableToSubmitNewTranscriptRequestMessage: 'Unable to create new transcript request.',
        unableToSubmitTranscriptRequestPayment: 'Unable to complete transcript request payment.',
        noTranscriptRequestsMessage: 'No Transcript Requests on file',
    };

    Ellucian.Faculty = Ellucian.Faculty || {};
    Ellucian.Faculty.Resources = {
        stringAddingTextbookMessage: 'Adding book...',
        AddConsentSaveButtonText: 'Save',
        AddConsentSaveButtonAriaLabel: 'Save faculty consent for selected student',
        AddConsentCancelButtonText: 'Cancel',
        AddPetitionSaveButtonText: 'Save',
        AddPetitionSaveButtonAriaLabel: 'Save student petition for selected student',
        AddPetitionCancelButtonText: 'Cancel',
        AddWaiverSaveButtonText: 'Save',
        AddWaiverSaveButtonAriaLabel: 'Save waiver for selected student',
        AddWaiverCancelButtonText: 'Cancel',
        PostGradesButtonText: 'Post Grades',
        OKButtonText: 'OK',
        CancelButtonText: 'Cancel',
        PostGradeDialogHeader: 'Confirm grade posting',
        AddConsentDialogTitle: 'Add Faculty Consent',
        AddPetitionDialogTitle: 'Add Student Petition',
        AddWaiverDialogTitle: 'Add Student Waiver',
        LoadingDataSpinnerMessage: 'Loading My Data...',
        searchingForTextbooksMessage: 'Searching for books...',
        PriceValidationLabel: 'Value must be between $0 and $9999.99',
        IsbnValidationLabel: 'ISBN may only be letters, numbers, or dashes',
        stringIsbnLookupLabel: 'ISBN Lookup',
        stringRemoveBookError: 'An error occured while removing {0}.',
        stringRemoveBookConfirmation: '{0} was removed successfully.',
        stringManualBookAddSuccessMessage: 'Book was added successfully.',
        stringManualBookAddErrorMessage: 'An error occured while adding book.',
        stringAddNewBookLabel: 'New Book',
        stringAddToReadingListSuccessMessage: '{0} was added successfully.',
        stringBookInSectionError: '{0} is already in the section.',
        stringAddToReadingListLabel: 'Add to Reading List',
        stringAddBookConfirmationLabel: 'Are you sure you would like to add {0} to the reading list?',
        stringRemoveBookConfirmationLabel: 'Are you sure you would like to remove {0} from the reading list?',
        stringRemoveFromReadingListLabel: 'Remove From Reading List',
        stringRemoveLabel: 'Remove',
        stringUpdateAriaLabel: 'Update book requirement status for this section',
        stringUpdateLabel: 'Update',
        stringAddBookToSectionError: 'An error occured while adding {0} to the section.',
        stringSearchingForTextbooksError: 'Error occured while searching for books',
        stringSearchingForTextbooksSpinner: 'Searching for books',
        stringRemovingFromSectionMessage: 'Removing book...',
        stringUpdatingTextbookStatusLabel: 'Updating book assignment...',
        stringUpdateBookConfirmationLabel: 'Book assignment for {0} was updated successfully.',
        stringUpdateBookErrorMessage: 'Book assignment for {0} could not be updated. Please try again later.',
        stringUpdateBookAriaMessage: 'Update book assignment',
        stringAddingWaiverProcessing: 'Adding Waiver...',
        stringStudentHasWaiverMessage: 'Student already has a waiver for this section',
        stringInvalidStudentMessage: 'Enter a valid student ID',
        stringWaiverReasonError: 'Must enter either a waiver reason or comments',
        stringUnableToAddWaiverError: 'Unable to add student waiver',
        stringUnableToRetrieveSection: 'Unable to retrieve section information',
        stringAddingPetitionProcessing: 'Adding Student Petition...',
        stringPetitionStatusError: 'Must enter a petition status',
        stringPetitionReasonError: 'Must enter either a petition reason or comments',
        stringUnableToAddPetitionError: 'Unable to add student petition',
        stringStudentHasStudentPetitionMessage: 'Student already has a petition for this section',
        stringAddingConsentProcessing: 'Adding Faculty Consent...',
        stringConsentStatusError: 'Must enter a consent status',
        stringConsentReasonError: 'Must enter either a consent reason or comments',
        stringUnableToAddConsentError: 'Unable to add faculty consent',
        stringStudentHasFacultyConsentMessage: 'Student already has a faculty consent for this section',

        //Spinner Messages
        stringFacultyMainSpinnerMessage: 'Loading section...',
        stringFacultyWaiverSpinnerMessage: 'Loading waivers...',
        stringFacultyPetitionSpinnerMessage: 'Loading petitions and faculty consent...',
        stringFacultyGradesSpinnerMessage: 'Loading grades...',
        stringFacultyAttendanceLoadingMessage: 'Loading  Attendances...',
        stringFacultyAttendanceRetrieveMessage: 'Retrieving section meeting attendance',
        stringStudentPhotoAltText: 'Student Photo',

        //Attendances
        NoSectionMeetingExistsMessage: 'No Section  Meetings Exists',
        NoRosterStudentsMessage: 'No registered students',
        AttendanceStudentTableHeaderText: 'Student',
        DefaultAttendanceSelectionCaptionText:'Select Attendance', 


        // Other
        FinalGradeSaveFailMessage: 'Couldn&#39;t save the information provided',
        AttendanceDateErrorMesssage: 'Last date of attendance should be within section start and end date',
        ExpirationDateErrorMessage: 'Expiration date should be beyond section end date',
        ValidDateErrorMessage: 'Please enter a valid date',
        ExpirationDateRequiredMessage: 'Expiration date is required',
        AttendanceDateRequiredMessage: 'Last Date of Attendance or Never Attended Flag is required',
        VerificationFailedErrorMessage: 'Posting of grades was not successful',
        VerifyGradeInformationMessage: 'Final grading is not complete. Please enter and post all grades.',
        FinalGradeInformationMessage: 'Please enter missing final grade(s).',
        TextbookRequired: 'Required',
        TextbookOptional: 'Optional',
        TextbookRecommended: 'Recommended',
        TextbookInSectionMessage: 'Book already in section.',
        AddBookSaveLabel: 'Save',
        AddBookToSectionFormatString: 'Assign book {0} to this course section',
        AddBookText: 'Add Book',
        NewBookRequiredFieldsMessage: 'New books must have an ISBN or a Title, Author, Copyright, and Publisher.',
        NoBooksAssignedMessage: 'No books are currently assigned to this section.',
        NoBooksFoundMessage: 'No matching books found.',
        BookDetailsDialogTitle: 'Book Details',
        SectionIdRequiredMessage: 'A section ID is required.',
        UnableToRetrieveSectionRosterNotification: 'Unable to retrieve section roster information',
        UnableToRetrieveSectionPetitionsNotification: 'Unable to retrieve section petition information',
        UnableToRetrieveSectionWaiversNotification: 'Unable to retrieve section waiver information',
        UnableToRetrieveSectionGradesNotification: 'Unable to retrieve section grade information',
        UnableToUpdateSectionNotification: 'Unable to update section information',
        UnableToUpdateGradeNotification: 'Unable to update grades',
        StudentIdRequiredMessage: 'A student ID is required.',
        RequirementStatusDropdownCaption: 'Select an option...'
    };

    // Student Grade strings
    var stringGradeHomeLoadingDataSpinnerMessage = 'Loading Grades...';
    var noGradingTermsToShowMessage = 'No Grade Information Available';
    var toggleTermDetailsString = 'Toggle Term Detail for ';
</script>

    
    <script type="text/javascript">
        var notification = null;
    </script>

    <script src="/Student/bundles/degreeplansindexscripts?v=7qWEWDClimave_RHkUjFH6zz6aBBWqXHm4-gYB-Uf241"></script>






    







<script>
    var Ellucian = Ellucian || {};
    Ellucian.requireConfig = Ellucian.requireConfig || {
        baseUrl: "/Student/Scripts/",
        urlArgs: "v=2.17.1.24",
        paths: {
            text: "text",
            AddressEntry: "Components/AddressEntry",
            YesNoToggle: "Components/YesNoToggle",
            Spinner: "Components/Spinner",
            ModalSpinner: "Components/ModalSpinner",
            Message: "Components/Message",
            CsvDownloadLink: "Components/CsvDownloadLink",
            FilterControl: "Components/FilterControl",
            ProfilePhoto: "Components/ProfilePhoto",
            Icon: "Components/Icon",
            ModalDialog: "Components/ModalDialog",
            WorkflowTaskWidget: "Components/WorkflowTaskWidget",
            AutoSave: "Components/AutoSave",
            Dropdown: "Components/Dropdown",
            CollapsibleGroup: "Components/CollapsibleGroup",
            FilterSummary: "Components/FilterSummary",
            Badge: "Components/Badge",
            StepProgress: "Components/StepProgress",
            StatusLabel: "Components/StatusLabel",
            InputAutocomplete: "Components/InputAutocomplete",
            FileUpload: "Components/FileUpload",
            PersonRestrictionsWidget: "Components/PersonRestrictionsWidget",
            ComplexTable: "Components/ComplexTable",
            Checkbox: "Components/Checkbox",
            Pager: "Components/Pager",          
            PersonNameSearch: "Components/PersonNameSearch",
            BudgetAdjustment: "Components/BudgetAdjustment"
        }
    };
</script>



<script src="/Student/bundles/requirejs?v=whXvHJZIRNlc7sStXCyOahQE-g9LdB4qPR8ppGghIQM1"></script>

<script>
    
    require.config(Ellucian.requireConfig);
</script>


    <script type="text/javascript">
        // Initialize formatting for globalization
        var currentCulture = {"Name":"en-US","EnglishName":"English (United States)","NativeName":"English (United States)","TwoLetterISOLanguageName":"en","TextInfo":{"ANSICodePage":1252,"OEMCodePage":437,"MacCodePage":10000,"EBCDICCodePage":37,"LCID":1033,"CultureName":"en-US","IsReadOnly":false,"ListSeparator":",","IsRightToLeft":false},"NumberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":false,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"$","NaNSymbol":"NaN","CurrencyNegativePattern":1,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"‰","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"DateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"0001-01-01T00:00:00","MaxSupportedDateTime":"9999-12-31T23:59:59.9999999","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":false},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, MMMM dd, yyyy h:mm:ss tt","LongDatePattern":"dddd, MMMM dd, yyyy","LongTimePattern":"h:mm:ss tt","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'","ShortDatePattern":"M/d/yyyy","ShortTimePattern":"h:mm tt","SortableDateTimePattern":"yyyy'-'MM'-'dd'T'HH':'mm':'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy'-'MM'-'dd HH':'mm':'ss'Z'","YearMonthPattern":"MMMM, yyyy","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":false,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}
        setGlobalizeDefaults(currentCulture);

        // Register the ESG spinner component
        ko.components.register('spinner', {
            require: 'Spinner/_Spinner'
        });

        // Register the ESG modal spinner component
        ko.components.register('modal-spinner', {
            require: 'ModalSpinner/_ModalSpinner'
        });

        // Register the ESG message component
        ko.components.register('message', {
            require: 'Message/_Message'
        });

        // Register the profile photo component (used by proxy, etc)
        ko.components.register('profile-photo', {
            require: 'ProfilePhoto/_ProfilePhoto'
        });

        // Register the icon component
        ko.components.register('icon', {
            require: 'Icon/_Icon'
        });

        // Register the modal dialog component
        ko.components.register('modal-dialog', {
            require: 'ModalDialog/_ModalDialog'
        });

        // Register the badge component
        ko.components.register('badge', {
            require: 'Badge/_Badge'
        });

        // Register the step progress component
        ko.components.register('step-progress', {
            require: 'StepProgress/_StepProgress'
        });

        // Register the status label component
        ko.components.register('status-label', {
            require: 'StatusLabel/_StatusLabel'
        });

        // Register the person collapsible group component
        ko.components.register('collapsible-group', {
            require: 'CollapsibleGroup/_CollapsibleGroup'
        });

        // Register the autocomplete component
        ko.components.register("input-autocomplete", {
            require: 'InputAutocomplete/_InputAutocomplete'
        });

        // Register the dropdown component
        ko.components.register("dropdown", {
            require: 'Dropdown/_Dropdown'
        })

        // Register the complex table component
        ko.components.register("complex-table", {
            require: 'ComplexTable/_ComplexTable'
        });
    </script>

<script src="/Student/bundles/proxyselectionscripts?v=n6FkxCJkm45LWyVVDa0mKVNjR1iRsTACj2R0lx0yP681"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    


<script>
    
    function getPathFromUrl(url) {
        return url.split(/[?#]/)[0];
    }


    
    function sanitizeUrlForAnalytics(urlPath, removeAppPath) {
        var strippedUrl = urlPath.toLowerCase();
            strippedUrl = strippedUrl.replace('/student', '');
        var re = /(^\/$)|((?:\/(?:colleaguefinance|finance|financialaid|humanresources|planning|projectsaccounting|student|timemanagement))?(?:\/\w+)?(?:\/\w+)?)/;
        var match = re.exec(strippedUrl);
        var standardized = "";
        if (match != null) {
            standardized = match[0];
        }
        if (removeAppPath) {
            return standardized;
        } else {
                return '/student' + standardized;
        }
    }

    function clientTrackEvent(eventCategory, eventAction, eventLabel, eventValue) {
        if (typeof ga === 'function') {
            ga(function () {
                var trackers = ga.getAll();
                trackers.forEach(function (tracker) {
                    if (tracker.get('name') != 'ellucianTracker') {
                        tracker.send('event', eventCategory, eventAction, eventLabel, eventValue);
                    }
                });
            });
        }
    }

    function clientTrackVirtualPage(url) {
        if (typeof ga === 'function') {
            ga(function () {
                var trackers = ga.getAll();
                trackers.forEach(function (tracker) {
                    if (tracker.get('name') != 'ellucianTracker') {
                        tracker.set('page', url);
                        tracker.send('pageview');
                    }
                });
            });
        }
    }

    function clientTrackUserTiming(timingCategory, timingVar, timingValue, timingLabel) {
        if (typeof ga === 'function') {
            ga(function () {
                var trackers = ga.getAll();
                trackers.forEach(function (tracker) {
                    if (tracker.get('name') != 'ellucianTracker') {
                        tracker.send('timing', timingCategory, timingVar, timingValue, timingLabel);
                    }
                });
            });
        }
    }

    function clientSendPageview(pageUrl, locationUrl) {
        if (typeof ga === 'function') {
            ga(function () {
                var trackers = ga.getAll();
                trackers.forEach(function (tracker) {
                    if (tracker.get('name') != 'ellucianTracker') {
                        tracker.set({
                            page: pageUrl,
                            location: locationUrl
                        });
                        tracker.send('pageview');
                    }
                });
            });
        }
    }

    function allTrackEvent(eventCategory, eventAction, eventLabel, eventValue) {
        dataLayer.push({
            'event': 'etmEvent',
            'etmEventCategory': eventCategory,
            'etmEventAction': eventAction,
            'etmEventLabel': eventLabel,
            'etmEventValue': eventValue,

        });
        clientTrackEvent(eventCategory, eventAction, eventLabel, eventValue);        

    }

    function allTrackUserTiming(timingCategory, timingVar, timingValue, timingLabel) {
        dataLayer.push({
            'event': 'etmUserTiming',
            'etmEventCategory': timingCategory,
            'etmEventAction': timingVar,
            'etmEventTiming': timingValue,
            'etmEventLabel': timingLabel
        });
        clientTrackUserTiming(timingCategory, timingVar, timingValue, timingLabel);
    }


    $(document).ajaxSend(function (event, jqxhr, settings) {
        var start = moment();
        var urlValue = sanitizeUrlForAnalytics(getPathFromUrl(settings.url), true);
        // done is only called on success
        jqxhr.done(function (event, jqxhr, settings) {
            var elapsed = moment() - start;
            dataLayer.push({
                'event': 'etmAjaxSuccess',
                'etmEventCategory': 'AJAX',
                'etmEventAction': urlValue,
                'etmEventLabel': 'Success',
                'etmEventTiming': elapsed
            });

        });
        jqxhr.fail(function (jqxhr, textStatus, errorThrow) {
            var elapsed = moment() - start;
            dataLayer.push({
                'event': 'etmAjaxFailure',
                'etmEventCategory': 'AJAX',
                'etmEventAction': urlValue,
                'etmEventLabel': 'Failure',
                'etmEventTiming': elapsed

            });


        });
    });
</script>


<script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="ModalDialog/_ModalDialog" src="/Student/Scripts/Components/ModalDialog/_ModalDialog.js?v=2.17.1.24"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="ModalSpinner/_ModalSpinner" src="/Student/Scripts/Components/ModalSpinner/_ModalSpinner.js?v=2.17.1.24"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="text" src="/Student/Scripts/text.js?v=2.17.1.24"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="Spinner/_Spinner" src="/Student/Scripts/Components/Spinner/_Spinner.js?v=2.17.1.24"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="Message/_Message" src="/Student/Scripts/Components/Message/_Message.js?v=2.17.1.24"></script></head>
<body class="clear-group" data-gr-c-s-loaded="true">
    
    <input name="__RequestVerificationToken" type="hidden" value="7JFVqdCl8jgQ6slfFHACwbGOTrQcJy2mp24jmqXA6k7BXxITUOs8Yi0o_VzrYMi5DzJji6Ga6W9bwUwkGVodCVwWLrBHq4pqTuOrJoc6DrnR6O3Dxv4IszDJGHqRQH0mwx4oEHvDMGbQSSNTJ0t6DA2">

    
    <svg xmlns="http://www.w3.org/2000/svg" style="display:none"><symbol id="icon-add" viewBox="0 0 24 24"><path d="M24 13.714H13.714V24h-3.429V13.714H-.001v-3.429h10.286V-.001h3.429v10.286H24v3.429z"></path></symbol><symbol id="icon-arrow-double" viewBox="0 0 24 24"><path d="M11.2 12L0 2l1.7-2L15 12 1.7 24 0 22.2 11.2 12zM9 22.2l1.7 1.8L24 12 10.8 0 9.1 2l11.1 10L9 22.2z"></path></symbol><symbol id="icon-arrow" viewBox="0 0 24 24"><path d="M4.738 2.8L7.405 0l11.429 12L7.405 24l-2.667-2.8L13.5 12z"></path></symbol><symbol id="icon-avatar" viewBox="0 0 24 24"><path d="M12 23.943c6.373 0 11.538-5.166 11.538-11.538S18.372.867 12 .867C5.627.867.462 6.033.462 12.405S5.628 23.943 12 23.943zm-6.866-3.442a10.591 10.591 0 0 1-3.749-8.096C1.385 6.542 6.138 1.79 12 1.79s10.615 4.753 10.615 10.615c0 3.244-1.456 6.149-3.749 8.096a7.88 7.88 0 0 0-6.867-4.069c-2.796-.002-5.466 1.534-6.866 4.069zm2.829-8.903c0 2.255 1.806 4.085 4.037 4.086s4.037-1.83 4.037-4.086c0-2.255-1.807-4.085-4.037-4.085s-4.037 1.83-4.037 4.085z"></path></symbol><symbol id="icon-calendar-term" viewBox="-401 277 24 24"><path d="M-379.4 293.3c.4-.1.8-.3 1.3-.4.5-.2 1 .2 1.1.7.1.5-.2 1-.7 1.1-1.1.4-2.2.7-3.3 1.1-.5.2-1.1-.1-1.2-.6-.3-1.1-.7-2.2-1.1-3.3-.2-.6.1-1.2.8-1.3.3 0 .8.2.9.6.2.4.3.9.5 1.3.2-.4.3-.8.5-1.3s.3-1.1.4-1.7c.1-.6.1-1.2.1-1.8 0-1-.3-1.9-.6-2.8-.4-.9-.9-1.8-1.5-2.5-.7-.9-1.6-1.7-2.7-2.2-.8-.5-1.7-.8-2.7-1-.4-.1-.9-.1-1.3-.2h-.9c-1.1 0-2.2.2-3.2.6-.8.3-1.6.7-2.3 1.3-.7.5-1.2 1.1-1.8 1.7-.7.9-1.2 1.9-1.6 3-.2.5-.2 1-.3 1.5-.1.6-.1 1.2-.1 1.8.1 1 .3 2 .7 3 .4.9.9 1.7 1.5 2.5.9 1.1 2 1.9 3.2 2.5.8.4 1.7.7 2.6.8.4.1.9.1 1.3.1.3 0 .6.1.8.3.3.2.4.6.3 1-.1.4-.4.6-.8.6-.5 0-1.1 0-1.6-.1-1-.1-2-.4-2.9-.8-.9-.4-1.8-.9-2.6-1.5-.4-.3-.7-.6-1.1-.9-1.3-1.3-2.2-2.9-2.8-4.6-.2-.6-.3-1.3-.4-1.9-.1-.6-.1-1.3-.1-1.9 0-.5.1-1 .2-1.6.1-.9.4-1.7.8-2.5s.8-1.6 1.4-2.4c.4-.5.9-1 1.4-1.5.6-.5 1.2-1 1.9-1.4.9-.5 1.9-.9 2.9-1.2.5-.1 1.1-.2 1.6-.3.6-.1 1.1-.1 1.7-.1.9 0 1.8.2 2.7.4 1.3.4 2.5 1 3.6 1.8.6.5 1.2 1 1.7 1.6.8.9 1.4 1.8 1.9 2.9.3.8.6 1.6.8 2.4.1.4.1.9.2 1.3v1.3c0 .6-.1 1.2-.2 1.7-.1.7-.3 1.4-.6 2.1-.2.3-.3.5-.4.8z"></path><path d="M-392 284.7v-1h1v.9h4v-1h1l.1.1v.8h.7c.4 0 .8.5.8.9v6.8c0 .5-.5 1-1 1h-7.1c-.4 0-.9-.4-.9-.9v-6.8c0-.2 0-.3.1-.5.2-.4.5-.6 1-.6 0 .3.1.3.3.3zm6.1 7.7v-4.8h-6.6v4.8h6.6z"></path><path d="M-386.2 291h-2.4v-2.4h2.4v2.4z"></path></symbol><symbol id="icon-calendar" viewBox="0 0 24 24"><path d="M18 13.2h-6v6h6v-6zM16.8 0v2.4H7.2V0H4.8v2.4H3.6c-1.32 0-2.4 1.08-2.4 2.4v16.8c0 1.32 1.08 2.4 2.4 2.4h16.8c1.32 0 2.4-1.08 2.4-2.4V4.8c0-1.32-1.08-2.4-2.4-2.4h-1.2V0h-2.4zm3.6 21.6H3.6V8.4h16.8v13.2z"></path></symbol><symbol id="icon-cards" viewBox="0 0 24 24"><path d="M0 11.294h7.059V2.823H0v8.471zm0 9.882h7.059v-8.471H0v8.471zm8.471 0h7.059v-8.471H8.471v8.471zm8.47 0H24v-8.471h-7.059v8.471zm-8.47-9.882h7.059V2.823H8.471v8.471zm8.47-8.47v8.471H24V2.824h-7.059z"></path></symbol><symbol id="icon-check" viewBox="-87 89 24 24"><path d="M-84.7 101.8c-.9.9-.9 2.3 0 3.2l4 4c.9.9 2.3.9 3.2 0l12.8-12.8c.9-.9.9-2.3 0-3.2-.9-.9-2.3-.9-3.2 0l-11.2 11.2-2.3-2.3c-.9-1-2.4-1-3.3-.1z"></path></symbol><symbol id="icon-clear" viewBox="-387 629 24 24"><path d="M-375 629c-6.6 0-12 5.4-12 12s5.4 12 12 12 12-5.4 12-12-5.4-12-12-12zm6.2 16.7l-1.5 1.5-4.7-4.7-4.7 4.7-1.5-1.5 4.7-4.7-4.7-4.7 1.5-1.5 4.7 4.7 4.7-4.7 1.5 1.5-4.7 4.7 4.7 4.7z"></path></symbol><symbol id="icon-clock" viewBox="0 0 24 24"><path d="M.409 8.894c-1.708 6.375 2.11 12.989 8.485 14.697s12.989-2.11 14.697-8.485c1.708-6.375-2.11-12.989-8.485-14.697S2.117 2.519.409 8.894zm20.864 5.591c-1.367 5.1-6.657 8.155-11.758 6.788S1.36 14.616 2.727 9.515c1.367-5.1 6.657-8.155 11.758-6.788s8.155 6.657 6.788 11.758zM6.36 9.868l-.466 1.739 6.955 1.863 5.324-5.034-1.258-1.331-4.527 4.377-6.027-1.615z"></path></symbol><symbol id="icon-close" viewBox="-387 629 24 24"><path d="M-375 642.7l-7.3 7.3-1.7-1.7 7.3-7.3-7.3-7.3 1.7-1.7 7.3 7.3 7.3-7.3 1.7 1.7-7.3 7.3 7.3 7.3-1.7 1.7-7.3-7.3z"></path></symbol><symbol id="icon-delete" viewBox="0 0 24 24"><path d="M0 9.429h24v5.143H0V9.429z"></path></symbol><symbol id="icon-document" viewBox="0 0 24 24"><path d="M14.182 0h-9.6c-1.32 0-2.4 1.08-2.4 2.4v19.2c0 1.32 1.08 2.4 2.4 2.4h14.4c1.32 0 2.4-1.08 2.4-2.4V7.2l-7.2-7.2zm2.4 14.4h-9.6V12h9.6v2.4zm-2.4 4.8h-7.2v-2.4h7.2v2.4zm-1.2-10.8V1.8l6.6 6.6h-6.6z"></path></symbol><symbol id="icon-edit" viewBox="0 0 24 24"><path d="M0 18.933V24h5.067L19.734 9.2l-5.067-5.067L0 18.933zm23.6-13.6a1.29 1.29 0 0 0 0-1.867L20.533.399a1.29 1.29 0 0 0-1.867 0l-2.4 2.4 5.067 5.067L23.6 5.333z"></path></symbol><symbol id="icon-email" viewBox="0 0 24 24"><path d="M21.6 2.4H2.4C1.08 2.4 0 3.48 0 4.8v14.4c0 1.32 1.08 2.4 2.4 2.4h19.2c1.32 0 2.4-1.08 2.4-2.4V4.8c0-1.32-1.08-2.4-2.4-2.4zm0 4.8l-9.6 6-9.6-6V4.8l9.6 6 9.6-6v2.4z"></path></symbol><symbol id="icon-error" viewBox="0 0 24 24"><path d="M11.561 23.019h-.028c-1.435 0-2.6-1.136-2.6-2.538s1.165-2.541 2.6-2.541h.028c1.435 0 2.6 1.138 2.6 2.541s-1.165 2.538-2.6 2.538zM15.288 3.66c-.172 2.538-1.357 10.075-1.357 10.075 0 1.272-1.066 2.303-2.365 2.303h-.04c-1.302 0-2.368-1.031-2.368-2.303 0 0-1.185-7.537-1.353-10.075C7.72 2.391 8.714.033 11.526.033c.006 0 .013.003.02.003s.014-.003.02-.003c2.81 0 3.807 2.357 3.721 3.627z"></path></symbol><symbol id="icon-export" viewBox="-3 5 24 24"><path d="M12 19v-4c-5.4 0-9.8 2.2-11 6 0 0-.2-11 11-11V6l9 6.7-9 6.3zm6-1.2L15 20v5H0V10h4c1.2-.8 3.6-1.7 5-2V7H-.3C-1.8 6.9-3 8.1-3 9.6v15.7C-3 26.8-1.8 28-.3 28h15.7c1.5 0 2.7-1.2 2.7-2.7l-.1-7.5z"></path></symbol><symbol id="icon-favorites" viewBox="-387 629 24 24"><path d="M-367.9 652.1l-7.2-3.8-7.2 3.8 1.4-8-5.8-5.7 8.1-1.2 3.6-7.3 3.6 7.3 8.1 1.2-5.8 5.7 1.2 8z"></path></symbol><symbol id="icon-filter" viewBox="0 0 24 24"><path d="M9.102 11.341c.24.274.372.632.372 1.002v10.914c0 .657.755.99 1.202.528l2.9-3.489c.388-.489.602-.731.602-1.215v-6.736c0-.37.134-.728.372-1.003l8.32-9.479c.623-.711.143-1.864-.778-1.864H1.563C.641-.001.159 1.15.785 1.863l8.32 9.477z"></path></symbol><symbol id="icon-folder-closed" viewBox="0 0 24 24"><path d="M9.6 0H2.4C1.08 0 0 1.35 0 3v18c0 1.65 1.08 3 2.4 3h19.2c1.32 0 2.4-1.35 2.4-3V6c0-1.65-1.08-3-2.4-3H12L9.6 0z"></path></symbol><symbol id="icon-folder-open" viewBox="-3 5 24 24"><path d="M21 14.5L16.6 27H-2c-.6 0-1-.4-1-1V8c0-.6.4-1 1-1h6.6L7 10h8.6c.6 0 1 .4 1 1v1.5H.1l-3 12.3 4.8-10.3H21z"></path></symbol><symbol id="icon-graduation" viewBox="0 0 24 24"><path d="M4.364 13.127v4.364L12 21.636l7.636-4.145v-4.364L12 17.272l-7.636-4.145zM12 2L0 8.545l12 6.545 9.818-5.345v7.527H24V8.545L12 2z"></path></symbol><symbol id="icon-group" viewBox="0 0 24 24"><path d="M16.174 13.391c-1.565 0-2.817.417-3.757.939 1.461 1.252 2.087 2.713 2.191 2.817l.104.209v2.296h8.348v-2.087c-.104 0-1.774-4.174-6.887-4.174zm0-2.087a3.652 3.652 0 1 0 0-7.304 3.652 3.652 0 0 0 0 7.304zM3.13 7.652C3.13 5.669 4.8 4 6.782 4s3.652 1.67 3.652 3.652c0 1.983-1.67 3.652-3.652 3.652S3.13 9.634 3.13 7.652zm3.653 5.739C1.67 13.391 0 17.565 0 17.565v2.087h13.565v-2.087s-1.67-4.174-6.783-4.174z"></path></symbol><symbol id="icon-help" viewBox="0 0 24 24"><path d="M8.6 15.6v-2.5c0-1 .8-1.8 1.7-2 2.4-.3 4.8-1.2 4.8-4.2 0-1.9-1-2.9-2.6-2.9-.9 0-1.6.2-2.2.4-.3.1-.4.2-.4.6l-.1.8c-.1.8-.7 1.3-1.5 1.4l-1 .1c-.9 0-1.7-.7-1.7-1.6V3.6c0-1.4.9-2.6 2.2-2.9C9.4.3 11 0 12.7 0c4.3 0 7.9 1.5 7.9 6.7 0 3.7-2 6.4-5.8 7.3-.7.2-1.3.8-1.3 1.6 0 .9-.7 1.6-1.6 1.6h-1.7c-.9 0-1.6-.7-1.6-1.6zm2.5 8.3c-1.9 0-2.8-.8-2.8-2.5s.9-2.5 2.8-2.5c1.8 0 2.8.9 2.8 2.5s-1 2.5-2.8 2.5z"></path></symbol><symbol id="icon-hide" viewBox="0 0 24 24"><path d="M12 5.864c3.055 0 5.455 2.4 5.455 5.455 0 .655-.109 1.418-.436 1.964l3.164 3.164c1.636-1.418 2.945-3.164 3.709-5.127-1.855-4.8-6.545-8.182-12-8.182-1.527 0-2.945.327-4.364.764l2.4 2.4c.655-.327 1.418-.436 2.073-.436zM1.091 2.918l2.945 2.945C2.181 7.281.763 9.136 0 11.318c1.855 4.8 6.545 8.182 12 8.182 1.636 0 3.273-.327 4.8-.873l3.6 3.6 1.418-1.418L2.509 1.5 1.091 2.918zm6 6l1.636 1.636v.764c0 1.855 1.418 3.273 3.273 3.273.218 0 .436 0 .764-.109l1.636 1.636c-.764.436-1.527.655-2.4.655-3.055 0-5.455-2.4-5.455-5.455 0-.873.218-1.636.545-2.4zm4.691-.873l3.382 3.382v-.218c0-1.855-1.418-3.273-3.273-3.273 0 .109 0 .109-.109.109z"></path></symbol><symbol id="icon-home" viewBox="0 0 24 24"><path d="M9.6 21.9v-7.2h4.8v7.2h6v-9.6H24L12 1.5 0 12.3h3.6v9.6h6z"></path></symbol><symbol id="icon-image" viewBox="0 0 24 24"><path d="M24 21.333V2.666c0-1.467-1.2-2.667-2.667-2.667H2.666A2.675 2.675 0 0 0-.001 2.666v18.667C-.001 22.8 1.199 24 2.666 24h18.667C22.8 24 24 22.8 24 21.333zM7.333 14l3.333 4 4.667-6 6 8H2.666l4.667-6z"></path></symbol><symbol id="icon-info" viewBox="-140 235.6 24 24"><path d="M-123 257.4v.2c0 1.1-.9 2-2 2h-5c-1.1 0-2-.9-2-2v-.2c0-1.1.9-2 2-2v-8.3c-1.1 0-2-.9-2-2v-.2c0-1.1.9-2 2-2h3c1.1 0 2 .9 2 2v10.5c1.1 0 2 .9 2 2zm-4-16.6c1.1 0 2-.9 2-2v-1.2c0-1.1-.9-2-2-2h-2c-1.1 0-2 .9-2 2v1.2c0 1.1.9 2 2 2h2z"></path></symbol><symbol id="icon-list" viewBox="-387 629 24 24"><path d="M-387.1 644h5.7v-6h-5.7v6zm0 7.3h5.7v-5.9h-5.7v5.9zm0-14.7h5.7v-5.9h-5.7v5.9zm7.1 7.4h17v-6h-17v6zm0 7.3h17v-5.9h-17v5.9zm0-20.6v5.9h17v-5.9h-17z"></path></symbol><symbol id="icon-location" viewBox="0 0 24 24"><path d="M11.9 0C7.22 0 3.5 3.72 3.5 8.4c0 6.24 8.4 15.6 8.4 15.6s8.4-9.36 8.4-15.6c0-4.68-3.72-8.4-8.4-8.4zm0 11.4c-1.68 0-3-1.32-3-3s1.32-3 3-3 3 1.32 3 3-1.32 3-3 3z"></path></symbol><symbol id="icon-menu" viewBox="0 0 32 32"><path d="M4 10h24a2 2 0 0 0 0-4H4a2 2 0 0 0 0 4zm24 4H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4zm0 8H4a2 2 0 0 0 0 4h24a2 2 0 0 0 0-4z"></path></symbol><symbol id="icon-more" viewBox="0 0 24 24"><path d="M3 9c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm18 0c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm-9 0c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3z"></path></symbol><symbol id="icon-new-document" viewBox="0 0 24 24"><path d="M4.8 0C3.48 0 2.4 1.08 2.4 2.4v19.2c0 1.32 1.08 2.4 2.4 2.4h14.4c1.32 0 2.4-1.08 2.4-2.4V7.2L14.4 0H4.8zm8.4 8.4V1.8l6.6 6.6h-6.6z"></path></symbol><symbol id="icon-notification" viewBox="0 0 24 24"><path d="M11.929 24c2.794 0 5.079-1.964 5.079-4.364H6.849c0 2.4 2.286 4.364 5.079 4.364zm8.739-7.829V9.818c0-3.581-2.824-6.468-6.723-7.277v-.809c0-.924-.941-1.733-2.017-1.733S9.911.808 9.911 1.732v.809c-3.899.809-6.723 3.696-6.723 7.277v6.353l-2.689 2.31v1.155h22.857v-1.155l-2.689-2.31z"></path></symbol><symbol id="icon-print" viewBox="-3 5 24 24"><path d="M15 11H3V7h12v4zm-18 9.3v-5.7c0-1.5 1.2-2.7 2.7-2.7h18.7c1.5 0 2.7 1.2 2.7 2.7v5.7c0 1.5-1.2 2.7-2.7 2.7H16v4H2v-4H-.3C-1.8 23-3 21.8-3 20.3zM16 16h2v-2h-2v2zM4 25h10v-5H4v5z"></path></symbol><symbol id="icon-radio" viewBox="-27 29 24 24"><circle cx="-15" cy="41" r="5.8"></circle></symbol><symbol id="icon-refresh" viewBox="0 0 24 24"><path d="M12.6 0C8.4 0 4.68 2.4 2.76 6.063L0 3.158v8.211h7.8L4.44 7.832C6 4.674 9 2.527 12.6 2.527c4.92 0 9 4.295 9 9.474s-4.08 9.474-9 9.474c-3.96 0-7.2-2.653-8.52-6.316H1.56c1.32 5.053 5.76 8.842 11.04 8.842 6.36 0 11.4-5.432 11.4-12s-5.16-12-11.4-12z"></path></symbol><symbol id="icon-save" viewBox="0 0 24 24"><path d="M18.667 0h-16A2.675 2.675 0 0 0 0 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667v-16L18.668.001zM12 21.333c-2.267 0-4-1.733-4-4s1.733-4 4-4 4 1.733 4 4-1.733 4-4 4zM16 8H2.667V2.667H16V8z"></path></symbol><symbol id="icon-search" viewBox="0 0 24 24"><path d="M16.667 14.667H15.6l-.4-.4c1.333-1.467 2.133-3.467 2.133-5.6 0-4.8-3.867-8.667-8.667-8.667S-.001 3.867-.001 8.667a8.65 8.65 0 0 0 8.667 8.667c2.133 0 4.133-.8 5.6-2.133l.4.4v1.067l6.667 6.667 2-2-6.667-6.667zm-8 0c-3.333 0-6-2.667-6-6s2.667-6 6-6 6 2.667 6 6-2.667 6-6 6z"></path></symbol><symbol id="icon-settings" viewBox="0 0 24 24"><path d="M20.567 13.2c0-.36.12-.72.12-1.2s0-.84-.12-1.2l2.52-2.04c.24-.24.24-.48.12-.72l-2.4-4.2c-.12-.12-.36-.24-.72-.12l-3 1.2c-.6-.48-1.32-.84-2.04-1.2L14.567.6c.12-.36-.24-.6-.48-.6h-4.8c-.24 0-.6.24-.6.48l-.48 3.24c-.72.24-1.32.72-2.04 1.2l-2.88-1.2c-.36-.12-.6 0-.84.24l-2.4 4.2c-.12.12 0 .48.24.72l2.52 1.92c0 .36-.12.72-.12 1.2s0 .84.12 1.2l-2.52 2.04c-.24.24-.24.48-.12.72l2.4 4.2c.12.12.36.24.72.12l3-1.2c.6.48 1.32.84 2.04 1.2l.48 3.12c0 .24.24.48.6.48h4.8c.24 0 .6-.24.6-.48l.48-3.12c.72-.36 1.44-.72 2.04-1.2l3 1.2c.24.12.6 0 .72-.24l2.4-4.2c.12-.24.12-.6-.12-.72l-2.76-1.92zm-8.88 3c-2.28 0-4.2-1.92-4.2-4.2s1.92-4.2 4.2-4.2c2.28 0 4.2 1.92 4.2 4.2s-1.92 4.2-4.2 4.2z"></path></symbol><symbol id="icon-share" viewBox="0 0 24 24"><path d="M19 8.4c-.96 0-1.8.36-2.4.96L8.08 4.44c.12-.24.12-.6.12-.84C8.2 1.56 6.64 0 4.6 0S1 1.56 1 3.6s1.56 3.6 3.6 3.6c.96 0 1.8-.36 2.4-.96l8.52 4.92c-.12.24-.12.6-.12.84s0 .6.12.84L7 17.88c-.6-.6-1.44-.96-2.4-.96-1.92 0-3.48 1.56-3.48 3.48s1.56 3.48 3.48 3.48 3.48-1.56 3.48-3.48c0-.24 0-.48-.12-.84l8.52-5.04c.6.6 1.44.96 2.4.96 2.04 0 3.6-1.56 3.6-3.6S21.04 8.4 19 8.4z"></path></symbol><symbol id="icon-skip" viewBox="-3 5 24 24"><path d="M0 7.8L2.7 5l11.4 12L2.7 29 0 26.2 8.8 17 0 7.8zM14.1 5h4v24h-4V5z"></path></symbol><symbol id="icon-sort" viewBox="-3 5 24 24"><path d="M14.8 20.1l1.8 1.7L9 29l-7.6-7.2 1.8-1.7L9 25.6l5.8-5.5zM3.2 13.9l-1.8-1.7L9 5l7.6 7.2-1.8 1.7L9 8.4l-5.8 5.5z"></path></symbol><symbol id="icon-swap" viewBox="0 0 24 24"><path d="M18.24 6.88H9.28v2.56h8.96v3.84l5.12-5.12-5.12-5.12v3.84zM.32 15.84l5.12 5.12v-3.84h8.96v-2.56H5.44v-3.84L.32 15.84z"></path></symbol><symbol id="icon-view" viewBox="0 0 24 24"><path d="M12 3.5c-5.455 0-10.145 3.382-12 8.182 1.855 4.8 6.545 8.182 12 8.182s10.145-3.382 12-8.182C22.145 6.882 17.455 3.5 12 3.5zm0 13.636c-3.055 0-5.455-2.4-5.455-5.455S8.945 6.226 12 6.226s5.455 2.4 5.455 5.455-2.4 5.455-5.455 5.455zm0-8.727c-1.855 0-3.273 1.418-3.273 3.273s1.418 3.273 3.273 3.273c1.855 0 3.273-1.418 3.273-3.273S13.855 8.409 12 8.409z"></path></symbol><symbol id="icon-warning" viewBox="-3 5 24 24"><path d="M20.5 24.5L11.4 6.9c-1-2-3.8-2-4.8 0l-9.1 17.5c-1 1.8.4 4 2.4 4h18.2c2 .1 3.4-2.1 2.4-3.9zM9 25.6c-.9 0-1.7-.7-1.7-1.6 0-.9.7-1.6 1.6-1.6.9 0 1.6.7 1.6 1.6s-.6 1.6-1.5 1.6zm1.5-5.8c0 .8-.7 1.5-1.5 1.5s-1.5-.7-1.5-1.5c0 0-.7-4.8-.9-6.4-.1-.8.6-2.3 2.4-2.3 1.8 0 2.4 1.5 2.4 2.3-.1 1.6-.9 6.4-.9 6.4z"></path></symbol></svg>
    

    

<script>
    if (typeof dataLayer === 'undefined') {
        dataLayer = [];
    } else {
        dataLayer = dataLayer || [];
    }

    dataLayer.push({ 'gtm.whitelist': ['google', 'lcl'] });

    var pageUrl = sanitizeUrlForAnalytics(window.location.pathname, true);
    dataLayer.push({ 'etmStandardizedUrl': pageUrl });

        dataLayer.push({ 'etmClientId': 'W28' });

        dataLayer.push({ 'etmReleaseVersion': '2.17.1.24' });

    dataLayer.push({ 'etmProxyUser': 'false' });
</script>


<noscript>
    &lt;iframe src="//www.googletagmanager.com/ns.html?id=GTM-PBCT7V3"
            height="0" width="0" style="display:none;visibility:hidden"&gt;&lt;/iframe&gt;
</noscript>
<script>
    (function (w, d, s, l, i) {
        w[l] = w[l] || []; w[l].push({
            'gtm.start':
                new Date().getTime(), event: 'gtm.js'
        }); var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
        '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-PBCT7V3');
</script>


    <a class="offScreen" href="#main-content">Skip to main content</a>



    <header id="topOfForm">
        <nav id="header-bar" class="esg-header-bar esg-header-bar__with-toolbar">
            <div class="esg-header-bar__logo">
                <a class="esg-header-bar__logo-link" href="/Student/">
                    <img class="esg-header-bar__logo-image" src="/Student/Content/Images/logo-email-png.png" alt="Washington College" aria-label="Return to Colleague Self-Service Home Page ">
                    </a>
            </div>




<script type="text/javascript">
    $(document).ready(function () {

        if (!isGuest) {

            var mapping = {};
            var restrictionConfiguration = Ellucian.Storage.session.getItem("Ellucian.restrictionConfiguration");
            if (!restrictionConfiguration) {
            $.ajax({
                url: getRestrictionConfigurationAsync,
                type: "GET",
                contentType: jsonContentType,
                dataType: "json",
                success: function (jsonMappingData) {
                        mapping = jsonMappingData.Mapping
                        Ellucian.Storage.session.setItem("Ellucian.restrictionConfiguration", jsonMappingData.Mapping);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.status != 0) {
                            $('#notificationHost').notificationCenter('addNotification', { message: restrictionConfigurationError, type: "error" });
                        }
                    }
                });
            } else {
                mapping = restrictionConfiguration;
            }

                    $.ajax({
                        url: getEffectiveUserRestrictionsAsync,
                        type: "GET",
                        contentType: jsonContentType,
                        dataType: "json",
                        success: function (jsonData) {
                            var remaining = jsonData;   // Create a modifiable array of Notifications
                            var distinctStyles = ["Critical", "Warning", "Information"];
                            // Order Notifications based on their style.
                            for (var m = 0; m < distinctStyles.length; m++) {
                                // Multiple severity ranges are allowed.
                                for (var mapidx = 0; mapidx < mapping.length; mapidx++) {
                                    // Check each range...
                                    if (mapping[mapidx].Style === distinctStyles[m]) {
                                        // against each remaining Notification.
                                        for (var i = 0; i < remaining.length; i++) {
                                            if (remaining[i] != null && (remaining[i].Severity != null && remaining[i].Severity >= mapping[mapidx].SeverityStart && remaining[i].Severity <= mapping[mapidx].SeverityEnd)) {
                                                // If a remaining Notification severity falls in the mapping range, add it to the notification center...
                                                if (distinctStyles[m] === "Critical") {
                                                    $('#notificationHost').notificationCenter('addNotification', { message: remaining[i].Details, title: remaining[i].Title, link: remaining[i].Hyperlink, linkText: remaining[i].HyperlinkText, permanent: true, showByDefault: false, type: "Error" });
                                                }
                                                else {
                                                    $('#notificationHost').notificationCenter('addNotification', { message: remaining[i].Details, title: remaining[i].Title, link: remaining[i].Hyperlink, linkText: remaining[i].HyperlinkText, permanent: true, showByDefault: false, type: distinctStyles[m] });
                                                }
                                                // and remove it from the remaining list
                                                remaining[i] = null;
                                            }
                                        }
                                    }
                                }
                            }
                            // At this point, all notifications that fall into a severity range have been rendered. Default the rest to "Information" styling
                            for (var i = 0; i < remaining.length; i++) {
                                if (remaining[i] != null) {
                                    $('#notificationHost').notificationCenter('addNotification', { message: remaining[i].Details, title: remaining[i].Title, link: remaining[i].Hyperlink, linkText: remaining[i].HyperlinkText, permanent: true, showByDefault: false, type: "Information" });
                                }
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            if (jqXHR.status != 0) {
                                $('#notificationHost').notificationCenter('addNotification', { message: percError, type: "error" });
                            }
                        },
                        complete: function (jqXHR, textStatus) {

                        }
                    });

                }
            });
</script>
<div id="siteToolbar">
    <ul class="esg-header-bar__menu">
            <li class="esg-header-bar__menu-item esg-header-bar__menu-item-no-notifications">
                <div class="esg-dropdown">
                    <a id="userName" class="esg-header-bar__menu-link esg-dropdown__toggle" data-toggle="dropdown">
                        <span class="esg-header-bar__icon esg-icon__container" aria-hidden="True">
                            <svg class="esg-icon esg-icon--white">
                                <use xlink:href="#icon-avatar"></use>
                            </svg>
                        </span>
                        <span id="username-hover" class="esg-header-bar__icon-label" aria-label="View Account Options">mconners3</span>
                    </a>
                    

                    <ul id="userOptions" class="css-user-options header-dropdown esg-dropdown__menu esg-dropdown__menu--popover" tabindex="0">
                                                    <li class="esg-dropdown__menu-item">
                                                        <a aria-label="Access your profile" class="esg-dropdown__link" href="/Student/UserProfile">User Profile</a>
                                                    </li>
                                                    <li class="esg-dropdown__menu-item">
                                                        <a aria-label="Access your emergency information" class="esg-dropdown__link" href="/Student/UserProfile/EmergencyInformation">Emergency Information</a>
                                                    </li>
                                                    <li class="esg-dropdown__menu-item">
                                                        <a aria-label="Change your account settings" class="esg-dropdown__link" href="/Student/UserProfile/Preferences">Account Preferences</a>
                                                    </li>

                    </ul>
                </div>
            </li>
                    <li class="esg-header-bar__menu-item esg-header-bar__menu-item-no-notifications">
                <div class="esg-dropdown">
                    <a id="logOff" class="esg-header-bar__menu-link esg-dropdown__toggle" data-toggle="dropdown">
                        <span class=" esg-header-bar__icon esg-icon__container" aria-hidden="True">
                            <svg class="esg-icon esg-icon--white">
                                <use xlink:href="#icon-clear"></use>
                            </svg>
                        </span>
                        <span class="esg-header-bar__icon-label" id="logOff-hover">Sign out</span>
                    </a>
                    <ul id="logOffOptions" class="esg-dropdown__menu esg-dropdown__menu--popover" tabindex="0">
                        <li class="esg-dropdown__menu-item"><a aria-label="Sign out of Colleague Self-Service " class="esg-dropdown__link" href="/Student/Account/LogOff" onclick="Ellucian.Storage.session.clear();">Sign out</a></li>
                        <li id="changeProxyUser-link" style="display: none;" class="esg-dropdown__menu-item"><a href="#" class="esg-dropdown__link" data-bind="click: changeProxySubject">Change Proxy User</a></li>
                    </ul>
                </div>
            </li>


        <li class="esg-header-bar__menu-item esg-header-bar__menu-item--mobile-full-width esg-header-bar__menu-item-no-notifications">
            <div class="esg-dropdown">
                <a id="help" class="esg-header-bar__menu-link esg-dropdown__toggle" data-toggle="dropdown">
                    <span class="esg-header-bar__icon esg-icon__container" aria-hidden="True">
                        <svg class="esg-icon esg-icon--white">
                            <use xlink:href="#icon-help"></use>
                        </svg>
                    </span>
                    <span class="esg-header-bar__icon-label" aria-label="View help for the active page ">Help</span>
                </a>
                
<div id="help-region" class="css-help-region esg-dropdown__menu esg-dropdown__menu--popover" tabindex="0">
    <div id="help-body">
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        
        site.toolbar.helpNotAvailableMessage = 'Help is not available for this page.';

        var helpUrl = '/Student/Help/Partial/DegreePlansIndex/Planning';
        site.toolbar.addHelpContent(helpUrl);
    });
</script>

            </div>
        </li>
        <li id="notificationHost" class="esg-header-bar__menu-item esg-notification-center__badge esg-header-bar__menu-item-no-notifications" aria-live="polite" style="display: none;">
            <div class="esg-notification-center__dropdown">
                <button id="notificationMenu" type="button" class="esg-dropdown-toggle esg-dropdown-notifications" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">0</button>
                <ul role="alert" class="esg-notification-center" aria-live="assertive" aria-atomic="true" aria-labelledby="notificationMenu"></ul>
            </div>
        </li>
    </ul>
</div>
        </nav>

        <div id="proxy-selection">


            <!-- The proxy selection dialog can be invoked from anywhere that the proxy banner shows,
            so include the dialog and the supporting scripts here -->
            <!-- Copyright 2015 Ellucian Company L.P. and its affiliates. -->
<div class="proxy-selection-dialog-wrapper">

    <!-- Loading Proxy Picker Spinner -->
    <modal-spinner id="loading-proxy-picker" params="isVisible: proxySelectionDialogIsLoading, message: loadingMessage"><div style="display: none;" class="esg-modal-dialog esg-is-open" data-bind="visible: isVisible">
    <div class="esg-modal-dialog__body">
        <spinner params="isVisible: isVisible, message: message"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper" style="display: none;">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Loading the proxy selection dialog box...</div>
    <!-- /ko -->
</div></spinner>
    </div>
</div>
<div style="display: none;" class="esg-modal-overlay" data-bind="visible: isVisible"></div>
</modal-spinner>

    <!-- End Loading Proxy Picker Spinner -->
    <!-- Changing Proxy Picker Spinner -->
    <modal-spinner id="changing-proxy-picker" params="isVisible: changingProxyUsers, message: changingUserMessage"><div style="display: none;" class="esg-modal-dialog esg-is-open" data-bind="visible: isVisible">
    <div class="esg-modal-dialog__body">
        <spinner params="isVisible: isVisible, message: message"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper" style="display: none;">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Switching to user {0}...</div>
    <!-- /ko -->
</div></spinner>
    </div>
</div>
<div style="display: none;" class="esg-modal-overlay" data-bind="visible: isVisible"></div>
</modal-spinner>

    <!-- End Changing Proxy Picker Spinner -->

    <modal-dialog id="proxy-selection-dialog" params="title: 'Person Proxy', isVisible: proxySelectionDialogIsDisplayed, content: $data, buttons: [cancelProxySelectionButton, saveProxySelectionButton], defaultCloseOff: true"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Person Proxy</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
        <fieldset>
            <legend>
                <span aria-hidden="true">Welcome to Colleague Self-Service!</span>
                <span>Select the person's account you want to view:</span>
            </legend>
            <!-- ko foreach: ProxySubjects --><!-- /ko -->
        </fieldset>
    <!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="cancel-proxy-selection-dialog-button" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" disabled="" id="save-proxy-selection-dialog-button" aria-label="Continue">Continue</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>
</div>


        </div>

    </header>




        <script>
            $(document).ready(function () {
                navMenu.menuLoad.then(function (result) {
                    navMenu.addClassToElementAndParentMenus($('[data-menu-item-id=schedulePlan]').first(), 'current-page');
                });
            });
        </script>



<div class="nav-top-section">
    <button id="toggle-nav-button" type="button" aria-label="Open the navigation menu"></button>
</div>
<div class="sidebar-nav-wrapper">
    <nav id="drawer-nav" role="navigation">
        <ul id="nav-root" class="primary-menu">
            <li class="menu-wrapper supress-expand">
                <a class="menu-item" data-menu-item-id="home" rel="menu" data-menu-id="nav-home" href="/Student/" data-bind="tooltip: { position: 'right', message: 'Home' }">Home</a>
            </li>
        <li class="menu-wrapper">
            <div role="heading" aria-level="1" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-1" data-menu-level="0" aria-expanded="false" aria-controls="nav-contents-financial-information"><span class="menu-item" data-menu-id="nav-financial-information" rel="menu" data-bind="tooltip: { position: 'right', message: 'Financial Information' }">
                Financial Information
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu secondary-menu" id="nav-contents-financial-information" role="region" aria-labelledby="nav-group-1" style="overflow: hidden; display: none;">
        <li class="menu-wrapper">
            <div role="heading" aria-level="2" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-1-0" data-menu-level="1" aria-expanded="false" aria-controls="nav-contents-financial-aid"><span class="menu-item" data-menu-id="nav-financial-aid" rel="menu" data-bind="tooltip: { position: 'right', message: 'Financial Aid' }" style="">
                Financial Aid
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu tertiary-menu" id="nav-contents-financial-aid" role="region" aria-labelledby="nav-group-1-0" style="overflow: hidden; display: none;">
                                <li>

                                    <a class="menu-item" data-menu-item-id="faHome" href="/Student/FinancialAid/Home">Financial Aid Home</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="faDocuments" href="/Student/FinancialAid/Documents">Required Documents</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="faAwards" href="/Student/FinancialAid/Awards">My Awards</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="faOutsideAwards" href="/Student/FinancialAid/OutsideAwards">Report/View Outside Awards</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="faAwardLetter" href="/Student/FinancialAid/AwardLetter">Award Letter</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="faShoppingSheet" href="/Student/FinancialAid/ShoppingSheet">Federal Shopping Sheet</a>
                                </li>
            </ul>

        </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="studentTaxInformation" href="/Student/Student/TaxInformation/TaxInformation">Tax Information</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="bankingInformation" href="/Student/HumanResources/BankingInformation">Banking Information</a>
                                </li>
            </ul>

        </li>
        <li class="menu-wrapper">
            <div role="heading" aria-level="1" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-2" data-menu-level="0" aria-expanded="false" aria-controls="nav-contents-my-employment"><span class="menu-item" data-menu-id="nav-my-employment" rel="menu" data-bind="tooltip: { position: 'right', message: 'Employment' }">
                Employment
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu secondary-menu" id="nav-contents-my-employment" role="region" aria-labelledby="nav-group-2" style="overflow: hidden; display: none;">
        <li class="menu-wrapper">
            <div role="heading" aria-level="2" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-2-0" data-menu-level="1" aria-expanded="false" aria-controls="nav-contents-employee"><span class="menu-item" data-menu-id="nav-employee" rel="menu" data-bind="tooltip: { position: 'right', message: 'Employee' }" style="">
                Employee
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu tertiary-menu" id="nav-contents-employee" role="region" aria-labelledby="nav-group-2-0" style="overflow: hidden; display: none;">
                                <li>

                                    <a class="menu-item" data-menu-item-id="employeeHome" href="/Student/HumanResources/Home">Employee Overview</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="taxInformation" href="/Student/HumanResources/TaxInformation">Tax Information</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="bankingInformation" href="/Student/HumanResources/BankingInformation">Banking Information</a>
                                </li>
            </ul>

        </li>
            </ul>

        </li>
        <li class="menu-wrapper current-page">
            <div role="heading" aria-level="1" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-3" data-menu-level="0" aria-expanded="false" aria-controls="nav-contents-my-academics"><span class="menu-item" data-menu-id="nav-my-academics" rel="menu" data-bind="tooltip: { position: 'right', message: 'Academics' }">
                Academics
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu secondary-menu" id="nav-contents-my-academics" role="region" aria-labelledby="nav-group-3" style="overflow: hidden; display: none;">
        <li class="menu-wrapper current-page">
            <div role="heading" aria-level="2" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-3-0" data-menu-level="1" aria-expanded="false" aria-controls="nav-contents-academic-planning"><span class="menu-item" data-menu-id="nav-academic-planning" rel="menu" data-bind="tooltip: { position: 'right', message: 'Student Planning' }" style="">
                Student Planning
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu tertiary-menu" id="nav-contents-academic-planning" role="region" aria-labelledby="nav-group-3-0" style="overflow: hidden; display: none;">
                                <li>

                                    <a class="menu-item" data-menu-item-id="apHome" href="/Student/Planning">Planning Overview</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="myprogress" href="/Student/Planning/Programs/MyProgress">My Progress</a>
                                </li>
                                <li>

                                    <a class="menu-item current-page" data-menu-item-id="schedulePlan" href="/Student/Planning/DegreePlans">Plan &amp; Schedule</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="courseCatalog" href="/Student/Planning/Courses">Course Catalog</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="testSummary" href="/Student/Planning/TestScores">Test Summary</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="unofficialTranscripts" href="/Student/Planning/Transcripts">Unofficial Transcript</a>
                                </li>
            </ul>

        </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="gradesHome" href="/Student/Student/Grades">Grades</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="courseCatalogExcludeDegreePlanHome" href="/Student/Courses">Course Catalog</a>
                                </li>
            </ul>

        </li>
        <li class="menu-wrapper">
            <div role="heading" aria-level="1" class="menu-header"><button type="button" class="menu-item-button" id="nav-group-4" data-menu-level="0" aria-expanded="false" aria-controls="nav-contents-sidebar-user-options"><span class="menu-item" data-menu-id="nav-sidebar-user-options" rel="menu" data-bind="tooltip: { position: 'right', message: 'User Options' }">
                User Options
            <span class="float-right arrow arrow-down"></span></span></button></div>
            <ul class="child-menu secondary-menu" id="nav-contents-sidebar-user-options" role="region" aria-labelledby="nav-group-4" style="overflow: hidden; display: none;">
                                <li>

                                    <a class="menu-item" data-menu-item-id="aboutYou" href="/Student/UserProfile">User Profile</a>
                                </li>
                                <li>

                                    <a class="menu-item" data-menu-item-id="emergencyInfo" href="/Student/UserProfile/EmergencyInformation">Emergency Information</a>
                                </li>
            </ul>

        </li>
        </ul>
    </nav>
</div>
<div class="nav-overlay"></div>

    <div id="main">









    <nav id="breadcrumb">
        <ul id="breadcrumb-root" class="clear-group" style="display: block;">

        <li class="breadcrumb-menu-wrapper">
            <div role="heading" aria-level="1" class="breadcrumb-menu-header"><button type="button" class="menu-item-button" id="bc-group-0" data-menu-level="0" aria-expanded="false" aria-controls="breadcrumb-nav-contents-my-academics"><span class="breadcrumb-menu-item" data-menu-id="nav-my-academics">Academics<span class="breadcrumb-arrow arrow arrow-down"></span></span></button></div>
            <ul class="breadcrumb-drop child-menu" id="breadcrumb-nav-contents-my-academics" role="region" aria-labelledby="bc-group-0" style="overflow: hidden;">
                                <li>
                                    <a data-menu-item-id="bc-apHome" href="/Student/Planning">Student Planning</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-gradesHome" href="/Student/Student/Grades">Grades</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-courseCatalogExcludeDegreePlanHome" href="/Student/Courses">Course Catalog</a>
                                </li>
            </ul>
        </li>
        <li class="breadcrumb-menu-wrapper">
            <div role="heading" aria-level="1" class="breadcrumb-menu-header"><button type="button" class="menu-item-button" id="bc-group-1" data-menu-level="0" aria-expanded="false" aria-controls="breadcrumb-nav-contents-academic-planning"><span class="breadcrumb-menu-item" data-menu-id="nav-academic-planning">Student Planning<span class="breadcrumb-arrow arrow arrow-down"></span></span></button></div>
            <ul class="breadcrumb-drop child-menu" id="breadcrumb-nav-contents-academic-planning" role="region" aria-labelledby="bc-group-1" style="overflow: hidden;">
                                <li>
                                    <a data-menu-item-id="bc-apHome" href="/Student/Planning">Planning Overview</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-myprogress" href="/Student/Planning/Programs/MyProgress">My Progress</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-schedulePlan" href="/Student/Planning/DegreePlans">Plan &amp; Schedule</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-courseCatalog" href="/Student/Planning/Courses">Course Catalog</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-testSummary" href="/Student/Planning/TestScores">Test Summary</a>
                                </li>
                                <li>
                                    <a data-menu-item-id="bc-unofficialTranscripts" href="/Student/Planning/Transcripts">Unofficial Transcript</a>
                                </li>
            </ul>
        </li>
                    <li>
                        Plan &amp; Schedule
                    </li>
        </ul>
    </nav>
    <div class="breadcrumb-separator"></div>
    <div id="breadcrumb-overlay"></div>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#breadcrumb-root").menuAccordion({ buttonIdPrefix: 'bc-group', collapseStateElement: "<span class='breadcrumb-arrow arrow'>", menuLevelClasses: [], headingClass: "breadcrumb-menu-header", menuItemClass: "breadcrumb-menu-item", menuWrapperClass: "breadcrumb-menu-wrapper" });
            
            $("#breadcrumb-root").show();

            
            $("#breadcrumb-root .menu-item-button").mouseenter(function openMenu() {
                var self = this;
                
                setTimeout(function openMenuOnHover() {
                    var thisMenuIsVisible = $(self).parent().siblings("ul").is(":visible");
                    if (!thisMenuIsVisible) {
                        $(self).trigger('click');
                    }
                }, 10);
            });

            
            var menuCloseTimeout;

            $('#breadcrumb').hover(function () {
                clearTimeout(menuCloseTimeout);
            },
            function () {
                menuCloseTimeout = setTimeout(function () {
                    closeMenus();
                }, 300);
            });
        });

        function closeMenus() {
            $(".breadcrumb-menu-item").each(function checkAndCloseSingleMenu() {
                var thisMenuIsVisible = $(this).parents(".breadcrumb-menu-header").siblings("ul").is(":visible");
                if (thisMenuIsVisible) {
                    $(this).parent().trigger('click');
                }
            });
        }
    </script>

        <div id="body">
            <section id="main-content" class="content-wrapper clear-group" role="main">
                








<div id="page-description" class="esg-page-header">
    <!-- Page Header Text -->
    <h2 class="esg-page-header__title">Plan your Degree and Schedule your courses</h2>

    <!-- Page Header Search/Help Inputs -->
    <div id="page-description-other" class="esg-page-header__input">
        
<form action="/Student/Planning/Courses/Search" id="search-form" method="get">
<div class="esg-form__group">
    <div class="esg-form__input-group">
        <label for="keyword" class="offScreen">Search for Courses by Keyword</label>
        <input class="esg-form__input" id="keyword" name="keyword" data-bind="watermark: { text: 'Search for courses...', options:{ className: 'keyword-default'}, value: (typeof Keyword === 'undefined' ? null : Keyword) }" placeholder="Search for courses...">
        <button id="submit-course-search" class="esg-form__icon esg-icon__container esg-form__icon--submit" role="button">
            <svg class="esg-icon esg-icon--small esg-icon--light">
                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#icon-search"></use>
            </svg>
            <span class="offScreen">Search for Courses by Keyword</span>
        </button>
    </div>
</div></form>
    </div>
</div>
<!-- Main Degree Plan Page Container -->
<div id="dp-monolith" class="column-nine clear-group">

    <!-- Spinner for page loading -->
    <div id="spinner" style="display: none;" data-bind="visible: isPageLoading()" class="css-spinner-wrapper">
        <div class="esg-spinner-wrapper">
            <div class="esg-spinner"></div>
        </div>
        <div class="css-spinner-wrapper__message" data-bind="html: stringPlanningHomeLoadingDataSpinnerMessage">Loading My Data...</div>
    </div>

    <div id="schedplan-outer" style="" data-bind="visible: !isPageLoading() &amp;&amp; typeof DegreePlan() !== 'undefined'">
        <!-- Display "load sample" banner if student has not begun planning. -->
<!-- ko if: typeof DegreePlan() !== 'undefined' && DegreePlan().HasPlannedCourses() == false && DegreePlan().IsLoadSamplePlanAllowed() == true && DegreePlan().Terms().length !== 0 --><!-- /ko -->

        <!-- Errors and alerts -->
        <!-- ko if: Notification().Message.length > 0 --><!-- /ko -->
        <!-- Inline message and button for Immediate Payment -->
        <message params="isVisible: IsRegistrationPaymentRequired, message: 'You must click this button to pay for registration or you could be removed from your classes.', type: 'error', button: { callback: ImmediatePayment, label: 'Pay for Registration', ariaLabel: 'Complete the registration process by making payment arrangements.'}"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
        <!-- Special UI when no terms are present -->
<message params="isVisible: DegreePlan().Terms().length === 0, message: 'Your Course Plan is Currently Empty', button: { label: 'Add a Term to Your Plan', callback: $root.ShowAddTermDialog }, type: 'info'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>

        <!-- Main Plan UI -->
        <!-- ko if: Notification().Type != "Error" -->
        <!-- ko if: ko.utils.unwrapObservable(currentTermCode) != null -->
        <div class="schedplan-nav ui-tabs ui-widget ui-widget-content ui-corner-all" id="schedplan-tabs" data-bind="jqTabs: {}" style="visibility: visible;">
            <ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all">
                <li class="ui-state-default ui-corner-top ui-tabs-selected ui-state-active"><a href="#schedplan-schedule" id="schedplan-schedule-tablink">Schedule</a></li>
                <li class="ui-state-default ui-corner-top"><a href="#schedplan-dp">Timeline</a></li>
                <li class="ui-state-default ui-corner-top"><a href="#schedplan-advising">Advising</a></li>
                <li class="ui-state-default ui-corner-top"><a href="#schedplan-petitions-waivers">Petitions &amp; Waivers</a></li>
            </ul>

            <div id="schedplan-schedule" class="ui-tabs-panel ui-widget-content ui-corner-bottom">
                
<div id="schedule-partial-outer">
    <div class="clear-group">
    <div id="schedule-tabs">
        <div id="schedule-data">
            <!-- ko with: $data.currentTerm() -->
            <div class="section-header section-header-left">
                <!-- Term Selection -->
                <button id="schedule-prev-term" class="esg-button esg-button--secondary esg-button--small" data-bind="click: $root.SelectPreviousTerm, attr: {'aria-label': 'Show the previous term', 'title': 'Show the previous term', 'alt': 'Show the previous term'}, enable: Code() !== $root.FirstTerm()" aria-label="Show the previous term" title="Show the previous term" alt="Show the previous term"><span class="caret-left"></span></button>
                <button id="schedule-next-term" class="esg-button esg-button--secondary esg-button--small" data-bind="click: $root.SelectNextTerm, attr: {'aria-label': 'Show the next term    ', 'title': 'Show the next term    ', 'alt': 'Show the next term    '}, enable: Code() !== $root.LastTerm()" aria-label="Show the next term    " title="Show the next term    " alt="Show the next term    " disabled=""><span class="caret-right"></span></button>

                <span id="schedule-activeterm">
                    <span id="schedule-activeterm-text" data-bind="text: Description()">Spring 2018</span>
                </span>
                <button id="schedule-remove-term" class="esg-button esg-button--secondary esg-button--small" aria-label="Remove this term" title="Remove this term" alt="Remove this term" data-bind="click: function() { $root.ShowRemoveTermDialog(); }, visible: $data.IsTermRemovable() === true &amp;&amp; $root.canEdit() === true &amp;&amp; $root.DegreePlan().Terms().length > 1 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true)" style="display: none;"></button>
                <button type="button" id="schedule-add-term" class="esg-button esg-button--secondary esg-button--small" aria-label="Add a term..." title="Add a term..." data-bind="click: function() { $root.ShowAddTermDialog(); }, visible: $root.canEdit() === true &amp;&amp; $root.DegreePlan().UnplannedTerms().length > 0 "></button>

                <div class="register-wrapper">
                    <div class="register-inner">
                        <button type="button" id="schedule-clear-term" class="esg-button esg-button--secondary esg-button--small" value="Remove Planned Courses" aria-label="Clear all planned courses from the term" title="Clear all planned courses from the term" alt="Clear all planned courses from the term" data-bind="click: function() {$root.ShowClearPlannedTermDialog(); }, visible: $root.canEdit() === true &amp;&amp; $data.IsTermClearable() === true &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser())" style="display: none;">Remove Planned Courses</button>
                        <button type="button" id="register-button" class="esg-button esg-button--primary esg-button--small" value="Register Now" data-bind="visible: $root.showRegister() === true, click: $root.RegisterAllHandler, clickBubble:false, enable: $root.canRegister() === true">Register Now</button>
                    </div>
                </div>

                <!-- Display the registration add time message -->
                <!-- ko with: $root.currentTermAddMessage --><!-- /ko -->
                <!-- End registration add time message -->

                <hr id="register-hr">

                <!-- Action Buttons in Header -->
                <!-- ko if: !$root.isProxyUser() -->
                <a id="toggle-section-filters" href="#" aria-label="Toggle Section Filter Options" data-bind="click: $parent.toggleSectionFilters, clickBubble: false, css: { 'filter-sections-collapsed': $data.showingFilters() == false, 'filter-sections-expanded': $data.showingFilters() == true }" class="filter-sections-collapsed">
                    <div class="normal">Filter Sections</div>
                    <div data-bind="css: { 'filter-expandicon': $data.showingFilters() == false, 'filter-collapseicon': $data.showingFilters() == true }" class="filter-expandicon">
                    </div>
                </a>
                <input type="button" id="print-schedule" value="Print" data-bind="attr: {'aria-label': 'Print schedule for '+ $data.Description() }, click: $data.printSchedule" aria-label="Print schedule for Spring 2018">
                <input type="button" id="save-ical" value="Save to iCal" data-bind="enable: $data.IsAcademicHistoryAvailable() === true &amp;&amp; $data.IsTermCompleted() === false, click: $data.saveIcal, attr: {'aria-label': 'Export schedule for '+ $data.Description() }" aria-label="Export schedule for Spring 2018">
                <!-- /ko -->
                <!-- Credits Display -->

                <div class="credit-total-wrapper">
                    <div class="schedule-credits">
                        <span class="schedule-credits-header">Planned:</span> <span class="schedule-credits-content" data-bind="text: $data.PlannedCreditsDisplay() + ' Credits'">0 Credits</span><span class="schedule-credits-content" data-bind="visible: $data.PlannedCeusDisplay() > 0, text: ', ' + $data.PlannedCeusDisplay() + ' CEUs'" style="display: none;">, 0 CEUs</span>
                    </div>
                    <div class="schedule-credits">
                        <span class="schedule-credits-header">Enrolled:</span> <span class="schedule-credits-content" data-bind="text: $data.EnrolledCreditsDisplay() + ' Credits'">16 Credits</span><span class="schedule-credits-content" data-bind="visible: $data.EnrolledCeusDisplay() > 0, text: ', ' + $data.EnrolledCeusDisplay() + ' CEUs'" style="display: none;">, 0 CEUs</span>
                    </div>
                    <div class="schedule-credits">
                        <span class="schedule-credits-header">Waitlisted:</span>
                        <span class="schedule-credits-content" data-bind="text: $data.WaitlistedCreditsDisplay() + ' Credits'">0 Credits</span><span class="schedule-credits-content" data-bind="visible: $data.WaitlistedCeusDisplay() > 0, text: ', ' + $data.WaitlistedCeusDisplay() + ' CEUs'" style="display: none;">, 0 CEUs</span>
                    </div>
                </div>
                <div class="clear-group"></div>
                <!-- Section Filters -->
                <div id="schedule-section-filters-wrapper" class="clear-group" data-bind="slide: $data.showingFilters(), duration: 100" style="overflow: hidden;">
                    <ul id="filters-menu">

                        <!-- Availability -->
                        <li id="section-filter-availability-enabled" class="filters-menu-link clear-group" data-bind="visible: availabilityFilters().length > 0 &amp;&amp; availabilityFilters()[0].Count() > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Availability Filter List " title="Toggle Availability Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Availability
                                        <div class="schedule-filter-current" data-bind="text: availabilityFiltersDisplay">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter" id="filter-availability-entries-wrapper" data-bind="foreach: availabilityFilters"></ul>
                        </li>
                        <li id="section-filter-availability-disabled" class="clear-group" data-bind="visible: availabilityFilters().length == 0 || availabilityFilters()[0].Count() == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No Availability filter options are available" title="No Availability filter options are available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Availability
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Availability -->
                        <!-- Location -->
                        <li id="section-filter-location-enabled" class="filters-menu-link" data-bind="visible: locationFilters().length > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Location Filter List" title="Toggle Location Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Location
                                        <div class="schedule-filter-current" data-bind="text: locationFiltersDisplay">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter clear-group" id="filter-location-entries-wrapper" data-bind="foreach: locationFilters"></ul>
                        </li>
                        <li id="section-filter-location-disabled" class="clear-group" data-bind="visible: locationFilters().length == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No Location filter options are available" title="No Location filter options are available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Location
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Location -->
                        <!-- Days of Week -->
                        <li id="section-filter-dayofweek-enabled" class="filters-menu-link" data-bind="visible: dayOfWeekFilters().length > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Day of Week Filter List" title="Toggle Day of Week Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Day of Week
                                        <div class="schedule-filter-current" data-bind="text: dayOfWeekFiltersDisplay">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter" id="filter-dayofweek-entries-wrapper" data-bind="foreach: dayOfWeekFilters"></ul>
                        </li>
                        <li id="section-filter-dayofweek-disabled" class="clear-group" data-bind="visible: dayOfWeekFilters() == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No Day of Week filter options are available " title="No Day of Week filter options are available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Day of Week
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Days of Week -->
                        <!-- Time of Day -->
                        <li id="section-filter-timeofday-enabled" class="filters-menu-link" data-bind="visible: timeOfDayFilters().length > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Time of Day Filter List " title="Toggle Time of Day Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Time of Day
                                        <div class="schedule-filter-current" data-bind="text: timeOfDayFiltersDisplay">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter" id="filter-timeofday-entries-wrapper" data-bind="foreach: timeOfDayFilters"></ul>
                        </li>
                        <li id="section-filter-timeofday-disabled" class="clear-group" data-bind="visible: timeOfDayFilters().length == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No Time of Day filter options are available" title="No Time of Day filter options are available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Time of Day
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Time of Day -->
                        <!-- Instructor -->
                        <li id="section-filter-instructor-enabled" class="filters-menu-link" data-bind="visible: facultyFilters().length > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Instructor Filter List " title="Toggle Instructor Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Instructor
                                        <div class="schedule-filter-current" data-bind="text: facultyFiltersDisplay">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter" id="filter-instructor-entries-wrapper" data-bind="foreach: facultyFilters"></ul>
                        </li>
                        <li id="section-filter-instructor-disabled" class="clear-group" data-bind="visible: facultyFilters().length == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No Faculty filter options are available" title="No Faculty filter options are available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Instructor
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Instructor -->
                        <!-- Topic -->
                        <li id="section-filter-topic-enabled" class="filters-menu-link" data-bind="visible: topicFilters().length > 0 &amp;&amp; topicFilters()[0].Count() > 0" style="display: none;">
                            <a class="filter-header-link filter-header-link-collapsed" data-bind="click: filterHeaderClickHandler, clickBubble: false" href="#" aria-label="Toggle Availability Filter List" title="Toggle Availability Filter List">
                                <div class="schedule-filter-header-outer">
                                    <div class="schedule-filter-header">
                                        Topic
                                        <div class="schedule-filter-current" data-bind="text: topicFiltersDisplay">Any</div>
                                        <div class="corner-caret"></div>
                                    </div>
                                </div>
                            </a>
                            <ul class="filters-menu-filter" id="filter-topic-entries-wrapper" data-bind="foreach: topicFilters"></ul>
                        </li>
                        <li id="section-filter-topic-disabled" class="clear-group" data-bind="visible: topicFilters().length == 0">
                            <a class="filter-header-link-disabled" href="#" aria-label="No topic filters available" title="No topic filters available">
                                <div class="schedule-filter-header-outer-disabled">
                                    <div class="schedule-filter-header">
                                        Topic
                                        <div class="schedule-filter-current">Any</div>
                                        <div class="corner-caret">
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                        <!-- /Topic -->
                    </ul>
                </div>
            </div>

            
<div class="plan-wrapper" data-bind="css: { 'plan-wrapper-tabs' : $root.isMobile }, jqTabs: {}, jqTabsDestroy: !$root.isMobile()">
    <ul class="mobile-nav-tabs" style="display: none;" data-bind="visible: $root.isMobile">
        <li><a data-bind="attr: { 'href' : '#plan-list' + $data.Code().replace(/[^a-z0-9\s]/gi, '') }" href="#plan-list18SP">List</a></li>
        <li><a data-bind="attr: { 'href' : '#plan-calendar' + $data.Code().replace(/[^a-z0-9\s]/gi, '') }" href="#plan-calendar18SP">Calendar</a></li>
    </ul>
    <!-- Left Side, Course List -->
    <div class="column-two" data-bind="attr:{ id: 'plan-list' + $data.Code().replace(/[^a-z0-9\s]/gi, '') }" id="plan-list18SP">
        <div class="section-header-list-view">Schedule List View</div>
        <section class="section-wrapper">
            <message params="isVisible: typeof PlannedCourses === 'undefined' || PlannedCourses().length == 0, message:'No Courses Selected For This Term', addMargin: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
            <div data-bind="if: typeof PlannedCourses !== 'undefined' &amp;&amp; PlannedCourses().length != 0, visible: typeof PlannedCourses !== 'undefined' &amp;&amp; PlannedCourses().length != 0">
                <ul class="schedule-list" data-bind="foreach: PlannedCourses()" style="height: 695.8439998626709px;">
                    <li class="esg-card schedule-listitem">
                        <!-- Header -->
                        <div class="esg-card-header schedule-listitem-header clear-group">
                            <!-- Title + Details Link -->
                            <a href="#" class="schedule-listitem-header-title" data-bind="text: $data.FullTitleDisplay(), click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, allowUpdating: $root.canEdit() &amp;&amp; ko.utils.unwrapObservable($data.AcademicHistory) == null &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), addTerms: $root.planningTerms(), updateCallback: $parents[1].UpdateCourse, creditsOverride: $data.Credits(), gradingTypeOverride: $data.GetGradingType(), canSkipWaitlist: $parents[1].canSkipWaitlist(), selectedTerm: $parent.Code()})}, clickBubble: false, attr: { 'aria-label': 'Course or section details for' + $data.FullTitleDisplay() + ' ', alt: 'Course or section details for' + $data.FullTitleDisplay(), title: 'Course or section details for' + $data.FullTitleDisplay() + ' '}" aria-label="Course or section details forMUS*136-10: Class Guitar I " alt="Course or section details forMUS*136-10: Class Guitar I" title="Course or section details forMUS*136-10: Class Guitar I ">MUS*136-10: Class Guitar I</a>
                            <!-- Remove Link -->
                            <button type="button" class="esg-button--float-right" data-bind="visible: $data.AcademicHistory.HasSection() === false &amp;&amp; $data.AcademicHistory.IsCompletedCredit() === false &amp;&amp; $root.canEdit() === true &amp;&amp; !($data.SectionWaitlistStatus() == 'Active' || $data.SectionWaitlistStatus() == 'PermissionToRegister') &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), click: function () {$parents[1].ShowRemoveCourseDialog($data, $parent, $data.IsNonTermSection());}, clickBubble: false, attr: {id:'removecourse'+$data.SubjectCode() + '-' + $data.Number() ,alt: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', title: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', 'aria-label': 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' '}" id="removecourseMUS-136" alt="Remove entire courseMUS-136: Class Guitar I " title="Remove entire courseMUS-136: Class Guitar I " aria-label="Remove entire courseMUS-136: Class Guitar I " style="display: none;">
                                <span class="esg-icon__container" aria-hidden="True">
                                    <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                        <use xlink:href="#icon-close"></use>
                                    </svg>
                                </span>
                                <span class="offScreen" data-bind="attr:{'aria-label':'Remove entire course'}" aria-label="Remove entire course"></span>
                            </button>
                        </div>
                        <!-- Body (Footer is nested within) -->
                        <div class="schedule-listitem-newbody">
                            <!-- Advising Status -->
                            <div class="schedule-listitem-protected-wrapper">
                                <div class="schedule-listitem-course-warning" data-bind="visible: $data.IsProtected()" style="display: none;">
                                    <div class="schedule-conflictingsectionwaitlistmessage-icon">
                                    </div>
                                    <span>Protected</span>
                                </div>
                            </div>
                            <div class="schedule-listitem-approved-wrapper">
                                <div class="schedule-listitem-approved" data-bind="visible: $data.ApprovalStatus() === 'Approved'" style="display: none;">
                                    <div class="schedule-listitem-approvedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <div class="schedule-listitem-denied-wrapper">
                                <div class="schedule-listitem-denied" data-bind="visible: $data.ApprovalStatus() === 'Denied'" style="display: none;">
                                    <div class="schedule-listitem-deniedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <!-- Course Requisite Warnings -->
                            <!-- ko foreach: RequisiteWarnings --><!-- /ko -->
                            <!-- Course Co-Requisite Warnings (these go away after conversion) -->
                            <!-- ko foreach: CorequisiteCourseWarnings --><!-- /ko -->
                            <!-- Other Course Warnings -->
                            <!-- ko foreach: Warnings --><!-- /ko -->
                            <!-- Requisite Section warnings -->
                            <!-- ko foreach: CorequisiteSectionWarnings() --><!-- /ko -->
                            <!-- ko if: ko.utils.unwrapObservable($data.Section) != null -->
                            <div data-bind="css: courseListItemStyle" class="schedule-listitem-registeredsection">
                                <div data-bind="css: courseBannerWrapperStyle">
                                    <div data-bind="css: courseBannerStyle" class="schedule-listitem-registeredsectionbanner">
                                        <span data-bind="text: courseBannerText">Registered, but not started</span>
                                    </div>
                                </div>
                                <!-- ko if: !$data.Section.IsActive() --><!-- /ko -->
                                <!-- Start Section Details -->
                                <div class="section-details">
                                    <!-- ko template: {name: 'section-detail-template', data: $data.Section } -->
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()">Credits: 2</span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() --><!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()">Grading: Graded</span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data">Instructor: Palmer, M</span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 --><!-- /ko -->
<!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay">1/22/2018</span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"> to </span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)">5/11/2018</span>
    </div>
<!-- /ko -->
                                    <!-- Seat and Waitlist Counts - only for planned, but not registered, sections -->
                                    <!-- ko if: $data.HasSection() && ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                    <!-- ko if: $data.HasMeetings() -->
                                    <div class="meeting-info-toggle-container" data-bind="click: ToggleMeetingInfo" aria-controls="planned-meetings-region">
                                        <span data-bind="attr: {'class': $data.MeetingInfoStyle()}" class="meeting-information-hidden"></span>
                                        <button class="no-styles" aria-label="show meeting information">Meeting Information</button>
                                    </div>
                                    <div data-bind="visible: ShowMeetingInfo" style="display: none;">
                                        <!-- ko template: {name: 'section-meeting-template', data: $data.Section } -->
    <!-- Meeting Details/Times -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length > 0" role="region" aria-live="polite" id="planned-meetings-region" aria-relevant="additions">
        <div data-bind="foreach: PlannedMeetings">
            <div class="meeting-information">
                <div aria-label="Meeting Time">
                    <span>Time: </span>
                    <span data-bind="text: ko.utils.unwrapObservable(DaysOfWeek)">T</span>
                    <span data-bind="text: ko.utils.unwrapObservable(FormattedTime)">11:30 AM - 12:45 PM</span>
                </div>
                <div aria-label="Meeting Dates">
                    <span>Dates:</span>
                    <span data-bind="text: ko.utils.unwrapObservable(Dates)">1/22/2018 - 5/11/2018</span>
                </div>
                <div aria-label="Meeting Location">
                    <span>Location: </span>
                    <span data-bind="text: ko.utils.unwrapObservable($parent.LocationDisplay)"></span>
                    <span data-bind="text: ko.utils.unwrapObservable(MeetingLocation)">Gibson 244 </span>
                    <span data-bind="text: '(' + ko.utils.unwrapObservable(InstructionalMethod) + ')', visible: ko.utils.unwrapObservable(InstructionalMethod)">(Lecture)</span>
                </div>
            </div>
        </div>
    </div>
    <!-- ko template: {name: 'section-no-meeting-template' } -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0"></div>
<!-- /ko -->
<!-- /ko -->
                                    </div>
                                    <!-- /ko -->
                                    <!-- Show TBD, no toggle if there are no meetings -->
                                    <!-- ko if: $data.HasMeetings() == false --><!-- /ko -->
                                </div>
                                <!-- End Section Details -->
                                <!-- Time Conflict Indicator -->
                                <message params="isVisible: $data.Section.MeetingTimeConflict, message: $data.Section.MeetingTimeConflictMessage, type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Full Message -->
                                <message params="isVisible: $data.Section.Available() != null &amp;&amp; $data.Section.Available() <= 0 &amp;&amp; $data.Section.WaitlistAvailable() === false, message: 'This section is full', type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Waitlist Message -->
                                <!-- ko if: ($data.Section.Available() != null && $data.Section.Available() <= 0 && $data.Section.WaitlistAvailable() === true) || ($data.Section.Available() != null && $data.Section.Available() > 0 && $data.Section.WaitlistAvailable() === true && $parents[1].canSkipWaitlist() === false && $data.Section.Waitlisted() > 0) -->
                                <message params="isVisible: true, message: 'This section has a waitlist', isSmall: true, type: 'warning'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible -->
<div class="esg-alert esg-alert--fluid esg-alert--warning esg-alert--small" data-bind="attr: { 'class' : modifier1, 'role': role }" role="alert">
    <span class="esg-alert__icon-wrapper">
        <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
            <svg class="esg-icon esg-icon--warning-dark" data-bind="css: modifier2">
                <use xlink:href="#icon-warning" data-bind="attr: { 'xlink:href': iconId }"></use>
            </svg>
        </span>
    </span>
    <div class="esg-alert__message">
        <!-- ko if: buttonLabel --><!-- /ko -->
        <!-- ko if: title --><!-- /ko -->
        <div data-bind="html: message">This section has a waitlist</div>
    </div>
</div>
<!-- /ko --></message>
                                <!-- /ko -->
                                <!-- Change button based on section status (open/register, closed/waitlist, etc) -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                <!-- Drop Button -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) != null -->
                                <input type="button" class="esg-button esg-button--primary esg-button--small schedule-adddrop-button" value="Drop" data-bind="attr: {'aria-label': 'Drop section' + $data.FullTitleDisplay() + ' '}, click: function(data) { $root.RegisterSectionHandler(data, 'Drop', $parent) }, clickBubble: false, visible: ($parents[1].showRegister() == true &amp;&amp; $data.showDropButton() == true), enable: $parents[1].canRegister() === true &amp;&amp; $data.CanDropSection() === true" aria-label="Drop sectionMUS*136-10: Class Guitar I ">
                                <!-- /ko -->
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                            <!-- Determining which footer to display is based on the user's edit permissions -->
                            <!-- ko if: $parents[1].canEdit() -->
                            <!-- Footer v1: there are sections to show and we are allowed to edit the page -->
                            <!-- ko if: ($data.AvailableSections().length > 0 || $parent.availableSectionsRetrieved() == false) && $parent.Code() != null  -->
                            <div data-bind=" attr: { 'class': $data.DisplayingAvailableSections() ? 'schedule-listitem-footerexpanded' : 'schedule-listitem-footercollapsed' }" class="schedule-listitem-footercollapsed">
                                <div class="view-other-sections-toggle clear-group">
                                    <div class="schedule-listitem-footerexpandicon">
                                    </div>
                                    <button data-bind="click: $root.ShowAvailableSections, clickBubble: false, attr: {'aria-label': 'View other sections' + $data.CourseTitleDisplay() + ' '}" class="no-styles show-other-sections" aria-label="View other sectionsMUS-136: Class Guitar I ">
                                        <span>View other sections</span>
                                    </button>
                                </div>
                            </div>
                            <!-- Other Sections List -->
                            <div class="availSections" data-bind="attr: {'data-course': $data.Id()}" style="display: none;" data-course="1541">
                                <div class="schedule-availablesectionslist-paging clear-group">
                                    <a href="#" class="pagination-image pagination-first" aria-label="First Page" alt="First Page" title="First Page" data-bind="click: function() { $data.AvailableSectionsFirstPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageFirst(), clickBubble: false, css: { 'pagination-first-active': $data.AvailableSectionsCanPageFirst(), 'pagination-first': !$data.AvailableSectionsCanPageFirst() }"></a>
                                    <a href="#" class="pagination-image pagination-previous" data-bind="click: function() { $data.AvailableSectionsPreviousPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPagePrevious(), clickBubble: false, css: {'pagination-previous-active': $data.AvailableSectionsCanPagePrevious(), 'pagination-previous': !$data.AvailableSectionsCanPagePrevious() }" aria-label="Previous Page" alt="Previous Page" title="Previous Page"></a>
                                    <input type="text" class="schedule-sections-paging-curpage" size="5" data-bind="attr: {'aria-label': 'Page {0} of {1} for {2}'.format($data.AvailableSectionsPageDisplay(), $data.availableSectionsPageCount(), ($data.HasSection() == true) ? $data.Section.FormattedDisplay() : $data.CourseName())}, enable: $data.availableSectionsPageCount() > 1, value: $data.AvailableSectionsPageDisplay(), event: { keypress: function(data, event) { var keyCode = (event.which ? event.which : event.keyCode); if (keyCode === 13) { $data.HandlePageInput(data, event); $root.RepaintAvailableSections($data); return false; } return true; }}" aria-label="Page 1 of 1 for MUS-136" disabled="">
                                    <span class="schedule-sections-paging-pagecount" data-bind="text: 'of ' + $data.availableSectionsPageCount()">of 1</span>
                                    <a href="#" class="pagination-image pagination-next" aria-label="Next Page" alt="Next Page" title="Next Page" data-bind="click: function() { $data.AvailableSectionsNextPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageNext(), clickBubble: false, css: { 'pagination-next-active': $data.AvailableSectionsCanPageNext(), 'pagination-next': !$data.AvailableSectionsCanPageLast() }"></a>
                                    <a href="#" class="pagination-image pagination-last" aria-label="Last Page" alt="Last Page" title="Last Page" data-bind="click: function() { $data.AvailableSectionsLastPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageLast(), clickBubble: false, css: { 'pagination-last-active': $data.AvailableSectionsCanPageLast(), 'pagination-last': !$data.AvailableSectionsCanPageLast() }"></a>
                                </div>
                                <div class="schedule-availablesectionslist" data-bind="foreach: $data.PagedAvailableSections()"></div>
                            </div>
                            <!-- /ko -->
                            <!-- End Footer v1 -->
                            <!-- Footer v2: no other sections and can edit the page -->
                            <!-- ko if: $parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && $data.HasSection() --><!-- /ko -->
                            <!-- ko if: ($parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && !$data.HasSection()) || $parent.Code() == null --><!-- /ko -->
                            <!-- End Footer v2 -->
                            <!-- /ko -->
                            <!-- end footers available to users with edit permissions -->
                            <!-- Footer v3: can't edit, so create an empty footer -->
                            <!-- ko if: !$parents[1].canEdit()--><!-- /ko -->
                            <!-- End Footer v3 -->
                            <!-- End of Details Area -->
                        </div>
                    </li>
                
                    <li class="esg-card schedule-listitem">
                        <!-- Header -->
                        <div class="esg-card-header schedule-listitem-header clear-group">
                            <!-- Title + Details Link -->
                            <a href="#" class="schedule-listitem-header-title" data-bind="text: $data.FullTitleDisplay(), click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, allowUpdating: $root.canEdit() &amp;&amp; ko.utils.unwrapObservable($data.AcademicHistory) == null &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), addTerms: $root.planningTerms(), updateCallback: $parents[1].UpdateCourse, creditsOverride: $data.Credits(), gradingTypeOverride: $data.GetGradingType(), canSkipWaitlist: $parents[1].canSkipWaitlist(), selectedTerm: $parent.Code()})}, clickBubble: false, attr: { 'aria-label': 'Course or section details for' + $data.FullTitleDisplay() + ' ', alt: 'Course or section details for' + $data.FullTitleDisplay(), title: 'Course or section details for' + $data.FullTitleDisplay() + ' '}" aria-label="Course or section details forPED*017-10: Strength &amp; Conditioning " alt="Course or section details forPED*017-10: Strength &amp; Conditioning" title="Course or section details forPED*017-10: Strength &amp; Conditioning ">PED*017-10: Strength &amp; Conditioning</a>
                            <!-- Remove Link -->
                            <button type="button" class="esg-button--float-right" data-bind="visible: $data.AcademicHistory.HasSection() === false &amp;&amp; $data.AcademicHistory.IsCompletedCredit() === false &amp;&amp; $root.canEdit() === true &amp;&amp; !($data.SectionWaitlistStatus() == 'Active' || $data.SectionWaitlistStatus() == 'PermissionToRegister') &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), click: function () {$parents[1].ShowRemoveCourseDialog($data, $parent, $data.IsNonTermSection());}, clickBubble: false, attr: {id:'removecourse'+$data.SubjectCode() + '-' + $data.Number() ,alt: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', title: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', 'aria-label': 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' '}" id="removecoursePED-017" alt="Remove entire coursePED-017: Intro Strength/Conditioning " title="Remove entire coursePED-017: Intro Strength/Conditioning " aria-label="Remove entire coursePED-017: Intro Strength/Conditioning " style="display: none;">
                                <span class="esg-icon__container" aria-hidden="True">
                                    <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                        <use xlink:href="#icon-close"></use>
                                    </svg>
                                </span>
                                <span class="offScreen" data-bind="attr:{'aria-label':'Remove entire course'}" aria-label="Remove entire course"></span>
                            </button>
                        </div>
                        <!-- Body (Footer is nested within) -->
                        <div class="schedule-listitem-newbody">
                            <!-- Advising Status -->
                            <div class="schedule-listitem-protected-wrapper">
                                <div class="schedule-listitem-course-warning" data-bind="visible: $data.IsProtected()" style="display: none;">
                                    <div class="schedule-conflictingsectionwaitlistmessage-icon">
                                    </div>
                                    <span>Protected</span>
                                </div>
                            </div>
                            <div class="schedule-listitem-approved-wrapper">
                                <div class="schedule-listitem-approved" data-bind="visible: $data.ApprovalStatus() === 'Approved'" style="display: none;">
                                    <div class="schedule-listitem-approvedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <div class="schedule-listitem-denied-wrapper">
                                <div class="schedule-listitem-denied" data-bind="visible: $data.ApprovalStatus() === 'Denied'" style="display: none;">
                                    <div class="schedule-listitem-deniedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <!-- Course Requisite Warnings -->
                            <!-- ko foreach: RequisiteWarnings --><!-- /ko -->
                            <!-- Course Co-Requisite Warnings (these go away after conversion) -->
                            <!-- ko foreach: CorequisiteCourseWarnings --><!-- /ko -->
                            <!-- Other Course Warnings -->
                            <!-- ko foreach: Warnings --><!-- /ko -->
                            <!-- Requisite Section warnings -->
                            <!-- ko foreach: CorequisiteSectionWarnings() --><!-- /ko -->
                            <!-- ko if: ko.utils.unwrapObservable($data.Section) != null -->
                            <div data-bind="css: courseListItemStyle" class="schedule-listitem-registeredsection">
                                <div data-bind="css: courseBannerWrapperStyle">
                                    <div data-bind="css: courseBannerStyle" class="schedule-listitem-registeredsectionbanner">
                                        <span data-bind="text: courseBannerText">Registered, but not started</span>
                                    </div>
                                </div>
                                <!-- ko if: !$data.Section.IsActive() --><!-- /ko -->
                                <!-- Start Section Details -->
                                <div class="section-details">
                                    <!-- ko template: {name: 'section-detail-template', data: $data.Section } -->
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()">Credits: 2</span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() --><!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()">Grading: Graded</span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data">Instructor: Jenkins</span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 --><!-- /ko -->
<!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay">1/22/2018</span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"> to </span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)">5/11/2018</span>
    </div>
<!-- /ko -->
                                    <!-- Seat and Waitlist Counts - only for planned, but not registered, sections -->
                                    <!-- ko if: $data.HasSection() && ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                    <!-- ko if: $data.HasMeetings() -->
                                    <div class="meeting-info-toggle-container" data-bind="click: ToggleMeetingInfo" aria-controls="planned-meetings-region">
                                        <span data-bind="attr: {'class': $data.MeetingInfoStyle()}" class="meeting-information-hidden"></span>
                                        <button class="no-styles" aria-label="show meeting information">Meeting Information</button>
                                    </div>
                                    <div data-bind="visible: ShowMeetingInfo" style="display: none;">
                                        <!-- ko template: {name: 'section-meeting-template', data: $data.Section } -->
    <!-- Meeting Details/Times -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length > 0" role="region" aria-live="polite" id="planned-meetings-region" aria-relevant="additions">
        <div data-bind="foreach: PlannedMeetings">
            <div class="meeting-information">
                <div aria-label="Meeting Time">
                    <span>Time: </span>
                    <span data-bind="text: ko.utils.unwrapObservable(DaysOfWeek)">MW</span>
                    <span data-bind="text: ko.utils.unwrapObservable(FormattedTime)">10:30 AM - 11:20 AM</span>
                </div>
                <div aria-label="Meeting Dates">
                    <span>Dates:</span>
                    <span data-bind="text: ko.utils.unwrapObservable(Dates)">1/22/2018 - 5/11/2018</span>
                </div>
                <div aria-label="Meeting Location">
                    <span>Location: </span>
                    <span data-bind="text: ko.utils.unwrapObservable($parent.LocationDisplay)"></span>
                    <span data-bind="text: ko.utils.unwrapObservable(MeetingLocation)">JFC TR </span>
                    <span data-bind="text: '(' + ko.utils.unwrapObservable(InstructionalMethod) + ')', visible: ko.utils.unwrapObservable(InstructionalMethod)">(Activity Course)</span>
                </div>
            </div>
        </div>
    </div>
    <!-- ko template: {name: 'section-no-meeting-template' } -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0"></div>
<!-- /ko -->
<!-- /ko -->
                                    </div>
                                    <!-- /ko -->
                                    <!-- Show TBD, no toggle if there are no meetings -->
                                    <!-- ko if: $data.HasMeetings() == false --><!-- /ko -->
                                </div>
                                <!-- End Section Details -->
                                <!-- Time Conflict Indicator -->
                                <message params="isVisible: $data.Section.MeetingTimeConflict, message: $data.Section.MeetingTimeConflictMessage, type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Full Message -->
                                <message params="isVisible: $data.Section.Available() != null &amp;&amp; $data.Section.Available() <= 0 &amp;&amp; $data.Section.WaitlistAvailable() === false, message: 'This section is full', type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Waitlist Message -->
                                <!-- ko if: ($data.Section.Available() != null && $data.Section.Available() <= 0 && $data.Section.WaitlistAvailable() === true) || ($data.Section.Available() != null && $data.Section.Available() > 0 && $data.Section.WaitlistAvailable() === true && $parents[1].canSkipWaitlist() === false && $data.Section.Waitlisted() > 0) -->
                                <message params="isVisible: true, message: 'This section has a waitlist', isSmall: true, type: 'warning'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible -->
<div class="esg-alert esg-alert--fluid esg-alert--warning esg-alert--small" data-bind="attr: { 'class' : modifier1, 'role': role }" role="alert">
    <span class="esg-alert__icon-wrapper">
        <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
            <svg class="esg-icon esg-icon--warning-dark" data-bind="css: modifier2">
                <use xlink:href="#icon-warning" data-bind="attr: { 'xlink:href': iconId }"></use>
            </svg>
        </span>
    </span>
    <div class="esg-alert__message">
        <!-- ko if: buttonLabel --><!-- /ko -->
        <!-- ko if: title --><!-- /ko -->
        <div data-bind="html: message">This section has a waitlist</div>
    </div>
</div>
<!-- /ko --></message>
                                <!-- /ko -->
                                <!-- Change button based on section status (open/register, closed/waitlist, etc) -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                <!-- Drop Button -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) != null -->
                                <input type="button" class="esg-button esg-button--primary esg-button--small schedule-adddrop-button" value="Drop" data-bind="attr: {'aria-label': 'Drop section' + $data.FullTitleDisplay() + ' '}, click: function(data) { $root.RegisterSectionHandler(data, 'Drop', $parent) }, clickBubble: false, visible: ($parents[1].showRegister() == true &amp;&amp; $data.showDropButton() == true), enable: $parents[1].canRegister() === true &amp;&amp; $data.CanDropSection() === true" aria-label="Drop sectionPED*017-10: Strength &amp; Conditioning ">
                                <!-- /ko -->
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                            <!-- Determining which footer to display is based on the user's edit permissions -->
                            <!-- ko if: $parents[1].canEdit() -->
                            <!-- Footer v1: there are sections to show and we are allowed to edit the page -->
                            <!-- ko if: ($data.AvailableSections().length > 0 || $parent.availableSectionsRetrieved() == false) && $parent.Code() != null  -->
                            <div data-bind=" attr: { 'class': $data.DisplayingAvailableSections() ? 'schedule-listitem-footerexpanded' : 'schedule-listitem-footercollapsed' }" class="schedule-listitem-footercollapsed">
                                <div class="view-other-sections-toggle clear-group">
                                    <div class="schedule-listitem-footerexpandicon">
                                    </div>
                                    <button data-bind="click: $root.ShowAvailableSections, clickBubble: false, attr: {'aria-label': 'View other sections' + $data.CourseTitleDisplay() + ' '}" class="no-styles show-other-sections" aria-label="View other sectionsPED-017: Intro Strength/Conditioning ">
                                        <span>View other sections</span>
                                    </button>
                                </div>
                            </div>
                            <!-- Other Sections List -->
                            <div class="availSections" data-bind="attr: {'data-course': $data.Id()}" style="display: none;" data-course="PED_017">
                                <div class="schedule-availablesectionslist-paging clear-group">
                                    <a href="#" class="pagination-image pagination-first" aria-label="First Page" alt="First Page" title="First Page" data-bind="click: function() { $data.AvailableSectionsFirstPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageFirst(), clickBubble: false, css: { 'pagination-first-active': $data.AvailableSectionsCanPageFirst(), 'pagination-first': !$data.AvailableSectionsCanPageFirst() }"></a>
                                    <a href="#" class="pagination-image pagination-previous" data-bind="click: function() { $data.AvailableSectionsPreviousPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPagePrevious(), clickBubble: false, css: {'pagination-previous-active': $data.AvailableSectionsCanPagePrevious(), 'pagination-previous': !$data.AvailableSectionsCanPagePrevious() }" aria-label="Previous Page" alt="Previous Page" title="Previous Page"></a>
                                    <input type="text" class="schedule-sections-paging-curpage" size="5" data-bind="attr: {'aria-label': 'Page {0} of {1} for {2}'.format($data.AvailableSectionsPageDisplay(), $data.availableSectionsPageCount(), ($data.HasSection() == true) ? $data.Section.FormattedDisplay() : $data.CourseName())}, enable: $data.availableSectionsPageCount() > 1, value: $data.AvailableSectionsPageDisplay(), event: { keypress: function(data, event) { var keyCode = (event.which ? event.which : event.keyCode); if (keyCode === 13) { $data.HandlePageInput(data, event); $root.RepaintAvailableSections($data); return false; } return true; }}" aria-label="Page 1 of 1 for PED-017" disabled="">
                                    <span class="schedule-sections-paging-pagecount" data-bind="text: 'of ' + $data.availableSectionsPageCount()">of 1</span>
                                    <a href="#" class="pagination-image pagination-next" aria-label="Next Page" alt="Next Page" title="Next Page" data-bind="click: function() { $data.AvailableSectionsNextPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageNext(), clickBubble: false, css: { 'pagination-next-active': $data.AvailableSectionsCanPageNext(), 'pagination-next': !$data.AvailableSectionsCanPageLast() }"></a>
                                    <a href="#" class="pagination-image pagination-last" aria-label="Last Page" alt="Last Page" title="Last Page" data-bind="click: function() { $data.AvailableSectionsLastPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageLast(), clickBubble: false, css: { 'pagination-last-active': $data.AvailableSectionsCanPageLast(), 'pagination-last': !$data.AvailableSectionsCanPageLast() }"></a>
                                </div>
                                <div class="schedule-availablesectionslist" data-bind="foreach: $data.PagedAvailableSections()"></div>
                            </div>
                            <!-- /ko -->
                            <!-- End Footer v1 -->
                            <!-- Footer v2: no other sections and can edit the page -->
                            <!-- ko if: $parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && $data.HasSection() --><!-- /ko -->
                            <!-- ko if: ($parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && !$data.HasSection()) || $parent.Code() == null --><!-- /ko -->
                            <!-- End Footer v2 -->
                            <!-- /ko -->
                            <!-- end footers available to users with edit permissions -->
                            <!-- Footer v3: can't edit, so create an empty footer -->
                            <!-- ko if: !$parents[1].canEdit()--><!-- /ko -->
                            <!-- End Footer v3 -->
                            <!-- End of Details Area -->
                        </div>
                    </li>
                
                    <li class="esg-card schedule-listitem">
                        <!-- Header -->
                        <div class="esg-card-header schedule-listitem-header clear-group">
                            <!-- Title + Details Link -->
                            <a href="#" class="schedule-listitem-header-title" data-bind="text: $data.FullTitleDisplay(), click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, allowUpdating: $root.canEdit() &amp;&amp; ko.utils.unwrapObservable($data.AcademicHistory) == null &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), addTerms: $root.planningTerms(), updateCallback: $parents[1].UpdateCourse, creditsOverride: $data.Credits(), gradingTypeOverride: $data.GetGradingType(), canSkipWaitlist: $parents[1].canSkipWaitlist(), selectedTerm: $parent.Code()})}, clickBubble: false, attr: { 'aria-label': 'Course or section details for' + $data.FullTitleDisplay() + ' ', alt: 'Course or section details for' + $data.FullTitleDisplay(), title: 'Course or section details for' + $data.FullTitleDisplay() + ' '}" aria-label="Course or section details forPHL*225-10: Ethical Theory " alt="Course or section details forPHL*225-10: Ethical Theory" title="Course or section details forPHL*225-10: Ethical Theory ">PHL*225-10: Ethical Theory</a>
                            <!-- Remove Link -->
                            <button type="button" class="esg-button--float-right" data-bind="visible: $data.AcademicHistory.HasSection() === false &amp;&amp; $data.AcademicHistory.IsCompletedCredit() === false &amp;&amp; $root.canEdit() === true &amp;&amp; !($data.SectionWaitlistStatus() == 'Active' || $data.SectionWaitlistStatus() == 'PermissionToRegister') &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), click: function () {$parents[1].ShowRemoveCourseDialog($data, $parent, $data.IsNonTermSection());}, clickBubble: false, attr: {id:'removecourse'+$data.SubjectCode() + '-' + $data.Number() ,alt: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', title: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', 'aria-label': 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' '}" id="removecoursePHL-225" alt="Remove entire coursePHL-225: Ethical Theory " title="Remove entire coursePHL-225: Ethical Theory " aria-label="Remove entire coursePHL-225: Ethical Theory " style="display: none;">
                                <span class="esg-icon__container" aria-hidden="True">
                                    <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                        <use xlink:href="#icon-close"></use>
                                    </svg>
                                </span>
                                <span class="offScreen" data-bind="attr:{'aria-label':'Remove entire course'}" aria-label="Remove entire course"></span>
                            </button>
                        </div>
                        <!-- Body (Footer is nested within) -->
                        <div class="schedule-listitem-newbody">
                            <!-- Advising Status -->
                            <div class="schedule-listitem-protected-wrapper">
                                <div class="schedule-listitem-course-warning" data-bind="visible: $data.IsProtected()" style="display: none;">
                                    <div class="schedule-conflictingsectionwaitlistmessage-icon">
                                    </div>
                                    <span>Protected</span>
                                </div>
                            </div>
                            <div class="schedule-listitem-approved-wrapper">
                                <div class="schedule-listitem-approved" data-bind="visible: $data.ApprovalStatus() === 'Approved'" style="display: none;">
                                    <div class="schedule-listitem-approvedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <div class="schedule-listitem-denied-wrapper">
                                <div class="schedule-listitem-denied" data-bind="visible: $data.ApprovalStatus() === 'Denied'" style="display: none;">
                                    <div class="schedule-listitem-deniedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <!-- Course Requisite Warnings -->
                            <!-- ko foreach: RequisiteWarnings --><!-- /ko -->
                            <!-- Course Co-Requisite Warnings (these go away after conversion) -->
                            <!-- ko foreach: CorequisiteCourseWarnings --><!-- /ko -->
                            <!-- Other Course Warnings -->
                            <!-- ko foreach: Warnings --><!-- /ko -->
                            <!-- Requisite Section warnings -->
                            <!-- ko foreach: CorequisiteSectionWarnings() --><!-- /ko -->
                            <!-- ko if: ko.utils.unwrapObservable($data.Section) != null -->
                            <div data-bind="css: courseListItemStyle" class="schedule-listitem-registeredsection">
                                <div data-bind="css: courseBannerWrapperStyle">
                                    <div data-bind="css: courseBannerStyle" class="schedule-listitem-registeredsectionbanner">
                                        <span data-bind="text: courseBannerText">Registered, but not started</span>
                                    </div>
                                </div>
                                <!-- ko if: !$data.Section.IsActive() --><!-- /ko -->
                                <!-- Start Section Details -->
                                <div class="section-details">
                                    <!-- ko template: {name: 'section-detail-template', data: $data.Section } -->
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() --><!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()">Grading: Graded</span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data">Instructor: McCabe</span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 --><!-- /ko -->
<!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay">1/22/2018</span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"> to </span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)">5/11/2018</span>
    </div>
<!-- /ko -->
                                    <!-- Seat and Waitlist Counts - only for planned, but not registered, sections -->
                                    <!-- ko if: $data.HasSection() && ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                    <!-- ko if: $data.HasMeetings() -->
                                    <div class="meeting-info-toggle-container" data-bind="click: ToggleMeetingInfo" aria-controls="planned-meetings-region">
                                        <span data-bind="attr: {'class': $data.MeetingInfoStyle()}" class="meeting-information-hidden"></span>
                                        <button class="no-styles" aria-label="show meeting information">Meeting Information</button>
                                    </div>
                                    <div data-bind="visible: ShowMeetingInfo" style="display: none;">
                                        <!-- ko template: {name: 'section-meeting-template', data: $data.Section } -->
    <!-- Meeting Details/Times -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length > 0" role="region" aria-live="polite" id="planned-meetings-region" aria-relevant="additions">
        <div data-bind="foreach: PlannedMeetings">
            <div class="meeting-information">
                <div aria-label="Meeting Time">
                    <span>Time: </span>
                    <span data-bind="text: ko.utils.unwrapObservable(DaysOfWeek)">TTh</span>
                    <span data-bind="text: ko.utils.unwrapObservable(FormattedTime)">10:00 AM - 11:15 AM</span>
                </div>
                <div aria-label="Meeting Dates">
                    <span>Dates:</span>
                    <span data-bind="text: ko.utils.unwrapObservable(Dates)">1/22/2018 - 5/11/2018</span>
                </div>
                <div aria-label="Meeting Location">
                    <span>Location: </span>
                    <span data-bind="text: ko.utils.unwrapObservable($parent.LocationDisplay)">On Campus</span>
                    <span data-bind="text: ko.utils.unwrapObservable(MeetingLocation)">Smith 111 </span>
                    <span data-bind="text: '(' + ko.utils.unwrapObservable(InstructionalMethod) + ')', visible: ko.utils.unwrapObservable(InstructionalMethod)">(Lecture)</span>
                </div>
            </div>
        </div>
    </div>
    <!-- ko template: {name: 'section-no-meeting-template' } -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0"></div>
<!-- /ko -->
<!-- /ko -->
                                    </div>
                                    <!-- /ko -->
                                    <!-- Show TBD, no toggle if there are no meetings -->
                                    <!-- ko if: $data.HasMeetings() == false --><!-- /ko -->
                                </div>
                                <!-- End Section Details -->
                                <!-- Time Conflict Indicator -->
                                <message params="isVisible: $data.Section.MeetingTimeConflict, message: $data.Section.MeetingTimeConflictMessage, type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Full Message -->
                                <message params="isVisible: $data.Section.Available() != null &amp;&amp; $data.Section.Available() <= 0 &amp;&amp; $data.Section.WaitlistAvailable() === false, message: 'This section is full', type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Waitlist Message -->
                                <!-- ko if: ($data.Section.Available() != null && $data.Section.Available() <= 0 && $data.Section.WaitlistAvailable() === true) || ($data.Section.Available() != null && $data.Section.Available() > 0 && $data.Section.WaitlistAvailable() === true && $parents[1].canSkipWaitlist() === false && $data.Section.Waitlisted() > 0) -->
                                <message params="isVisible: true, message: 'This section has a waitlist', isSmall: true, type: 'warning'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible -->
<div class="esg-alert esg-alert--fluid esg-alert--warning esg-alert--small" data-bind="attr: { 'class' : modifier1, 'role': role }" role="alert">
    <span class="esg-alert__icon-wrapper">
        <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
            <svg class="esg-icon esg-icon--warning-dark" data-bind="css: modifier2">
                <use xlink:href="#icon-warning" data-bind="attr: { 'xlink:href': iconId }"></use>
            </svg>
        </span>
    </span>
    <div class="esg-alert__message">
        <!-- ko if: buttonLabel --><!-- /ko -->
        <!-- ko if: title --><!-- /ko -->
        <div data-bind="html: message">This section has a waitlist</div>
    </div>
</div>
<!-- /ko --></message>
                                <!-- /ko -->
                                <!-- Change button based on section status (open/register, closed/waitlist, etc) -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                <!-- Drop Button -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) != null -->
                                <input type="button" class="esg-button esg-button--primary esg-button--small schedule-adddrop-button" value="Drop" data-bind="attr: {'aria-label': 'Drop section' + $data.FullTitleDisplay() + ' '}, click: function(data) { $root.RegisterSectionHandler(data, 'Drop', $parent) }, clickBubble: false, visible: ($parents[1].showRegister() == true &amp;&amp; $data.showDropButton() == true), enable: $parents[1].canRegister() === true &amp;&amp; $data.CanDropSection() === true" aria-label="Drop sectionPHL*225-10: Ethical Theory ">
                                <!-- /ko -->
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                            <!-- Determining which footer to display is based on the user's edit permissions -->
                            <!-- ko if: $parents[1].canEdit() -->
                            <!-- Footer v1: there are sections to show and we are allowed to edit the page -->
                            <!-- ko if: ($data.AvailableSections().length > 0 || $parent.availableSectionsRetrieved() == false) && $parent.Code() != null  -->
                            <div data-bind=" attr: { 'class': $data.DisplayingAvailableSections() ? 'schedule-listitem-footerexpanded' : 'schedule-listitem-footercollapsed' }" class="schedule-listitem-footercollapsed">
                                <div class="view-other-sections-toggle clear-group">
                                    <div class="schedule-listitem-footerexpandicon">
                                    </div>
                                    <button data-bind="click: $root.ShowAvailableSections, clickBubble: false, attr: {'aria-label': 'View other sections' + $data.CourseTitleDisplay() + ' '}" class="no-styles show-other-sections" aria-label="View other sectionsPHL-225: Ethical Theory ">
                                        <span>View other sections</span>
                                    </button>
                                </div>
                            </div>
                            <!-- Other Sections List -->
                            <div class="availSections" data-bind="attr: {'data-course': $data.Id()}" style="display: none;" data-course="PHL_225">
                                <div class="schedule-availablesectionslist-paging clear-group">
                                    <a href="#" class="pagination-image pagination-first" aria-label="First Page" alt="First Page" title="First Page" data-bind="click: function() { $data.AvailableSectionsFirstPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageFirst(), clickBubble: false, css: { 'pagination-first-active': $data.AvailableSectionsCanPageFirst(), 'pagination-first': !$data.AvailableSectionsCanPageFirst() }"></a>
                                    <a href="#" class="pagination-image pagination-previous" data-bind="click: function() { $data.AvailableSectionsPreviousPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPagePrevious(), clickBubble: false, css: {'pagination-previous-active': $data.AvailableSectionsCanPagePrevious(), 'pagination-previous': !$data.AvailableSectionsCanPagePrevious() }" aria-label="Previous Page" alt="Previous Page" title="Previous Page"></a>
                                    <input type="text" class="schedule-sections-paging-curpage" size="5" data-bind="attr: {'aria-label': 'Page {0} of {1} for {2}'.format($data.AvailableSectionsPageDisplay(), $data.availableSectionsPageCount(), ($data.HasSection() == true) ? $data.Section.FormattedDisplay() : $data.CourseName())}, enable: $data.availableSectionsPageCount() > 1, value: $data.AvailableSectionsPageDisplay(), event: { keypress: function(data, event) { var keyCode = (event.which ? event.which : event.keyCode); if (keyCode === 13) { $data.HandlePageInput(data, event); $root.RepaintAvailableSections($data); return false; } return true; }}" aria-label="Page 1 of 1 for PHL-225" disabled="">
                                    <span class="schedule-sections-paging-pagecount" data-bind="text: 'of ' + $data.availableSectionsPageCount()">of 1</span>
                                    <a href="#" class="pagination-image pagination-next" aria-label="Next Page" alt="Next Page" title="Next Page" data-bind="click: function() { $data.AvailableSectionsNextPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageNext(), clickBubble: false, css: { 'pagination-next-active': $data.AvailableSectionsCanPageNext(), 'pagination-next': !$data.AvailableSectionsCanPageLast() }"></a>
                                    <a href="#" class="pagination-image pagination-last" aria-label="Last Page" alt="Last Page" title="Last Page" data-bind="click: function() { $data.AvailableSectionsLastPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageLast(), clickBubble: false, css: { 'pagination-last-active': $data.AvailableSectionsCanPageLast(), 'pagination-last': !$data.AvailableSectionsCanPageLast() }"></a>
                                </div>
                                <div class="schedule-availablesectionslist" data-bind="foreach: $data.PagedAvailableSections()"></div>
                            </div>
                            <!-- /ko -->
                            <!-- End Footer v1 -->
                            <!-- Footer v2: no other sections and can edit the page -->
                            <!-- ko if: $parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && $data.HasSection() --><!-- /ko -->
                            <!-- ko if: ($parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && !$data.HasSection()) || $parent.Code() == null --><!-- /ko -->
                            <!-- End Footer v2 -->
                            <!-- /ko -->
                            <!-- end footers available to users with edit permissions -->
                            <!-- Footer v3: can't edit, so create an empty footer -->
                            <!-- ko if: !$parents[1].canEdit()--><!-- /ko -->
                            <!-- End Footer v3 -->
                            <!-- End of Details Area -->
                        </div>
                    </li>
                
                    <li class="esg-card schedule-listitem">
                        <!-- Header -->
                        <div class="esg-card-header schedule-listitem-header clear-group">
                            <!-- Title + Details Link -->
                            <a href="#" class="schedule-listitem-header-title" data-bind="text: $data.FullTitleDisplay(), click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, allowUpdating: $root.canEdit() &amp;&amp; ko.utils.unwrapObservable($data.AcademicHistory) == null &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), addTerms: $root.planningTerms(), updateCallback: $parents[1].UpdateCourse, creditsOverride: $data.Credits(), gradingTypeOverride: $data.GetGradingType(), canSkipWaitlist: $parents[1].canSkipWaitlist(), selectedTerm: $parent.Code()})}, clickBubble: false, attr: { 'aria-label': 'Course or section details for' + $data.FullTitleDisplay() + ' ', alt: 'Course or section details for' + $data.FullTitleDisplay(), title: 'Course or section details for' + $data.FullTitleDisplay() + ' '}" aria-label="Course or section details forPSY*SCE-16: Senior Capstone Experience " alt="Course or section details forPSY*SCE-16: Senior Capstone Experience" title="Course or section details forPSY*SCE-16: Senior Capstone Experience ">PSY*SCE-16: Senior Capstone Experience</a>
                            <!-- Remove Link -->
                            <button type="button" class="esg-button--float-right" data-bind="visible: $data.AcademicHistory.HasSection() === false &amp;&amp; $data.AcademicHistory.IsCompletedCredit() === false &amp;&amp; $root.canEdit() === true &amp;&amp; !($data.SectionWaitlistStatus() == 'Active' || $data.SectionWaitlistStatus() == 'PermissionToRegister') &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), click: function () {$parents[1].ShowRemoveCourseDialog($data, $parent, $data.IsNonTermSection());}, clickBubble: false, attr: {id:'removecourse'+$data.SubjectCode() + '-' + $data.Number() ,alt: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', title: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', 'aria-label': 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' '}" id="removecoursePSY-SCE" alt="Remove entire coursePSY-SCE: Senior Capstone Experience " title="Remove entire coursePSY-SCE: Senior Capstone Experience " aria-label="Remove entire coursePSY-SCE: Senior Capstone Experience " style="display: none;">
                                <span class="esg-icon__container" aria-hidden="True">
                                    <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                        <use xlink:href="#icon-close"></use>
                                    </svg>
                                </span>
                                <span class="offScreen" data-bind="attr:{'aria-label':'Remove entire course'}" aria-label="Remove entire course"></span>
                            </button>
                        </div>
                        <!-- Body (Footer is nested within) -->
                        <div class="schedule-listitem-newbody">
                            <!-- Advising Status -->
                            <div class="schedule-listitem-protected-wrapper">
                                <div class="schedule-listitem-course-warning" data-bind="visible: $data.IsProtected()" style="display: none;">
                                    <div class="schedule-conflictingsectionwaitlistmessage-icon">
                                    </div>
                                    <span>Protected</span>
                                </div>
                            </div>
                            <div class="schedule-listitem-approved-wrapper">
                                <div class="schedule-listitem-approved" data-bind="visible: $data.ApprovalStatus() === 'Approved'" style="display: none;">
                                    <div class="schedule-listitem-approvedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <div class="schedule-listitem-denied-wrapper">
                                <div class="schedule-listitem-denied" data-bind="visible: $data.ApprovalStatus() === 'Denied'" style="display: none;">
                                    <div class="schedule-listitem-deniedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <!-- Course Requisite Warnings -->
                            <!-- ko foreach: RequisiteWarnings --><!-- /ko -->
                            <!-- Course Co-Requisite Warnings (these go away after conversion) -->
                            <!-- ko foreach: CorequisiteCourseWarnings --><!-- /ko -->
                            <!-- Other Course Warnings -->
                            <!-- ko foreach: Warnings --><!-- /ko -->
                            <!-- Requisite Section warnings -->
                            <!-- ko foreach: CorequisiteSectionWarnings() --><!-- /ko -->
                            <!-- ko if: ko.utils.unwrapObservable($data.Section) != null -->
                            <div data-bind="css: courseListItemStyle" class="schedule-listitem-registeredsection">
                                <div data-bind="css: courseBannerWrapperStyle">
                                    <div data-bind="css: courseBannerStyle" class="schedule-listitem-registeredsectionbanner">
                                        <span data-bind="text: courseBannerText">Registered, but not started</span>
                                    </div>
                                </div>
                                <!-- ko if: !$data.Section.IsActive() --><!-- /ko -->
                                <!-- Start Section Details -->
                                <div class="section-details">
                                    <!-- ko template: {name: 'section-detail-template', data: $data.Section } -->
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() --><!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()">Grading: Graded</span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data">Instructor: Gibson</span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 --><!-- /ko -->
<!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay">1/22/2018</span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"> to </span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)">5/11/2018</span>
    </div>
<!-- /ko -->
                                    <!-- Seat and Waitlist Counts - only for planned, but not registered, sections -->
                                    <!-- ko if: $data.HasSection() && ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                    <!-- ko if: $data.HasMeetings() --><!-- /ko -->
                                    <!-- Show TBD, no toggle if there are no meetings -->
                                    <!-- ko if: $data.HasMeetings() == false -->
                                    <!-- ko template: {name: 'section-no-meeting-template', data: $data.Section } -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0">
        <div aria-label="Meeting Time">
            <span>Time: </span><span data-bind="text: 'TBD'">TBD</span>
        </div>
        <div aria-label="Meeting Location">
            <span>Location: </span><span data-bind="text: ko.utils.unwrapObservable($data.LocationDisplay)">On Campus</span><span>TBD</span>
        </div>
    </div>
<!-- /ko -->
                                    <!-- /ko -->
                                </div>
                                <!-- End Section Details -->
                                <!-- Time Conflict Indicator -->
                                <message params="isVisible: $data.Section.MeetingTimeConflict, message: $data.Section.MeetingTimeConflictMessage, type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Full Message -->
                                <message params="isVisible: $data.Section.Available() != null &amp;&amp; $data.Section.Available() <= 0 &amp;&amp; $data.Section.WaitlistAvailable() === false, message: 'This section is full', type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Waitlist Message -->
                                <!-- ko if: ($data.Section.Available() != null && $data.Section.Available() <= 0 && $data.Section.WaitlistAvailable() === true) || ($data.Section.Available() != null && $data.Section.Available() > 0 && $data.Section.WaitlistAvailable() === true && $parents[1].canSkipWaitlist() === false && $data.Section.Waitlisted() > 0) --><!-- /ko -->
                                <!-- Change button based on section status (open/register, closed/waitlist, etc) -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                <!-- Drop Button -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) != null -->
                                <input type="button" class="esg-button esg-button--primary esg-button--small schedule-adddrop-button" value="Drop" data-bind="attr: {'aria-label': 'Drop section' + $data.FullTitleDisplay() + ' '}, click: function(data) { $root.RegisterSectionHandler(data, 'Drop', $parent) }, clickBubble: false, visible: ($parents[1].showRegister() == true &amp;&amp; $data.showDropButton() == true), enable: $parents[1].canRegister() === true &amp;&amp; $data.CanDropSection() === true" aria-label="Drop sectionPSY*SCE-16: Senior Capstone Experience ">
                                <!-- /ko -->
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                            <!-- Determining which footer to display is based on the user's edit permissions -->
                            <!-- ko if: $parents[1].canEdit() -->
                            <!-- Footer v1: there are sections to show and we are allowed to edit the page -->
                            <!-- ko if: ($data.AvailableSections().length > 0 || $parent.availableSectionsRetrieved() == false) && $parent.Code() != null  -->
                            <div data-bind=" attr: { 'class': $data.DisplayingAvailableSections() ? 'schedule-listitem-footerexpanded' : 'schedule-listitem-footercollapsed' }" class="schedule-listitem-footercollapsed">
                                <div class="view-other-sections-toggle clear-group">
                                    <div class="schedule-listitem-footerexpandicon">
                                    </div>
                                    <button data-bind="click: $root.ShowAvailableSections, clickBubble: false, attr: {'aria-label': 'View other sections' + $data.CourseTitleDisplay() + ' '}" class="no-styles show-other-sections" aria-label="View other sectionsPSY-SCE: Senior Capstone Experience ">
                                        <span>View other sections</span>
                                    </button>
                                </div>
                            </div>
                            <!-- Other Sections List -->
                            <div class="availSections" data-bind="attr: {'data-course': $data.Id()}" style="display: none;" data-course="619">
                                <div class="schedule-availablesectionslist-paging clear-group">
                                    <a href="#" class="pagination-image pagination-first" aria-label="First Page" alt="First Page" title="First Page" data-bind="click: function() { $data.AvailableSectionsFirstPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageFirst(), clickBubble: false, css: { 'pagination-first-active': $data.AvailableSectionsCanPageFirst(), 'pagination-first': !$data.AvailableSectionsCanPageFirst() }"></a>
                                    <a href="#" class="pagination-image pagination-previous" data-bind="click: function() { $data.AvailableSectionsPreviousPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPagePrevious(), clickBubble: false, css: {'pagination-previous-active': $data.AvailableSectionsCanPagePrevious(), 'pagination-previous': !$data.AvailableSectionsCanPagePrevious() }" aria-label="Previous Page" alt="Previous Page" title="Previous Page"></a>
                                    <input type="text" class="schedule-sections-paging-curpage" size="5" data-bind="attr: {'aria-label': 'Page {0} of {1} for {2}'.format($data.AvailableSectionsPageDisplay(), $data.availableSectionsPageCount(), ($data.HasSection() == true) ? $data.Section.FormattedDisplay() : $data.CourseName())}, enable: $data.availableSectionsPageCount() > 1, value: $data.AvailableSectionsPageDisplay(), event: { keypress: function(data, event) { var keyCode = (event.which ? event.which : event.keyCode); if (keyCode === 13) { $data.HandlePageInput(data, event); $root.RepaintAvailableSections($data); return false; } return true; }}" aria-label="Page 1 of 1 for PSY-SCE" disabled="">
                                    <span class="schedule-sections-paging-pagecount" data-bind="text: 'of ' + $data.availableSectionsPageCount()">of 1</span>
                                    <a href="#" class="pagination-image pagination-next" aria-label="Next Page" alt="Next Page" title="Next Page" data-bind="click: function() { $data.AvailableSectionsNextPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageNext(), clickBubble: false, css: { 'pagination-next-active': $data.AvailableSectionsCanPageNext(), 'pagination-next': !$data.AvailableSectionsCanPageLast() }"></a>
                                    <a href="#" class="pagination-image pagination-last" aria-label="Last Page" alt="Last Page" title="Last Page" data-bind="click: function() { $data.AvailableSectionsLastPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageLast(), clickBubble: false, css: { 'pagination-last-active': $data.AvailableSectionsCanPageLast(), 'pagination-last': !$data.AvailableSectionsCanPageLast() }"></a>
                                </div>
                                <div class="schedule-availablesectionslist" data-bind="foreach: $data.PagedAvailableSections()"></div>
                            </div>
                            <!-- /ko -->
                            <!-- End Footer v1 -->
                            <!-- Footer v2: no other sections and can edit the page -->
                            <!-- ko if: $parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && $data.HasSection() --><!-- /ko -->
                            <!-- ko if: ($parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && !$data.HasSection()) || $parent.Code() == null --><!-- /ko -->
                            <!-- End Footer v2 -->
                            <!-- /ko -->
                            <!-- end footers available to users with edit permissions -->
                            <!-- Footer v3: can't edit, so create an empty footer -->
                            <!-- ko if: !$parents[1].canEdit()--><!-- /ko -->
                            <!-- End Footer v3 -->
                            <!-- End of Details Area -->
                        </div>
                    </li>
                
                    <li class="esg-card schedule-listitem">
                        <!-- Header -->
                        <div class="esg-card-header schedule-listitem-header clear-group">
                            <!-- Title + Details Link -->
                            <a href="#" class="schedule-listitem-header-title" data-bind="text: $data.FullTitleDisplay(), click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, allowUpdating: $root.canEdit() &amp;&amp; ko.utils.unwrapObservable($data.AcademicHistory) == null &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), addTerms: $root.planningTerms(), updateCallback: $parents[1].UpdateCourse, creditsOverride: $data.Credits(), gradingTypeOverride: $data.GetGradingType(), canSkipWaitlist: $parents[1].canSkipWaitlist(), selectedTerm: $parent.Code()})}, clickBubble: false, attr: { 'aria-label': 'Course or section details for' + $data.FullTitleDisplay() + ' ', alt: 'Course or section details for' + $data.FullTitleDisplay(), title: 'Course or section details for' + $data.FullTitleDisplay() + ' '}" aria-label="Course or section details forSOC*394-11: SpTp: Sociology of Disablties " alt="Course or section details forSOC*394-11: SpTp: Sociology of Disablties" title="Course or section details forSOC*394-11: SpTp: Sociology of Disablties ">SOC*394-11: SpTp: Sociology of Disablties</a>
                            <!-- Remove Link -->
                            <button type="button" class="esg-button--float-right" data-bind="visible: $data.AcademicHistory.HasSection() === false &amp;&amp; $data.AcademicHistory.IsCompletedCredit() === false &amp;&amp; $root.canEdit() === true &amp;&amp; !($data.SectionWaitlistStatus() == 'Active' || $data.SectionWaitlistStatus() == 'PermissionToRegister') &amp;&amp; ($data.IsProtected() === false || $root.isProxyUser() === true), click: function () {$parents[1].ShowRemoveCourseDialog($data, $parent, $data.IsNonTermSection());}, clickBubble: false, attr: {id:'removecourse'+$data.SubjectCode() + '-' + $data.Number() ,alt: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', title: 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' ', 'aria-label': 'Remove entire course' + $data.SubjectCode() + '-' + $data.Number() + ': ' + $data.Title() + ' '}" id="removecourseSOC-394" alt="Remove entire courseSOC-394: Special Topics " title="Remove entire courseSOC-394: Special Topics " aria-label="Remove entire courseSOC-394: Special Topics " style="display: none;">
                                <span class="esg-icon__container" aria-hidden="True">
                                    <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                        <use xlink:href="#icon-close"></use>
                                    </svg>
                                </span>
                                <span class="offScreen" data-bind="attr:{'aria-label':'Remove entire course'}" aria-label="Remove entire course"></span>
                            </button>
                        </div>
                        <!-- Body (Footer is nested within) -->
                        <div class="schedule-listitem-newbody">
                            <!-- Advising Status -->
                            <div class="schedule-listitem-protected-wrapper">
                                <div class="schedule-listitem-course-warning" data-bind="visible: $data.IsProtected()" style="display: none;">
                                    <div class="schedule-conflictingsectionwaitlistmessage-icon">
                                    </div>
                                    <span>Protected</span>
                                </div>
                            </div>
                            <div class="schedule-listitem-approved-wrapper">
                                <div class="schedule-listitem-approved" data-bind="visible: $data.ApprovalStatus() === 'Approved'" style="display: none;">
                                    <div class="schedule-listitem-approvedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <div class="schedule-listitem-denied-wrapper">
                                <div class="schedule-listitem-denied" data-bind="visible: $data.ApprovalStatus() === 'Denied'" style="display: none;">
                                    <div class="schedule-listitem-deniedicon">
                                    </div>
                                    <span data-bind="text: $data.ApprovalStatus()"></span>
                                </div>
                            </div>
                            <!-- Course Requisite Warnings -->
                            <!-- ko foreach: RequisiteWarnings --><!-- /ko -->
                            <!-- Course Co-Requisite Warnings (these go away after conversion) -->
                            <!-- ko foreach: CorequisiteCourseWarnings --><!-- /ko -->
                            <!-- Other Course Warnings -->
                            <!-- ko foreach: Warnings --><!-- /ko -->
                            <!-- Requisite Section warnings -->
                            <!-- ko foreach: CorequisiteSectionWarnings() --><!-- /ko -->
                            <!-- ko if: ko.utils.unwrapObservable($data.Section) != null -->
                            <div data-bind="css: courseListItemStyle" class="schedule-listitem-registeredsection">
                                <div data-bind="css: courseBannerWrapperStyle">
                                    <div data-bind="css: courseBannerStyle" class="schedule-listitem-registeredsectionbanner">
                                        <span data-bind="text: courseBannerText">Registered, but not started</span>
                                    </div>
                                </div>
                                <!-- ko if: !$data.Section.IsActive() --><!-- /ko -->
                                <!-- Start Section Details -->
                                <div class="section-details">
                                    <!-- ko template: {name: 'section-detail-template', data: $data.Section } -->
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() --><!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()">Grading: Graded</span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data">Instructor: Yost</span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 --><!-- /ko -->
<!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay">1/22/2018</span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"> to </span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)">5/11/2018</span>
    </div>
<!-- /ko -->
                                    <!-- Seat and Waitlist Counts - only for planned, but not registered, sections -->
                                    <!-- ko if: $data.HasSection() && ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                    <!-- ko if: $data.HasMeetings() -->
                                    <div class="meeting-info-toggle-container" data-bind="click: ToggleMeetingInfo" aria-controls="planned-meetings-region">
                                        <span data-bind="attr: {'class': $data.MeetingInfoStyle()}" class="meeting-information-hidden"></span>
                                        <button class="no-styles" aria-label="show meeting information">Meeting Information</button>
                                    </div>
                                    <div data-bind="visible: ShowMeetingInfo" style="display: none;">
                                        <!-- ko template: {name: 'section-meeting-template', data: $data.Section } -->
    <!-- Meeting Details/Times -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length > 0" role="region" aria-live="polite" id="planned-meetings-region" aria-relevant="additions">
        <div data-bind="foreach: PlannedMeetings">
            <div class="meeting-information">
                <div aria-label="Meeting Time">
                    <span>Time: </span>
                    <span data-bind="text: ko.utils.unwrapObservable(DaysOfWeek)">MW</span>
                    <span data-bind="text: ko.utils.unwrapObservable(FormattedTime)">2:30 PM - 3:45 PM</span>
                </div>
                <div aria-label="Meeting Dates">
                    <span>Dates:</span>
                    <span data-bind="text: ko.utils.unwrapObservable(Dates)">1/22/2018 - 5/11/2018</span>
                </div>
                <div aria-label="Meeting Location">
                    <span>Location: </span>
                    <span data-bind="text: ko.utils.unwrapObservable($parent.LocationDisplay)">On Campus</span>
                    <span data-bind="text: ko.utils.unwrapObservable(MeetingLocation)">Smith 336 </span>
                    <span data-bind="text: '(' + ko.utils.unwrapObservable(InstructionalMethod) + ')', visible: ko.utils.unwrapObservable(InstructionalMethod)">(Lecture)</span>
                </div>
            </div>
        </div>
    </div>
    <!-- ko template: {name: 'section-no-meeting-template' } -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0"></div>
<!-- /ko -->
<!-- /ko -->
                                    </div>
                                    <!-- /ko -->
                                    <!-- Show TBD, no toggle if there are no meetings -->
                                    <!-- ko if: $data.HasMeetings() == false --><!-- /ko -->
                                </div>
                                <!-- End Section Details -->
                                <!-- Time Conflict Indicator -->
                                <message params="isVisible: $data.Section.MeetingTimeConflict, message: $data.Section.MeetingTimeConflictMessage, type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Full Message -->
                                <message params="isVisible: $data.Section.Available() != null &amp;&amp; $data.Section.Available() <= 0 &amp;&amp; $data.Section.WaitlistAvailable() === false, message: 'This section is full', type: 'error', isSmall: true"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                                <!-- Section Waitlist Message -->
                                <!-- ko if: ($data.Section.Available() != null && $data.Section.Available() <= 0 && $data.Section.WaitlistAvailable() === true) || ($data.Section.Available() != null && $data.Section.Available() > 0 && $data.Section.WaitlistAvailable() === true && $parents[1].canSkipWaitlist() === false && $data.Section.Waitlisted() > 0) -->
                                <message params="isVisible: true, message: 'This section has a waitlist', isSmall: true, type: 'warning'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible -->
<div class="esg-alert esg-alert--fluid esg-alert--warning esg-alert--small" data-bind="attr: { 'class' : modifier1, 'role': role }" role="alert">
    <span class="esg-alert__icon-wrapper">
        <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
            <svg class="esg-icon esg-icon--warning-dark" data-bind="css: modifier2">
                <use xlink:href="#icon-warning" data-bind="attr: { 'xlink:href': iconId }"></use>
            </svg>
        </span>
    </span>
    <div class="esg-alert__message">
        <!-- ko if: buttonLabel --><!-- /ko -->
        <!-- ko if: title --><!-- /ko -->
        <div data-bind="html: message">This section has a waitlist</div>
    </div>
</div>
<!-- /ko --></message>
                                <!-- /ko -->
                                <!-- Change button based on section status (open/register, closed/waitlist, etc) -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) == null --><!-- /ko -->
                                <!-- Drop Button -->
                                <!-- ko if: ko.utils.unwrapObservable($data.AcademicHistory.Section) != null -->
                                <input type="button" class="esg-button esg-button--primary esg-button--small schedule-adddrop-button" value="Drop" data-bind="attr: {'aria-label': 'Drop section' + $data.FullTitleDisplay() + ' '}, click: function(data) { $root.RegisterSectionHandler(data, 'Drop', $parent) }, clickBubble: false, visible: ($parents[1].showRegister() == true &amp;&amp; $data.showDropButton() == true), enable: $parents[1].canRegister() === true &amp;&amp; $data.CanDropSection() === true" aria-label="Drop sectionSOC*394-11: SpTp: Sociology of Disablties ">
                                <!-- /ko -->
                                <!-- /ko -->
                            </div>
                            <!-- /ko -->
                            <!-- Determining which footer to display is based on the user's edit permissions -->
                            <!-- ko if: $parents[1].canEdit() -->
                            <!-- Footer v1: there are sections to show and we are allowed to edit the page -->
                            <!-- ko if: ($data.AvailableSections().length > 0 || $parent.availableSectionsRetrieved() == false) && $parent.Code() != null  -->
                            <div data-bind=" attr: { 'class': $data.DisplayingAvailableSections() ? 'schedule-listitem-footerexpanded' : 'schedule-listitem-footercollapsed' }" class="schedule-listitem-footercollapsed">
                                <div class="view-other-sections-toggle clear-group">
                                    <div class="schedule-listitem-footerexpandicon">
                                    </div>
                                    <button data-bind="click: $root.ShowAvailableSections, clickBubble: false, attr: {'aria-label': 'View other sections' + $data.CourseTitleDisplay() + ' '}" class="no-styles show-other-sections" aria-label="View other sectionsSOC-394: Special Topics ">
                                        <span>View other sections</span>
                                    </button>
                                </div>
                            </div>
                            <!-- Other Sections List -->
                            <div class="availSections" data-bind="attr: {'data-course': $data.Id()}" style="display: none;" data-course="271">
                                <div class="schedule-availablesectionslist-paging clear-group">
                                    <a href="#" class="pagination-image pagination-first" aria-label="First Page" alt="First Page" title="First Page" data-bind="click: function() { $data.AvailableSectionsFirstPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageFirst(), clickBubble: false, css: { 'pagination-first-active': $data.AvailableSectionsCanPageFirst(), 'pagination-first': !$data.AvailableSectionsCanPageFirst() }"></a>
                                    <a href="#" class="pagination-image pagination-previous" data-bind="click: function() { $data.AvailableSectionsPreviousPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPagePrevious(), clickBubble: false, css: {'pagination-previous-active': $data.AvailableSectionsCanPagePrevious(), 'pagination-previous': !$data.AvailableSectionsCanPagePrevious() }" aria-label="Previous Page" alt="Previous Page" title="Previous Page"></a>
                                    <input type="text" class="schedule-sections-paging-curpage" size="5" data-bind="attr: {'aria-label': 'Page {0} of {1} for {2}'.format($data.AvailableSectionsPageDisplay(), $data.availableSectionsPageCount(), ($data.HasSection() == true) ? $data.Section.FormattedDisplay() : $data.CourseName())}, enable: $data.availableSectionsPageCount() > 1, value: $data.AvailableSectionsPageDisplay(), event: { keypress: function(data, event) { var keyCode = (event.which ? event.which : event.keyCode); if (keyCode === 13) { $data.HandlePageInput(data, event); $root.RepaintAvailableSections($data); return false; } return true; }}" aria-label="Page 1 of 1 for SOC-394" disabled="">
                                    <span class="schedule-sections-paging-pagecount" data-bind="text: 'of ' + $data.availableSectionsPageCount()">of 1</span>
                                    <a href="#" class="pagination-image pagination-next" aria-label="Next Page" alt="Next Page" title="Next Page" data-bind="click: function() { $data.AvailableSectionsNextPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageNext(), clickBubble: false, css: { 'pagination-next-active': $data.AvailableSectionsCanPageNext(), 'pagination-next': !$data.AvailableSectionsCanPageLast() }"></a>
                                    <a href="#" class="pagination-image pagination-last" aria-label="Last Page" alt="Last Page" title="Last Page" data-bind="click: function() { $data.AvailableSectionsLastPage(); $root.RepaintAvailableSections($data); }, enable: $data.AvailableSectionsCanPageLast(), clickBubble: false, css: { 'pagination-last-active': $data.AvailableSectionsCanPageLast(), 'pagination-last': !$data.AvailableSectionsCanPageLast() }"></a>
                                </div>
                                <div class="schedule-availablesectionslist" data-bind="foreach: $data.PagedAvailableSections()"></div>
                            </div>
                            <!-- /ko -->
                            <!-- End Footer v1 -->
                            <!-- Footer v2: no other sections and can edit the page -->
                            <!-- ko if: $parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && $data.HasSection() --><!-- /ko -->
                            <!-- ko if: ($parent.availableSectionsRetrieved() == true && $data.AvailableSections().length == 0 && !$data.HasSection()) || $parent.Code() == null --><!-- /ko -->
                            <!-- End Footer v2 -->
                            <!-- /ko -->
                            <!-- end footers available to users with edit permissions -->
                            <!-- Footer v3: can't edit, so create an empty footer -->
                            <!-- ko if: !$parents[1].canEdit()--><!-- /ko -->
                            <!-- End Footer v3 -->
                            <!-- End of Details Area -->
                        </div>
                    </li>
                </ul>
            </div>
        </section>
    </div>
    <!-- Right Side: Calendar, Unscheduled Sections -->
    <div class="column-seven" data-bind="attr:{ id: 'plan-calendar' + $data.Code().replace(/[^a-z0-9\s]/gi, '') }" id="plan-calendar18SP">
        <div class="schedule-calendar fc ui-widget" aria-hidden="true" role="presentation" tabindex="-1" data-bind="planningCalendar: $root.currentTermEvents, planningCalendarClickHandler: $root.RemoveSectionClickHandler, planningCalendarSectionDetailsClickHandler: $root.SectionDetailsClickHandler, planningCalendarScheduleHeight: 600"><div class="fc-content" style="position: relative; min-height: 1px;" role="presentation" aria-hidden="true"><div class="fc-view fc-view-agendaWeek fc-agenda" style="position: relative;" unselectable="on"><table style="width:100%" class="fc-agenda-days fc-border-separate" cellspacing="0"><thead><tr class="fc-first fc-last"><th class="fc-agenda-axis ui-widget-header fc-first" style="width: 46px;">&nbsp;</th><th class="fc-sun fc-col0 ui-widget-header" style="width: 140px;">Sun</th><th class="fc-mon fc-col1 ui-widget-header" style="width: 140px;">Mon</th><th class="fc-tue fc-col2 ui-widget-header" style="width: 140px;">Tue</th><th class="fc-wed fc-col3 ui-widget-header" style="width: 140px;">Wed</th><th class="fc-thu fc-col4 ui-widget-header" style="width: 140px;">Thu</th><th class="fc-fri fc-col5 ui-widget-header" style="width: 140px;">Fri</th><th class="fc-sat fc-col6 ui-widget-header">Sat</th><th class="fc-agenda-gutter ui-widget-header fc-last" style="width: 15px;">&nbsp;</th></tr></thead><tbody><tr class="fc-first fc-last"><th class="fc-agenda-axis ui-widget-header fc-first">&nbsp;</th><td class="fc-sun fc-col0 ui-widget-content"><div style="height: 536px;"><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-mon fc-col1 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-tue fc-col2 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-wed fc-col3 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-thu fc-col4 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-fri fc-col5 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-sat fc-col6 ui-widget-content"><div><div class="fc-day-content"><div style="position:relative">&nbsp;</div></div></div></td><td class="fc-agenda-gutter ui-widget-content fc-last" style="width: 15px;">&nbsp;</td></tr></tbody></table><div style="position: absolute; z-index: 2; left: 0px; width: 100%; top: 43px;"><div style="position: absolute; width: 100%; overflow-x: hidden; overflow-y: auto; height: 556px;"><div style="position:relative;width:100%;overflow:hidden"><div style="position:absolute;z-index:8;top:0;left:0"><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 623px; left: 188px; width: 136px; height: 52px;" data-previewid="33899" title="SOC-394-11"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">SOC-394-11</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 451px; left: 188px; width: 136px; height: 33px;" data-previewid="33805" title="PED-017-10"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">PED-017-10</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 429px; left: 328px; width: 136px; height: 52px;" data-previewid="33821" title="PHL-225-10"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">PHL-225-10</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 494px; left: 328px; width: 136px; height: 52px;" data-previewid="34596" title="MUS-136-10"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">MUS-136-10</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 623px; left: 468px; width: 136px; height: 52px;" data-previewid="33899" title="SOC-394-11"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">SOC-394-11</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 451px; left: 468px; width: 136px; height: 33px;" data-previewid="33805" title="PED-017-10"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">PED-017-10</a></div></div><div class="fc-event-bg"></div></div></div><div class="fc-event fc-event-vert fc-corner-top fc-corner-bottom registered-cal-item" style="position: absolute; z-index: 8; top: 429px; left: 608px; width: 136px; height: 52px;" data-previewid="33821" title="PHL-225-10"><div class="fc-event-inner"><div class="fc-event-head"></div><div class="fc-event-content"><div class="fc-event-title"><a class="fc-event-title-link">PHL-225-10</a></div></div><div class="fc-event-bg"></div></div></div></div><table class="fc-agenda-slots" style="width:100%" cellspacing="0"><tbody><tr class="fc-slot0 "><th class="fc-agenda-axis ui-widget-header" style="width: 46px;">12am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot1 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot2 "><th class="fc-agenda-axis ui-widget-header">1am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot3 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot4 "><th class="fc-agenda-axis ui-widget-header">2am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot5 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot6 "><th class="fc-agenda-axis ui-widget-header">3am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot7 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot8 "><th class="fc-agenda-axis ui-widget-header">4am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot9 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot10 "><th class="fc-agenda-axis ui-widget-header">5am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot11 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot12 "><th class="fc-agenda-axis ui-widget-header">6am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot13 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot14 "><th class="fc-agenda-axis ui-widget-header">7am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot15 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot16 "><th class="fc-agenda-axis ui-widget-header">8am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot17 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot18 "><th class="fc-agenda-axis ui-widget-header">9am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot19 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot20 "><th class="fc-agenda-axis ui-widget-header">10am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot21 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot22 "><th class="fc-agenda-axis ui-widget-header">11am</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot23 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot24 "><th class="fc-agenda-axis ui-widget-header">12pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot25 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot26 "><th class="fc-agenda-axis ui-widget-header">1pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot27 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot28 "><th class="fc-agenda-axis ui-widget-header">2pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot29 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot30 "><th class="fc-agenda-axis ui-widget-header">3pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot31 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot32 "><th class="fc-agenda-axis ui-widget-header">4pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot33 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot34 "><th class="fc-agenda-axis ui-widget-header">5pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot35 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot36 "><th class="fc-agenda-axis ui-widget-header">6pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot37 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot38 "><th class="fc-agenda-axis ui-widget-header">7pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot39 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot40 "><th class="fc-agenda-axis ui-widget-header">8pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot41 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot42 "><th class="fc-agenda-axis ui-widget-header">9pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot43 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot44 "><th class="fc-agenda-axis ui-widget-header">10pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot45 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot46 "><th class="fc-agenda-axis ui-widget-header">11pm</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr><tr class="fc-slot47 fc-minor"><th class="fc-agenda-axis ui-widget-header">&nbsp;</th><td class="ui-widget-content"><div style="position:relative">&nbsp;</div></td></tr></tbody></table></div></div></div></div></div>
        </div>
        
<!-- ko if: $data.unscheduledSections().length > 0 ||  $data.unscheduledRegisteredSections().length > 0-->
<div class="section-header section-header-left no-meeting-time" aria-hidden="true" role="presentation">
    <span>Sections with no meeting time</span>
</div>
<ul class="section-contents" aria-hidden="true" role="presentation" tabindex="-1">
    <!-- ko foreach: $data.unscheduledSections --><!-- /ko -->
    <!-- ko foreach: $data.unscheduledRegisteredSections -->
    <li>
        <section class="schedule-unplanned-registered-section">
            <div>
                <div class="schedule-unplanned-registered-section-content">
                    <a href="#" data-bind="click: function(data, event) { showCourseOrSectionDetails({ course: $data, allowAdding: false, creditsOverride: $data.Credits(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.GetGradingType()})}, clickBubble: false">
                        <span>
                            <span data-bind="text: $data.SubjectCode">PSY</span>-<span data-bind="text: $data.Number">SCE</span>
                        </span>
                        <span data-bind="text: $data.Title">Senior Capstone Experience</span>
                        <span>Section </span><span data-bind="text: $data.Section.Number">16</span>
                        <span data-bind="if: $data.Section.Faculty().length">
                            <span>Faculty:</span>
                            <span data-bind="foreach:  $data.Section.Faculty()">
                                <span class="faculty-list" data-bind="text: $data">Gibson</span>
                            </span>
                        </span>
                    </a>
                </div>
            </div>
        </section>
    </li>
    <!-- /ko -->
</ul>
<!-- /ko -->

    </div>
</div>

<!-- Section details template -->
<script type="text/html" id="section-detail-template">
    <!-- Credits -->
    <div>
        <!-- ko if: typeof $parent.AcademicHistory.HasSection === 'function' && $parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.AcademicHistory.CreditsCeusDisplay()"></span>
        <!-- /ko -->
        <!-- ko if: typeof $parent.AcademicHistory.HasSection !== 'function' || !$parent.AcademicHistory.HasSection() -->
        <span data-bind="text: 'Credits: ' + $parent.CreditsCeusDisplay()"></span>
        <!-- /ko -->
        <!-- /ko -->
    </div>
    <!-- Grading Type -->
    <div>
        <span data-bind="text: 'Grading: ' + $parent.GetGradingTypeText()"></span>
    </div>
    <!-- Instructor(s) -->
    <!-- ko template: {name: 'instructor-template' } -->
    <!-- /ko -->
    <!-- Section Dates -->
    <div>
        <span data-bind="text: StartDateDisplay"></span><span data-bind="text: ' to ' , visible: !isNullOrEmpty(EndDateDisplay)"></span><span data-bind="text: EndDateDisplay, visible: !isNullOrEmpty(EndDateDisplay)"></span>
    </div>
</script>

<!-- Section Meeting Template -->
<script type="text/html" id="section-meeting-template">
    <!-- Meeting Details/Times -->
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length > 0" role="region" aria-live="polite" id="planned-meetings-region" aria-relevant="additions">
        <div data-bind="foreach: PlannedMeetings">
            <div class="meeting-information">
                <div aria-label="Meeting Time">
                    <span>Time: </span>
                    <span data-bind="text: ko.utils.unwrapObservable(DaysOfWeek)"></span>
                    <span data-bind="text: ko.utils.unwrapObservable(FormattedTime)"></span>
                </div>
                <div aria-label="Meeting Dates">
                    <span>Dates:</span>
                    <span data-bind="text: ko.utils.unwrapObservable(Dates)"></span>
                </div>
                <div aria-label="Meeting Location">
                    <span>Location: </span>
                    <span data-bind="text: ko.utils.unwrapObservable($parent.LocationDisplay)"></span>
                    <span data-bind="text: ko.utils.unwrapObservable(MeetingLocation)"></span>
                    <span data-bind="text: '(' + ko.utils.unwrapObservable(InstructionalMethod) + ')', visible: ko.utils.unwrapObservable(InstructionalMethod)"></span>
                </div>
            </div>
        </div>
    </div>
    <!-- ko template: {name: 'section-no-meeting-template' } -->
    <!-- /ko -->
</script>

<!-- Section No Meeting Template -->
<script type="text/html" id="section-no-meeting-template">
    <div data-bind="if: ko.utils.unwrapObservable(PlannedMeetings).length == 0">
        <div aria-label="Meeting Time">
            <span>Time: </span><span data-bind="text: 'TBD'"></span>
        </div>
        <div aria-label="Meeting Location">
            <span>Location: </span><span data-bind="text: ko.utils.unwrapObservable($data.LocationDisplay)"></span><span>TBD</span>
        </div>
    </div>
</script>

<!-- Instructor Template -->
<script type="text/html" id="instructor-template">
    <!-- ko foreach: Faculty -->
    <div>
        <span data-bind="text: 'Instructor: ' + $data"></span>
    </div>
    <!-- /ko -->
    <!-- ko if: ko.utils.unwrapObservable(Faculty).length == 0 -->
    <div>
        <span data-bind="text: 'Instructor: ' + 'TBD'"></span>
    </div>
    <!-- /ko -->
</script>

            <!-- /ko -->
        </div>
    </div>
</div>

    
<!-- Drop Coreq Dialog -->
<modal-dialog id="dp-dropsectiondialog" params="isVisible: OpenDropDialog, title: Ellucian.DegreePlans.Resources.UiDropTitle, content: $data, defaultCloseOff: true, buttons: [ dropSectionCancelButton, dropSectionButton]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Register and Drop Sections</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <div class="drop-wrapper">
        <h3 data-bind="text: DropMessage"></h3>

        <!-- ko if: dropDialogDropSections().length > 0 --><!-- /ko -->
        <!-- ko if: dropDialogAddSections().length > 0 --><!-- /ko -->
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="dp-dropsection-cancel" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" id="dp-dropsection-commit" aria-label="Update">Update</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

</div>

            </div>
            <div id="schedplan-dp" class="ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide">
                <div id="degreeplan-partial-outer">
    <!-- Skip Links for Terms -->
    <!-- ko foreach: DegreePlan().Terms -->
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#14/FA">Skip to term Fall 2014</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#15/SP">Skip to term Spring 2015</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#15/FA">Skip to term Fall 2015</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#16/SP">Skip to term Spring 2016</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#16/FA">Skip to term Fall 2016</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#17/SP">Skip to term Spring 2017</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#17/FA">Skip to term Fall 2017</a>
    
    <a class="ui-helper-hidden-accessible" tabindex="-1" data-bind="text: 'Skip to term ' + $data.Description(), attr: { href: '#' + $data.Code() }" href="#18/SP">Skip to term Spring 2018</a>
    <!-- /ko -->
    <!-- Top Row With Add Term Button -->
    <div id="dp-controls">
        <input class="esg-button esg-button--primary" type="button" value="Add a Term" title="Add a Term to Your Plan" aria-label="Add a Term to Your Plan" data-bind="click: function() { $root.ShowAddTermDialog(); }, visible: $root.canEdit() === true, enable: DegreePlan().UnplannedTerms().length > 0">
        <input id="timeline-remove-courses" class="esg-button esg-button--secondary" type="button" value="Remove Planned Courses" title="Clear all planned courses from current and future terms" aria-label="Clear all planned courses from current and future terms" data-bind="click: function() { $root.ShowClearPlannedTermsDialog(); }, visible: $root.canEdit() === true &amp;&amp;&nbsp;(($root.isProxyUser() === true&nbsp;&amp;&amp;&nbsp;DegreePlan().ClearableTerms().length&nbsp;>&nbsp;0)&nbsp;||&nbsp;($root.isProxyUser() === false&nbsp;&amp;&amp;&nbsp;DegreePlan().IsPlanProtected() === false &amp;&amp; DegreePlan().ClearableTerms().length > 0))" style="display: none;">
    </div>
    <!-- Degree Plan Terms -->
    <div id="dp-plans">
        <button id="scroll-left" class="esg-button esg-button--secondary esg-button--small" value="<" data-bind="click: function() { ScrollTerms('left'); }, enable: LeftScrollEnabled" aria-label="Scroll timeline left"><span class="caret-left"></span></button>
        <button id="scroll-right" class="esg-button esg-button--secondary esg-button--small" value=">" data-bind="click: function() { ScrollTerms('right'); }, enable: RightScrollEnabled" aria-label="Scroll timeline right"><span class="caret-right"></span></button>
        <ul class="dp-termwrapper" data-bind="foreach: DegreePlan().Terms">
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="14/FA" id="14/FA">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Fall 2014</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Fall 2014</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm14/FA" alt="Remove term Fall 2014 " title="Remove term Fall 2014 " aria-label="Remove term Fall 2014 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    BUS-    112-    12 ">BUS*112-12: Intro to Financial Accounting</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    ENG-    101-    16 ">ENG*101-16: Literature and Composition</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PHL-    100-    13 ">PHL*100-13: Introduction to Philosophy</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 2.557</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">12 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="15/SP" id="15/SP">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Spring 2015</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Spring 2015</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm15/SP" alt="Remove term Spring 2015 " title="Remove term Spring 2015 " aria-label="Remove term Spring 2015 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    GRW-    101-    72 ">GRW*101-72: Foreign Cuisines</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    HPS-    201-    10 ">HPS*201-10: Intermediate Spanish I</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    112-    10 ">PSY*112-10: General Psychology</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    220-    10 ">PSY*220-10: Human Sexuality</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 2.168</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="15/FA" id="15/FA">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Fall 2015</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Fall 2015</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm15/FA" alt="Remove term Fall 2015 " title="Remove term Fall 2015 " aria-label="Remove term Fall 2015 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    BIO-    111-    15 ">BIO*111-15: General Biology I w/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    111-    11 ">PSY*111-11: General Psychology</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">D</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    209-    10 ">PSY*209-10: Stats &amp; Design I w/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    SOC-    101-    10 ">SOC*101-10: Intro to Sociology</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 2.000</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="16/SP" id="16/SP">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Spring 2016</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Spring 2016</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm16/SP" alt="Remove term Spring 2016 " title="Remove term Spring 2016 " aria-label="Remove term Spring 2016 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    BIO-    112-    18 ">BIO*112-18: General Biology II w/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    ENG-    208-    11 ">ENG*208-11: History of English Lit. II</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    234-    10 ">PSY*234-10: Psychopathology II</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    SOC-    240-    10 ">SOC*240-10: Criminology</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 2.418</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="16/FA" id="16/FA">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Fall 2016</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Fall 2016</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm16/FA" alt="Remove term Fall 2016 " title="Remove term Fall 2016 " aria-label="Remove term Fall 2016 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    ANT-    109-    10 ">ANT*109-10: Intro to GIS</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    309-    10 ">PSY*309-10: Stats &amp; Design II w/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    320-    10 ">PSY*320-10: Health Psychology w/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    SOC-    341-    10 ">SOC*341-10: Variant Behavior</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    THE-    211-    12 ">THE*211-12: Acting I</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">A</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 3.132</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">20 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="17/SP" id="17/SP">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Spring 2017</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Spring 2017</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm17/SP" alt="Remove term Spring 2017 " title="Remove term Spring 2017 " aria-label="Remove term Spring 2017 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    MAT-    135-    10 ">MAT*135-10: Finite Mathematics</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">A</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PED-    052-    10 ">PED*052-10: Nutrition (T)</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">A-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 2</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PHL-    335-    10 ">PHL*335-10: Philosophy of Law</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    305-    10 ">PSY*305-10: Psychopharmacology W/ Lab</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    399-    10 ">PSY*399-10: Junior Seminar</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">P</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 2 (Pass/Fail only)</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 3.096</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="17/FA" id="17/FA">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Fall 2017</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Fall 2017</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm17/FA" alt="Remove term Fall 2017 " title="Remove term Fall 2017 " aria-label="Remove term Fall 2017 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    POL-    320-    10 ">POL*320-10: Law and Society</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">C+</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    231-    10 ">PSY*231-10: Personality</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B-</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    410-    10 ">PSY*410-10: NRM w/Lab:TBI &amp; Neuro Disease</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">B</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    THE-    231-    10 ">THE*231-10: Theatre Technology I</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">A</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" -->
                    <div data-bind="text: $data.CompletedGpaDisplay()">GPA: 3.000</div>
                    <!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        
            <li class="dp-termouter">
                <a data-bind="attr: {name: $data.Code(), id: $data.Code()}" name="18/SP" id="18/SP">
                </a>
                <div class="dp-termheader">
                    <div class="dp-termlisting" tabindex="-1">
                        <a href="#" data-bind="text: Description, click: function() { $parent.ShowScheduleTerm($data.Code())}, visible: isNullOrEmpty($data.Code()) === false">Spring 2018</a><span data-bind="text: Description, visible: isNullOrEmpty($data.Code()) === true" style="display: none;">Spring 2018</span>
                    </div>
                    <div class="dp-removetermcontainer">
                        <button type="button" class="esg-button--float-right" data-bind="click: $parents[0].ShowRemoveTermDialog, visible: $data.IsTermRemovable() === true &amp;&amp;  $root.canEdit() === true &amp;&amp; $parents[0].DegreePlan().Terms().length>0 &amp;&amp; ($data.IsTermProtected() === false || $root.isProxyUser() === true) , attr: {id:'removeterm'+$data.Code(), alt: 'Remove term ' + $data.Description() + ' ', title: 'Remove term '+ $data.Description() + ' ', 'aria-label': 'Remove term ' + $data.Description() + ' '}" id="removeterm18/SP" alt="Remove term Spring 2018 " title="Remove term Spring 2018 " aria-label="Remove term Spring 2018 " style="display: none;">
                            <span class="esg-icon__container" aria-hidden="True">
                                <svg class="esg-icon esg-icon--neutral esg-icon--xsmall">
                                    <use xlink:href="#icon-close"></use>
                                </svg>
                            </span>
                            <span class="offScreen" data-bind="attr:{'aria-label':'Remove term'}" aria-label="Remove term"></span>
                        </button>
                        <div data-bind="visible: $data.IsTermCompleted() === true" class="dp-termcompleteicon" title="Term is Complete" aria-label="Term is Complete" style="display: none;">
                        </div>
                        <div data-bind="visible: $data.IsTermCompleted() === false &amp;&amp; $data.IsTermActive() === true, css: { 'dp-currenttermicon-padded': $data.IsTermRemovable() === true }" class="dp-termcurrenticon" title="Term is In Progress" aria-label="Term is In Progress" style="display: none;">
                        </div>
                    </div>
                </div>
                <div class="dp-termcourses">
                    <!-- ko foreach: PlannedCourses -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    MUS-    136-    10 ">MUS*136-10: Class Guitar I</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">✓</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 2</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PED-    017-    10 ">PED*017-10: Strength &amp; Conditioning</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">✓</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 2</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PHL-    225-    10 ">PHL*225-10: Ethical Theory</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">✓</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    PSY-    SCE-    16 ">PSY*SCE-16: Senior Capstone Experience</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">✓</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    
                    <!-- ko if: $data.AcademicHistory.HasSection() === true || $data.AcademicHistory.IsCompletedCredit() === true -->
                    <div class="dp-coursebubble dp-coursebubble-complete">
                        <section class="dp-completedcoursetable">
                            <div class="dp-coursebubble-indentedtext">
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && !$data.AcademicHistory.HasSection() --><!-- /ko -->
                                <!-- ko if: typeof $data.AcademicHistory.HasSection === 'function' && $data.AcademicHistory.HasSection() -->
                                <a class="bold dp-planneditemlink" href="#" data-bind="text: $data.FullTitleDisplay, click: function(data, event) { showCourseOrSectionDetails({course: $data, allowAdding: false, allowUpdating: false, addCallback: null, creditsOverride: $data.AcademicHistory.CreditsCeusDisplay(), canSkipWaitlist: $parents[1].canSkipWaitlist(), gradingTypeOverride: $data.AcademicHistory.GradingType() }) }, clickBubble: false, attr: {'aria-label': 'Course or section details for    ' + $data.SubjectCode() + '-    ' + $data.Number() + '-    ' + $data.AcademicHistory.Section.Number() + ' '}" aria-label="Course or section details for    SOC-    394-    11 ">SOC*394-11: SpTp: Sociology of Disablties</a>
                                <!-- /ko -->
                            </div>
                            <div>
                                <span class="dp-floatright bold dp-text14 dp-gradedisplay" data-bind="text: $data.AcademicHistory.GradeDisplay">✓</span>
                            </div>
                            <div class="dp-coursebubble-indentedtext" data-bind="if: typeof $data.AcademicHistory.CreditsCeusDisplay ==='function'">
                                <span class="bold dp-creditstext" data-bind="text: 'Credits: ' + $data.AcademicHistory.CreditsCeusDisplay()">Credits: 4</span>
                            </div>
                        </section>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: $data.AcademicHistory.HasSection() === false && $data.AcademicHistory.IsCompletedCredit() === false --><!-- /ko -->
                    <!-- /ko -->
                </div>
                <div class="dp-termfooter">
                    <!-- ko if: $data.IsAcademicHistoryAvailable() === true && $data.CompletedGpa() != null && $data.Description() != "Completed Non-term Courses" --><!-- /ko -->
                    <span data-bind="text: $data.TermCreditsCeusDisplay()">16 Enrolled Credits</span>&nbsp;
                </div>
            </li>
        </ul>
    </div>
</div>

            </div>
            <div id="schedplan-advising" class="ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide">
                
<div id="student-advising">
    <div id="advising-contacts-container">
        <div data-bind="visible: DegreePlan().AdvisingContacts().length > 0">
            <h3>My Advisors</h3>
            <div id="advising-contacts" data-bind="foreach: DegreePlan().AdvisingContacts()">
                <!-- ko if: EmailAddress() != null  -->
                <div class="contact-advisor-email">
                <a data-bind="text: Name(), mailto: { email: EmailAddress(), label: 'Send an e-mail to '&nbsp;+&nbsp;Name() + ' '}" href="mailto:gspilich2@washcoll.edu" aria-label="Send an e-mail to George Spilich " title="Send an e-mail to George Spilich " alt="Send an e-mail to George Spilich ">George Spilich</a>
                <span class="advising-type" data-bind="text: AdvisorType()">(Major)</span>
                </div>
                <!-- /ko -->
                <!-- ko if: EmailAddress() == null  --><!-- /ko -->
            </div>
            <input type="button" id="sendtoadvisor-button" class="esg-button esg-button--secondary" value="Request Review" aria-label="Mark your plan as ready for review" title="Mark your plan as ready for review" data-bind="visible: $data.canSubmitForApproval() === true, click: requestReview, clickBubble: false" style="">
        </div>
        <div data-bind="visible: DegreePlan().AdvisingContacts().length == 0" style="display: none;">
           <!-- ko if: "Advising Office" != "" && "" != "" --><!-- /ko -->
        </div>
        <div id="last-reviewed-info" data-bind="text: 'Course Plan last reviewed on ' + DegreePlan().LastReviewedDate() + ' by ' + DegreePlan().LastReviewedBy(), visible: DegreePlan().LastReviewedDate() != null &amp;&amp; DegreePlan().LastReviewedBy() != null " style="display: none;">Course Plan last reviewed on null by null</div>
    </div>

    <div id="student-advising-notes-wrapper">
        <div id="advising-notes-compose-wrapper" data-bind="visible: canApprove() === true">
    <h3>Compose a Note</h3>
    <label for="advising-notes-compose-box" class="field-label-hidden">Compose an advising note</label>
    <textarea id="advising-notes-compose-box" class="esg-form__input"></textarea>
    <!-- ko if: isProxyUser() --><!-- /ko -->
    <!-- ko if: !isProxyUser() -->
    <input type="button" class="esg-button esg-button--primary" value="Save Note" id="student-advising-note-save" aria-label="Save advising note" data-bind="click: function () { AddAdvisingNoteFromStudent($('#advising-notes-compose-box').val()); }">
    <!-- /ko -->
</div>
        <!-- ko with: DegreePlan -->
        <div id="advising-notes-view-wrapper">
    <a class="ui-helper-hidden-accessible" tabindex="0" aria-label="Start of advising notes " href="#"></a>
    <h3>View Note History</h3>
    <div id="advising-notes-view-inner-wrapper" data-bind="foreach: AdvisingNotes, visible: AdvisingNotes().length > 0" style="display: none;"></div>
    <div id="advising-notes-view-no-notes" data-bind="visible: AdvisingNotes().length === 0">
        No advising notes have been entered.
    </div>
</div>
        <!-- /ko -->
    </div>
</div>

            </div>
            <div id="schedplan-petitions-waivers" class="ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide">
                
<div data-bind="with:studentPetitionsWaiversInstance">
    <spinner params="isVisible: !isLoaded(), message: stringPlanningHomeLoadingDataSpinnerMessage"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Loading My Data...</div>
    <!-- /ko -->
</div></spinner>

    <div class="clear-group" data-bind="visible: isLoaded()" style="display: none;">
        <div class="section-wrapper">

            <h3 class="section-header">
                Student Petition(s)
            </h3>
            <div class="section-contents">
                <span data-bind="visible: !hasPetitions()">No existing petitions </span>
                <table class="student-petition-table" data-bind="visible: hasPetitions()" style="display: none;">
                    <thead>
                        <tr>
                            <th>Course </th>
                            <th>Section</th>
                            <th> Term/Period</th>
                            <th>Status</th>
                            <th>Updated On</th>
                            <th>Reason</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: StudentPetitions()"></tbody>
                </table>
            </div>
        </div>
        <div class="section-wrapper">
            <h3 class="section-header">
                Faculty Consent(s)
            </h3>
            <div class="section-contents">
                <span data-bind="visible: !hasConsents()">No existing faculty consents</span>

                <table class="student-petition-table" data-bind="visible: hasConsents()" style="display: none;">

                    <thead>
                        <tr>
                            <th>Course </th>
                            <th>Section</th>
                            <th> Term/Period</th>
                            <th>Status</th>
                            <th>Updated On</th>
                            <th>Reason</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: StudentConsents()"></tbody>
                </table>
            </div>
        </div>
        <div class="section-wrapper">
            <h3 class="section-header">
                Requisite Waiver(s)
            </h3>
            <div class="section-contents">
                <span data-bind="visible: !hasWaivers()">No existing waivers</span>

                <table class="student-waiver-table" data-bind="visible: hasWaivers()" style="display: none;">

                    <thead>
                        <tr>
                            <th>Course </th>
                            <th>Section</th>
                            <th> Term/Period</th>
                            <th>Status</th>
                            <th>Requisites</th>

                        </tr>
                    </thead>
                    <tbody data-bind="foreach: StudentWaivers()"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>





            </div>
        </div>
        <!-- /ko -->
        <!-- /ko -->
        <modal-spinner params="isVisible: isLoading, message: LoadingMessage"><div style="display: none;" class="esg-modal-dialog esg-is-open" data-bind="visible: isVisible">
    <div class="esg-modal-dialog__body">
        <spinner params="isVisible: isVisible, message: message"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper" style="display: none;">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Refreshing registration eligibility...</div>
    <!-- /ko -->
</div></spinner>
    </div>
</div>
<div style="display: none;" class="esg-modal-overlay" data-bind="visible: isVisible"></div>
</modal-spinner>

        <div id="dialogs" style="" data-bind="visible: true">

            <!-- Remove Course Dialog -->
            
<!-- Confirm Remove Course Dialog -->
<modal-dialog id="schedplan-confirmremovecoursedialog" params="isVisible: removeCourseDialogIsOpen, title: Ellucian.DegreePlans.Resources.RemoveCourseDialogTitle, content: $data, defaultCloseOff: true, buttons: [ removeCourseCancelButton, removeCourseRemoveButton]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Confirm Remove Course</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <div>
        Are you sure you want to remove the following item from
        <span id="schedplan-removingcoursetermname" data-bind="text: removingCourseTermTitle()"></span>?
        <span id="schedplan-removingcoursename" data-bind="text: removingCourseTitle()"></span>
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="schedplan-removecourse-cancel" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" id="schedplan-removecourse-remove" aria-label="Remove">Remove</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

            <!-- Add Term Dialog -->
            
<!-- Add a Term Dialog -->
<modal-dialog id="schedplan-addtermdialog" params="isVisible: addTermDialogIsOpen, title: Ellucian.DegreePlans.Resources.AddTermDialogTitle, content: $data, defaultCloseOff: true, buttons: [ addTermCancelButton, addTermButton]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Add a Term to Your Plan</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <div>
        <div id="schedplan-addtermcontent">
            Please select a term to be added to your plan:
        </div>
        <div id="schedplan-addtermoptions">
            <!-- ko if: DegreePlan().UnplannedTerms().length !== 0 -->
            <label class="field-label-hidden" for="addTermId">Select a term to add to your plan</label>
            <select id="addTermId" class="esg-form__input" data-bind="options: DegreePlan().UnplannedTerms(), optionsText: 'Description', optionsValue: 'Code', value: addingTerm"><option value="18/FA">Fall 2018</option><option value="19/SP">Spring 2019</option><option value="19/FA">Fall 2019</option><option value="20/SP">Spring 2020</option><option value="20/FA">2020 Fall</option><option value="21/SP">2021 Spring</option><option value="21/FA">2021 Fall</option><option value="22/SP">2022 Spring</option></select>
            <!-- /ko -->
            <message params="isVisible: DegreePlan().UnplannedTerms().length === 0, message: 'There are no terms available to add to your plan.', type: 'info'"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
        </div>
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="schedplan-addtermformcancelbutton" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" id="schedplan-addtermformaddbutton" aria-label="Add Term">Add Term</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

            <!-- Remove Term Dialog -->
            
<!-- Confirm Remove Term Dialog -->
<modal-dialog id="dp-confirmremovetermdialog" params="isVisible: removeTermDialogIsOpen, title: Ellucian.DegreePlans.Resources.RemoveTermDialogTitle, content: $data, defaultCloseOff: true, buttons: [ removeTermCancelButton, removeTermButton]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Confirm Remove Term</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <div>
        <!-- ko with: removingTerm --><!-- /ko -->
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="dp-removeterm-cancel" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" id="dp-removeterm-remove" aria-label="Remove">Remove</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

            <!-- Clear Term Dialog -->
            
<modal-dialog id="dp-confirmcleartermdialog" params="isVisible: clearPlannedTermDialogIsOpen, title: Ellucian.DegreePlans.Resources.ClearTermDialogTitle, content: $data, defaultCloseOff: true, buttons: [ clearTermCancelButton, clearTermButton]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Remove Planned Courses</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <!-- Confirm Clear Planned Courses from SINGLE Term Dialog -->
    <!-- ko if: clearDialogTerms().length == 1 --><!-- /ko -->
    <!-- Confirm Clear MULTIPLE Planned Terms Dialog -->
    <!-- ko if: clearDialogTerms().length > 1 --><!-- /ko -->
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" disabled="" id="dp-clearterm-cancel" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" id="dp-clearterm-remove" aria-label="Remove">Remove</button>
        </div>
        <!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>



        </div>
    </div>


    <div id="other-dialogs" style="">
        <!-- Empty plan helper -->
        <!-- Load Sample Dialog -->
<modal-dialog id="load-sample-plan-dialog" params="isVisible:dialogIsOpen, title: Ellucian.Programs.Resources.LoadSamplePlanDialogTitle, content:$data, defaultCloseOff:true,pureModal:true, buttons:[samplePlanCancelButton, samplePlanPreviewButton, samplePlanBackButton,samplePlanLoadButton ]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Load Sample Course Plan</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    <div class="sample-plan-dialog-wrapper">
        <!-- Overview text -->
        <a class="ui-helper-hidden-accessible" tabindex="0" aria-label="Start of Load Sample Plan program selection " href="#"></a>
        <div data-bind="visible: !previewIsLoading() &amp;&amp; !previewIsVisible()">
            <h4 data-bind="text: isProxyUser() == true ? 'The course plan allows you to assist your advisee in sequencing their courses, providing the ideal path for meeting their academic goals.    ' : 'The course plan will assist you in sequencing your courses, providing the ideal path in meeting your academic goals.    '">The course plan will assist you in sequencing your courses, providing the ideal path in meeting your academic goals.    </h4>
        </div>

        <!-- Select term to start sample plan -->
        <div id="sample-plan-terms" data-bind="visible: !previewIsLoading() &amp;&amp; !previewIsVisible()">
            <span id="ui-load-sample-start-term">First, choose the first term to use for your course plan:</span>
            <select class="esg-form__input esg-form__input--inline" aria-labelledby="ui-load-sample-start-term" data-bind="value: selectedTerm, options: planningTerms, optionsText: 'Description', optionsValue: 'Code', optionsCaption: 'Select a term...    '"><option value="">Select a term...    </option></select>
        </div>
        <!-- Select from enrolled programs -->
        <div class="student-programs" data-bind="visible: !previewIsLoading() &amp;&amp; !previewIsVisible()">
            <span>Next, select from one of your enrolled programs:</span>
           

            <div data-bind="foreach: StudentPrograms">
                <div class="student-programs-item-wrapper esg-radio">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSample'} , checked: $parent.SelectedProgram, checkedValue:$data" id="UG.BA.PSY_LoadSample" value="[object Object]">
                <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSample' }" for="UG.BA.PSY_LoadSample">Psychology</label>
                </div>
            </div>

        </div>
        <!-- Select from other programs -->
        <div class="different-program" data-bind="visible: !previewIsLoading() &amp;&amp; !previewIsVisible()">
            <span>Or, choose a different program:</span>
            <label for="sample-plans-filter" class="field-label-hidden">Search for a program:</label>
            <input type="search" id="sample-plans-filter">
            <ul data-bind="foreach: AllPrograms">
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.AMS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.AMS_LoadSampleSearch">American Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ANT_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ANT_LoadSampleSearch">Anthropology</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ART_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ART_LoadSampleSearch">Art and Art History</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BS.BIO_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BS.BIO_LoadSampleSearch">Biology</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.BUS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.BUS_LoadSampleSearch">Business Management</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BS.CHE_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BS.CHE_LoadSampleSearch">Chemistry</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.CMS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.CMS_LoadSampleSearch">Communication and Media Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.CSI_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.CSI_LoadSampleSearch">Computer Science</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.DRA_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.DRA_LoadSampleSearch">Drama</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ECN_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ECN_LoadSampleSearch">Economics</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.EDU_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.EDU_LoadSampleSearch">Education</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ENG_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ENG_LoadSampleSearch">English</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BS.ESI_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BS.ESI_LoadSampleSearch">Environmental Science</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ENV_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ENV_LoadSampleSearch">Environmental Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.FRS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.FRS_LoadSampleSearch">French Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.GRS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.GRS_LoadSampleSearch">German Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.HPS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.HPS_LoadSampleSearch">Hispanic Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.HIS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.HIS_LoadSampleSearch">History</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.HMN_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.HMN_LoadSampleSearch">Humanities</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.INM_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.INM_LoadSampleSearch">Independent Major</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.ILC_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.ILC_LoadSampleSearch">International Literature and Cultures</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.INT_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.INT_LoadSampleSearch">International Studies</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.MAT_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.MAT_LoadSampleSearch">Mathematics</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.MUS_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.MUS_LoadSampleSearch">Music</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.PHL_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.PHL_LoadSampleSearch">Philosophy</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BS.PHY_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BS.PHY_LoadSampleSearch">Physics</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.POL_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.POL_LoadSampleSearch">Political Science</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.PSY_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.PSY_LoadSampleSearch">Psychology</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BS.PSY_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BS.PSY_LoadSampleSearch">Psychology</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.SOC_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.SOC_LoadSampleSearch">Sociology</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="UG.BA.THE_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="UG.BA.THE_LoadSampleSearch">Theatre</label>
                </li>
            
                <li class="sample-plan">
                    <input type="radio" name="program" data-bind="attr: { id: $data.Code() + '_LoadSampleSearch' }, checked: $parent.SelectedProgram, checkedValue: $data" id="A_LoadSampleSearch" value="[object Object]">
                    <label data-bind="text: $data.Title(), attr: { 'for': $data.Code() + '_LoadSampleSearch' }" for="A_LoadSampleSearch">UG.BA.INM</label>
                </li>
            </ul>
            <div id="sample-plan-filternoresults" class="filternoresults">No Programs Found</div>
        </div>
        <!-- Add a div class for the preview pane, hide it by default, data bind it to the model from the controller DegreePlanModel, hide above divs when this shows -->
        <div class="preview-sample-plan" data-bind="visible: previewIsVisible" style="display: none;">
            <h4>This is an example of the sequence of course work to complete the selected program. Press the Load button to apply these courses to the course plan. Press the Back button to select a different sample plan.</h4>
            <h5 data-bind="text: SelectedProgramTitle"></h5>
            <ul data-bind="foreach: Terms"></ul>
        </div>
        <div class="loading-preview" data-bind="visible: previewIsLoading" style="display: none;">Loading Sample Plan Preview...</div>
    </div>

<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="sampleplancancelbutton" aria-label="Cancel">Cancel</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--primary" disabled="" id="sampleplanpreviewbutton" aria-label="Preview Plan">Preview Plan</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible --><!-- /ko -->
    
        <!-- ko if: visible --><!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

        <!-- Course Details dialog -->
        
<modal-dialog id="coursedetails-dialogcontainer" params="isVisible: courseIsVisible, title: Ellucian.Course.SectionCourseCommonDetails.CourseDialogTitle, content: $data, defaultCloseOff: true, buttons: [ closeCourseDetailsButton, courseDetailsUpdateButton, courseDetailsAddButton ]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Course Details</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    
    <spinner params="message: Ellucian.Course.SearchResult.stringDetailsLoadingText, isVisible: isLoading()"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Retrieving information...</div>
    <!-- /ko -->
</div></spinner>

    <div data-bind="visible: !isLoading()" style="display: none;">

        <div id="coursedetails-title" data-bind="text: FullTitle" tabindex="-1"></div>

        <div id="coursedetails-description" data-bind="html: Description"></div>

        <div id="coursedetails-table" class="layout-table" aria-label="course details table">
            <div class="layout-table-row">
                <div class="layout-table-cell" style="width: 25%">
                    <span class="bold">Credits</span>
                </div>
                <div class="layout-table-cell">
                    <div id="coursedetails-credits" class="details-value">
                        <div id="coursedetails-creditsstatic" data-bind="text: CreditsStatic(), visible: IsStaticCredits() === true" style="display: none;"></div>
                        <select id="coursedetails-selectvarcredit" class="esg-form__input esg-form__input--inline" onkeydown="return checkForCourseAddEnter(event)" aria-labelledby="coursedetails-freeformcreditshelp" data-bind="options: CreditsVariableIncrements, visible: IsDropDownCredits() === true" style="display: none;"></select>
                        <input type="text" id="coursedetails-freeformcredits" class="details-freeformcredits" size="8" onkeydown="return checkForCourseAddEnter(event)" aria-labelledby="coursedetails-freeformcreditshelp" data-bind="visible: IsFreeFormCredits() === true, value: FreeFormCreditsValue(), hasfocus: IsFreeFormCredits() === true" style="display: none;">
                        <div id="coursedetails-freeformcreditshelp" class="details-varcreditshelp" data-bind="text: CreditsLabel"></div>
                    </div>
                </div>
            </div>
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Locations Offered</span>
                </div>
                <div class="layout-table-cell">
                    <div id="coursedetails-locations" class="details-value" data-bind="foreach: Locations, visible: Locations().length > 0" style="display: none;"></div>
                    <span data-bind="visible: Locations().length === 0" class="details-value">TBD</span>
                </div>
            </div>
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Requisites</span>
                </div>
                <div class="layout-table-cell">
                    <div id="coursedetails-requisites" class="details-value" data-bind="foreach: Requisites"></div>
                    <span data-bind="visible: Requisites().length === 0" class="details-value">None</span>
                </div>
            </div>

            <div class="layout-table-row" data-bind="visible: $data.showTermsOffered" style="display: none;">
                <div class="layout-table-cell"></div>
                <div class="layout-table-cell">
                    <div id="coursedetails-termswarnings">
                        <div class="coursedetails-termsofferedicon"></div>
                        <div id="coursedetails-termsoffered" data-bind="text: TermsOffered"></div>
                    </div>
                </div>
            </div>
            <div class="layout-table-row" data-bind="visible: $data.showYearsOffered" style="display: none;">
                <div class="layout-table-cell"></div>
                <div class="layout-table-cell">
                    <div id="coursedetails-termswarnings">
                        <div class="coursedetails-termsofferedicon"></div>
                        <div id="coursedetails-termsoffered" data-bind="text: YearsOffered"></div>
                    </div>
                </div>
            </div>

            <!-- ko if: $data.showLocationCycleRestrictionDescriptions --><!-- /ko -->
            <div class="layout-table-row" data-bind="visible: AllowAdding() === true || AllowUpdating() === true" style="display: none;">
                <div class="layout-table-cell bold" id="coursedetails-selecttermlabel">Term</div>
                <div class="layout-table-cell">
                    <select id="coursedetails-selectterm" class="esg-form__input esg-form__input--inline" onkeydown="return checkForCourseAddEnter(event)" aria-labelledby="coursedetails-selecttermlabel" data-bind="value: SelectedTerm, options: AddTerms, optionsText: 'description', optionsValue: 'code', optionsCaption: 'Select a Term...    '"><option value="">Select a Term...    </option></select>
                </div>
            </div>
        </div>
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="coursedetails-close" aria-label="Close Course Details">Close</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible --><!-- /ko -->
    
        <!-- ko if: visible --><!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>
        <!-- Section Details dialog -->
        


<modal-dialog id="sectiondetails-dialogcontainer" params="isVisible: sectionIsVisible, title: Ellucian.Course.SectionCourseCommonDetails.SectionDialogTitle, content: $data, defaultCloseOff: true, buttons: [ closeSectionDetailsButton, addSectionDetailsButton ]"><!-- Copyright 2013-2017 Ellucian Company L.P. and its affiliates. -->
<div style="display: none" class="esg-modal-dialog" data-bind="visible: isVisible, attr: { 'tabindex': tabIndex }" tabindex="">
    <div class="esg-modal-dialog__header">
        <!-- ko ifnot: defaultCloseOff --><!-- /ko -->
        <h3 class="esg-modal-dialog__title" data-bind="html: title">Section Details</h3>
    </div>
    <div class="esg-modal-dialog__body">
        <!-- ko template: { nodes: $componentTemplateNodes, data: content } -->
    
    <spinner params="message: Ellucian.Course.SearchResult.stringDetailsLoadingText, isVisible: isLoading()"><div data-bind="visible: isVisible, css: wrapperClass" class="css-spinner-wrapper" style="display: none;">
    <div class="esg-spinner-wrapper">
        <div class="esg-spinner"></div>
    </div>
    <!-- ko if: showMessage -->
    <div class="css-spinner-wrapper__message" data-bind="html: message">Retrieving information...</div>
    <!-- /ko -->
</div></spinner>

    
    <div data-bind="visible: !isLoading()">
        <div class="layout-table">
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <div id="sectiondetails-title" class="bold" data-bind="text: FullTitle" tabindex="-1"></div>
                    <div data-bind="visible: !isNullOrEmpty(TermDisplay)">
                        <div id="sectiondetails-term" data-bind="text: TermDisplay"></div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <hr class="dashedborder">
        </div>

        <div id="sectiondetails-table" class="layout-table" aria-label="section details table">
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span id="section-instructor-label" class="bold">Instructors</span>
                </div>
                <div class="layout-table-cell">
                    <div id="sectiondetails-instructorvalue" class="details-value">
                        <div class="layout-table" aria-labelledby="section-instructor-label">
                            <!-- ko foreach: Instructors --><!-- /ko -->
                        </div>
                    </div>
                    <span data-bind="visible: Instructors().length === 0" class="details-value">TBD</span>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Meeting Information</span>
                </div>
                <div class="layout-table-cell">
                    <div id="sectiondetails-timelocationvalue" data-bind="visible: TimeLocations().length > 0" style="display: none;">
                        <div class="layout-table">
                            <!-- ko foreach: TimeLocations --><!-- /ko -->
                        </div>
                    </div>
                    <span data-bind="visible: TimeLocations().length === 0" class="details-value">TBD</span>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Dates</span>
                </div>
                <div class="layout-table-cell">
                    <span id="sectiondetails-datesvalue" class="details-value" data-bind="text: Dates"></span>
                </div>
            </div>
            
            <div class="layout-table-row" data-bind="visible: (Capacity() !== null &amp;&amp; Available() === 0) || (WaitlistAvailable() === true &amp;&amp; Waitlisted() > 0 &amp;&amp; canSkipWaitlist() === false)" style="display: none;">
                <div class="layout-table-cell"></div>
                 <div class="layout-table-cell">
                    <message params="isVisible: WaitlistAvailable(), type: 'error', message: Ellucian.Course.SectionCourseCommonDetails.SectionFullWaitlistWarning"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible --><!-- /ko --></message>
                     <message params="isVisible: !WaitlistAvailable(), type: 'error', message: Ellucian.Course.SectionCourseCommonDetails.SectionFullWarning"><!-- Copyright 2016 Ellucian Company L.P. and its affiliates. -->
<!-- ko if: isVisible -->
<div class="esg-alert esg-alert--fluid esg-alert--error" data-bind="attr: { 'class' : modifier1, 'role': role }" role="alert">
    <span class="esg-alert__icon-wrapper">
        <span class="esg-alert__icon esg-icon__container" aria-hidden="True">
            <svg class="esg-icon esg-icon--error-dark" data-bind="css: modifier2">
                <use xlink:href="#icon-error" data-bind="attr: { 'xlink:href': iconId }"></use>
            </svg>
        </span>
    </span>
    <div class="esg-alert__message">
        <!-- ko if: buttonLabel --><!-- /ko -->
        <!-- ko if: title --><!-- /ko -->
        <div data-bind="html: message">This section is full.</div>
    </div>
</div>
<!-- /ko --></message>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Seats Available</span>
                </div>
                <div class="layout-table-cell">
                    <span class="details-value" data-bind="text: SeatlistString, visible: IsUnlimitedSeating() === false">undefined of undefined Total</span><span class="details-value" data-bind="    visible: Capacity() === null" style="display: none;">Unlimited</span>
                </div>
            </div>
            
            <div class="layout-table-row" data-bind="visible: (Capacity() !== null &amp;&amp; Available() === 0) || (WaitlistAvailable() === true &amp;&amp; Waitlisted() > 0 &amp;&amp; canSkipWaitlist() === false)" style="display: none;">
                <div class="layout-table-cell">
                    <span class="bold">Waitlisted</span>
                </div>
                <div class="layout-table-cell">
                    <span class="details-value" data-bind="text: Waitlisted()"></span>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell" style="width: 23%;">
                    <span id="section-credits-label" class="bold">Credits</span>
                </div>
                <div class="layout-table-cell">
                    <div id="sectiondetails-credits" class="details-value">
                        <div id="sectiondetails-creditsstatic" data-bind="text: CreditsStatic, visible: IsStaticCredits() === true" style="display: none;"></div>
                        <select id="sectiondetails-selectvarcredit" class="esg-form__input esg-form__input--inline" onkeydown="return checkForSectionAddEnter(event)" aria-labelledby="section-credits-label" data-bind="options: CreditsVariableIncrements, visible: IsDropDownCredits() === true, enable: AllowAdding" disabled="" style="display: none;"></select>
                        <input type="text" id="sectiondetails-freeformcredits" size="8" class="details-freeformcredits" aria-labelledby="section-credits-label" onkeydown="return checkForSectionAddEnter(event)" data-bind="visible: IsFreeFormCredits() === true, value: FreeFormCreditsValue(), enable: AllowAdding" disabled="" style="display: none;">
                        <div id="sectiondetails-freeformcreditshelp" class="details-varcreditshelp" data-bind="text: CreditsLabel"></div>
                    </div>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell" style="width: 23%;">
                    <span id="section-grading-label" class="bold">Grading</span>
                </div>
                <div class="layout-table-cell">
                    <div id="sectiondetails-grading" class="details-value">
                        <select id="sectiondetails-selectgrading" class="esg-form__input esg-form__input--inline" onkeydown="return checkForSectionAddEnter(event)" aria-labelledby="section-grading-label" data-bind="options: GradingOptions, value:gradingSelected, optionsText:'Description', optionsValue:'Code', visible: !IsStaticGrading() &amp;&amp; GradingOptions().length > 1" style="display: none;"></select>
                        <span class="sectiondetails-grading-options-message" data-bind="visible: GradingOptionsMatch() === false" style="display: none;">Grading options do not match the student's options.</span>
                        <span class="sectiondetails-grading-options-message" data-bind="visible: GradingOptions().length == 0">Pass or no pass only but you do not have permission.</span>
                        <span id="sectiondetails-gradingstatic" data-bind="text: gradingStaticValue, visible: IsStaticGrading() || GradingOptions().length == 1" style="display: none;"></span>
                    </div>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Requisites</span>
                </div>
                <div class="layout-table-cell">
                    <div class="details-value" data-bind="foreach: Requisites"></div>
                    <span data-bind="visible: Requisites().length === 0" class="details-value">None</span>
                </div>
            </div>
            
            <div class="layout-table-row">
                <div class="layout-table-cell">
                    <span class="bold">Course Description</span>
                </div>
                <div class="layout-table-cell">
                    <div id="sectiondetails-description" data-bind="html: Description"></div>
                </div>
            </div>
            
            <!-- ko  if: typeof Comments() !== 'undefined' && Comments().length > 0 --><!-- /ko -->
            
            <div class="layout-table-row" data-bind="visible:TopicCodeDescription()" style="display: none;">
                <div class="layout-table-cell">
                    <span class="bold">Topic</span>
                </div>
                <div class="layout-table-cell">
                    <span class="details-value" data-bind="text:TopicCodeDescription()"></span>
                </div>
            </div>
            
            <div class="layout-table-row" data-bind="visible: Charges()">
                <div class="layout-table-cell">
                    <span class="bold">Additional Course Fees</span>
                </div>
                <div class="layout-table-cell">
                    <div id="fees-exclude-tuition-disclaimer">
                        Fees listed here are in addition to general tuition and fees charged at registration.
                    </div>
                    <div class="section-details--fees-block">
                        <!-- ko foreach: Charges() --><!-- /ko -->
                    </div>
                    <div id="fees-disclaimer" class="section-details--fees-block" data-bind="visible: HasRuleBasedCharges()" aria-hidden="true" style="display: none;">
                        <span>*</span>
                        <span>May not apply to all students</span>
                    </div>
                </div>
            </div>
            
            <div class="layout-table-row" data-bind="visible: BookstoreUrl() === null" style="display: none;">
                <div class="layout-table-cell">
                    <span class="bold">Books Total</span>
                </div>
                <div class="layout-table-cell">
                    <span class="details-value" data-bind="text: BooksTotal"></span>
                </div>
            </div>
            
            <div class="layout-table-row" data-bind="visible: BookstoreUrl() !== null">
                <div class="layout-table-cell">
                    <span class="bold">Books</span>
                </div>
                <div class="layout-table-cell">
                    <span class="details-value"><a aria-label="Go to Book Information " data-bind="attr: { href: BookstoreUrl, target: '_blank' }, text: 'Bookstore Information    ', visible: !isNullOrEmpty(BookstoreUrl)" target="_blank">Bookstore Information    </a></span>
                </div>
            </div>
            
            <!-- ko if: typeof TransferStatusDescription() !== 'undefined' && TransferStatusDescription().length > 0 --><!-- /ko -->
        </div>
    </div>
<!-- /ko -->
    </div>
    <div class="esg-modal-dialog__action-section esg-button-group esg-button-group--fluid" role="group" aria-label="button group" data-bind="foreach: buttons">
        <!-- ko if: visible -->
        <div class="esg-button-group__item esg-modal-dialog__button" role="group">
            <button type="button" data-bind="text: title, click: callback, css: classes, disable: disabled, attr: { 'id': id, 'aria-label': aria }" class="esg-button esg-modal-dialog__button esg-button--secondary" id="closeSectionDetailsButton" aria-label="Close Section Details">Close</button>
        </div>
        <!-- /ko -->
    
        <!-- ko if: visible --><!-- /ko -->
    </div>
</div>
<div class="esg-modal-overlay" style="display: none;" data-bind="click: pureModal()?null: toggle, style: {'display': overlayDisplay }"></div></modal-dialog>

    </div>

</div>



            </section>
        </div>
        <footer class="esg-footer">
            <img class="esg-footer__logo" src="/Student/Content/Images/logo-footer.png" alt="Washington College">
            <div class="esg-footer__text">© 2000-2018 Ellucian Company L.P. and its affiliates. All rights reserved. <a href="/Student/Home/privacy">Privacy</a></div>
        </footer>
    </div>

    <script type="text/javascript">

        var baseSiteUrl = "/Student/";
        var currentUserId = "2963140";
             isGuest = Boolean(false);


        var currentProxySubjectIds = ko.toJSON("System.Collections.Generic.List`1[System.String]");
            hideProxyDialog = Boolean(false);

        $(document).ready(function () {
            // global init function (site.js)
            site.initialize();
            isRequestAuthenticated=Boolean(true);
            account.ajaxEnabledAccountPopups = true;

            // Reset the page focus to the top
            $("#topOfForm").focus();

            //check for unsupported browsers on every page load for ALL pages under the Self-Service umbrella
            //this function is defined in global.js
            if (typeof checkSupportedBrowser === "function") {
                checkSupUntitled 2.txtportedBrowser();
            }

            // Apply bindings for tooltips in sidebar
            if(isRequestAuthenticated===true)
            {
            ko.applyBindings({}, document.getElementById("nav-root"));
            }
        });
    </script>
    <!-- Area for capturing ARIA announcements -->
    <span id="aria-announcements" class="offScreen" aria-live="assertive" aria-atomic="false"></span>


<div id="tooltip-0" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Home</div></div><div id="tooltip-1" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Financial Information</div></div><div id="tooltip-2" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Financial Aid</div></div><div id="tooltip-3" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Employment</div></div><div id="tooltip-4" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Employee</div></div><div id="tooltip-5" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Academics</div></div><div id="tooltip-6" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">Student Planning</div></div><div id="tooltip-7" class="esg-tooltip css-tooltip hidden" role="tooltip"><div class="esg-tooltip__arrow"></div><div class="esg-tooltip__content">User Options</div></div></body></html>